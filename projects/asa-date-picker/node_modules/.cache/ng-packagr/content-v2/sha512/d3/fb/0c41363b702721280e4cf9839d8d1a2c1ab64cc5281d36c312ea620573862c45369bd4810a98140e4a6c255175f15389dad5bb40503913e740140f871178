{"hash":"cb7821c8eb8cf7e6011bf18e94629a619bc7b98a","fesm2020":{"code":"import * as i0 from '@angular/core';\nimport { Injectable, ElementRef, Directive, Input, HostListener, EventEmitter, forwardRef, Component, ChangeDetectionStrategy, Output, ViewChild, Inject, ViewChildren, ContentChildren, NgModule } from '@angular/core';\nimport * as i1$1 from '@angular/forms';\nimport { NG_VALUE_ACCESSOR, ReactiveFormsModule, FormsModule } from '@angular/forms';\nimport { trigger, state, style, transition, animate } from '@angular/animations';\nimport * as i1 from '@angular/cdk/overlay';\nimport { CdkOverlayOrigin, ConnectionPositionPair, OverlayModule } from '@angular/cdk/overlay';\nimport { BehaviorSubject, Subject, takeUntil as takeUntil$1, fromEvent } from 'rxjs';\nimport { __decorate } from 'tslib';\nimport { coerceBooleanProperty } from '@angular/cdk/coercion';\nimport { takeUntil } from 'rxjs/operators';\nimport { NgIf, NgFor, NgTemplateOutlet, DOCUMENT } from '@angular/common';\nimport { isValid, parse, format, addDays, addMonths, addYears, addHours, startOfWeek, endOfMonth, isSameDay, isSameMonth, isSameYear, isAfter, isBefore, startOfMonth, max, setYear, getDaysInMonth } from 'date-fns-jalali';\nimport { parseISO, isEqual, startOfDay, addMinutes, isValid as isValid$1, parse as parse$1, format as format$1, addDays as addDays$1, addMonths as addMonths$1, addYears as addYears$1, addHours as addHours$1, startOfWeek as startOfWeek$1, isSameDay as isSameDay$1, isSameMonth as isSameMonth$1, isSameYear as isSameYear$1, isAfter as isAfter$1, isBefore as isBefore$1, startOfMonth as startOfMonth$1, endOfMonth as endOfMonth$1, max as max$1, setYear as setYear$1, getDaysInMonth as getDaysInMonth$1 } from 'date-fns';\n\n/**\r\n * Use of this source code is governed by an MIT-style license that can be\r\n * found in the LICENSE file at https://github.com/NG-ZORRO/../blob/master/LICENSE\r\n */\r\nclass AnimationDuration {\r\n}\r\nAnimationDuration.SLOW = '0.3s'; // Modal\r\nAnimationDuration.BASE = '0.2s';\r\nAnimationDuration.FAST = '0.1s'; // Tooltip\r\nclass AnimationCurves {\r\n}\r\nAnimationCurves.EASE_BASE_OUT = 'cubic-bezier(0.7, 0.3, 0.1, 1)';\r\nAnimationCurves.EASE_BASE_IN = 'cubic-bezier(0.9, 0, 0.3, 0.7)';\r\nAnimationCurves.EASE_OUT = 'cubic-bezier(0.215, 0.61, 0.355, 1)';\r\nAnimationCurves.EASE_IN = 'cubic-bezier(0.55, 0.055, 0.675, 0.19)';\r\nAnimationCurves.EASE_IN_OUT = 'cubic-bezier(0.645, 0.045, 0.355, 1)';\r\nAnimationCurves.EASE_OUT_BACK = 'cubic-bezier(0.12, 0.4, 0.29, 1.46)';\r\nAnimationCurves.EASE_IN_BACK = 'cubic-bezier(0.71, -0.46, 0.88, 0.6)';\r\nAnimationCurves.EASE_IN_OUT_BACK = 'cubic-bezier(0.71, -0.46, 0.29, 1.46)';\r\nAnimationCurves.EASE_OUT_CIRC = 'cubic-bezier(0.08, 0.82, 0.17, 1)';\r\nAnimationCurves.EASE_IN_CIRC = 'cubic-bezier(0.6, 0.04, 0.98, 0.34)';\r\nAnimationCurves.EASE_IN_OUT_CIRC = 'cubic-bezier(0.78, 0.14, 0.15, 0.86)';\r\nAnimationCurves.EASE_OUT_QUINT = 'cubic-bezier(0.23, 1, 0.32, 1)';\r\nAnimationCurves.EASE_IN_QUINT = 'cubic-bezier(0.755, 0.05, 0.855, 0.06)';\r\nAnimationCurves.EASE_IN_OUT_QUINT = 'cubic-bezier(0.86, 0, 0.07, 1)';\n\n/**\r\n * Use of this source code is governed by an MIT-style license that can be\r\n * found in the LICENSE file at https://github.com/NG-ZORRO/../blob/master/LICENSE\r\n */\r\nconst ANIMATION_TRANSITION_IN = `${AnimationDuration.BASE} ${AnimationCurves.EASE_OUT_QUINT}`;\r\nconst ANIMATION_TRANSITION_OUT = `${AnimationDuration.BASE} ${AnimationCurves.EASE_IN_QUINT}`;\r\nconst slideMotion = trigger('slideMotion', [\r\n    state('void', style({\r\n        opacity: 0,\r\n        transform: 'scaleY(0.8)'\r\n    })),\r\n    state('enter', style({\r\n        opacity: 1,\r\n        transform: 'scaleY(1)'\r\n    })),\r\n    transition('void => *', [animate(ANIMATION_TRANSITION_IN)]),\r\n    transition('* => void', [animate(ANIMATION_TRANSITION_OUT)])\r\n]);\r\nconst slideAlertMotion = trigger('slideAlertMotion', [\r\n    transition(':leave', [\r\n        style({ opacity: 1, transform: 'scaleY(1)', transformOrigin: '0% 0%' }),\r\n        animate(`${AnimationDuration.SLOW} ${AnimationCurves.EASE_IN_OUT_CIRC}`, style({\r\n            opacity: 0,\r\n            transform: 'scaleY(0)',\r\n            transformOrigin: '0% 0%'\r\n        }))\r\n    ])\r\n]);\n\nclass lang_Fa {\r\n    constructor() {\r\n        this.today = \"امروز\";\r\n        this.lastDay = \"آخرین روز\";\r\n        this.lastWeek = \"آخرین هفته\";\r\n        this.lastMonth = \"آخرین ماه\";\r\n        this.custom = \"دلخواه\";\r\n        this.previousMonth = \"ماه قبل\";\r\n        this.nextMonth = \"ماه بعد\";\r\n        this.previousYear = \"سال قبل\";\r\n        this.nextYear = \"سال بعد\";\r\n        this.selectTime = \"انتخاب زمان\";\r\n        this.selectDate = \"انتخاب تاریخ\";\r\n        this.selectMonth = \"انتخاب ماه\";\r\n        this.selectYear = \"انتخاب سال\";\r\n        this.selectDateRange = \"انتخاب محدوده تاریخ\";\r\n        this.startDate = \"از تاریخ\";\r\n        this.endDate = \"تا تاریخ\";\r\n        this.pm = \"ب.ظ\";\r\n        this.am = \"ق.ظ\";\r\n        this.ok = \"تایید\";\r\n        this.cancel = \"لغو\";\r\n        this.now = \"اکنون\";\r\n    }\r\n}\r\nlang_Fa.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"14.3.0\", ngImport: i0, type: lang_Fa, deps: [], target: i0.ɵɵFactoryTarget.Injectable });\r\nlang_Fa.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"14.3.0\", ngImport: i0, type: lang_Fa, providedIn: 'root' });\r\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"14.3.0\", ngImport: i0, type: lang_Fa, decorators: [{\r\n            type: Injectable,\r\n            args: [{\r\n                    providedIn: 'root'\r\n                }]\r\n        }] });\r\nclass lang_En {\r\n    constructor() {\r\n        this.today = \"Today\";\r\n        this.lastDay = \"Last Day\";\r\n        this.lastWeek = \"Last Week\";\r\n        this.lastMonth = \"Last Month\";\r\n        this.custom = \"Custom\";\r\n        this.previousMonth = \"Previous Month\";\r\n        this.nextMonth = \"Next Month\";\r\n        this.previousYear = \"Previous Year\";\r\n        this.nextYear = \"Next Year\";\r\n        this.selectTime = \"Select time\";\r\n        this.selectDate = \"Select date\";\r\n        this.selectMonth = \"Select month\";\r\n        this.selectYear = \"Select year\";\r\n        this.selectDateRange = \"Select date range\";\r\n        this.startDate = \"Start date\";\r\n        this.endDate = \"End date\";\r\n        this.pm = \"PM\";\r\n        this.am = \"AM\";\r\n        this.ok = \"Ok\";\r\n        this.cancel = \"Cancel\";\r\n        this.now = \"Now\";\r\n    }\r\n}\r\nlang_En.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"14.3.0\", ngImport: i0, type: lang_En, deps: [], target: i0.ɵɵFactoryTarget.Injectable });\r\nlang_En.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"14.3.0\", ngImport: i0, type: lang_En, providedIn: 'root' });\r\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"14.3.0\", ngImport: i0, type: lang_En, decorators: [{\r\n            type: Injectable,\r\n            args: [{\r\n                    providedIn: 'root'\r\n                }]\r\n        }] });\n\nclass AsaDatePickerService {\r\n    /**\r\n     *\r\n     */\r\n    constructor(locale_fa, locale_en) {\r\n        this.locale_fa = locale_fa;\r\n        this.locale_en = locale_en;\r\n        this.activeInput$ = new BehaviorSubject('');\r\n    }\r\n    getActiveInputValue() {\r\n        return this.activeInput$.getValue();\r\n    }\r\n}\r\nAsaDatePickerService.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"14.3.0\", ngImport: i0, type: AsaDatePickerService, deps: [{ token: lang_Fa }, { token: lang_En }], target: i0.ɵɵFactoryTarget.Injectable });\r\nAsaDatePickerService.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"14.3.0\", ngImport: i0, type: AsaDatePickerService });\r\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"14.3.0\", ngImport: i0, type: AsaDatePickerService, decorators: [{\r\n            type: Injectable\r\n        }], ctorParameters: function () { return [{ type: lang_Fa }, { type: lang_En }]; } });\r\nclass DestroyService extends Subject {\r\n    ngOnDestroy() {\r\n        this.next();\r\n        this.complete();\r\n    }\r\n}\r\nDestroyService.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"14.3.0\", ngImport: i0, type: DestroyService, deps: null, target: i0.ɵɵFactoryTarget.Injectable });\r\nDestroyService.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"14.3.0\", ngImport: i0, type: DestroyService });\r\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"14.3.0\", ngImport: i0, type: DestroyService, decorators: [{\r\n            type: Injectable\r\n        }] });\n\nfunction propDecoratorFactory(name, fallback) {\r\n    function propDecorator(target, propName, originalDescriptor) {\r\n        const privatePropName = `$$__zorroPropDecorator__${propName}`;\r\n        if (Object.prototype.hasOwnProperty.call(target, privatePropName)) {\r\n            console.warn(`The prop \"${privatePropName}\" is already exist, it will be overrided by ${name} decorator.`);\r\n        }\r\n        Object.defineProperty(target, privatePropName, {\r\n            configurable: true,\r\n            writable: true\r\n        });\r\n        return {\r\n            get() {\r\n                return originalDescriptor && originalDescriptor.get\r\n                    ? originalDescriptor.get.bind(this)()\r\n                    : this[privatePropName];\r\n            },\r\n            set(value) {\r\n                if (originalDescriptor && originalDescriptor.set) {\r\n                    originalDescriptor.set.bind(this)(fallback(value));\r\n                }\r\n                this[privatePropName] = fallback(value);\r\n            }\r\n        };\r\n    }\r\n    return propDecorator;\r\n}\r\n/**\r\n * Input decorator that handle a prop to do get/set automatically with toBoolean\r\n *\r\n * Why not using @InputBoolean alone without @Input? AOT needs @Input to be visible\r\n *\r\n * @howToUse\r\n * ```\r\n * @Input() @InputBoolean() visible: boolean = false;\r\n *\r\n * // Act as below:\r\n * // @Input()\r\n * // get visible() { return this.__visible; }\r\n * // set visible(value) { this.__visible = value; }\r\n * // __visible = false;\r\n * ```\r\n */\r\nfunction InputBoolean() {\r\n    return propDecoratorFactory('InputBoolean', toBoolean);\r\n}\r\nfunction toBoolean(value) {\r\n    return coerceBooleanProperty(value);\r\n}\r\nclass NzConnectedOverlayDirective {\r\n    constructor(cdkConnectedOverlay, nzDestroyService) {\r\n        this.cdkConnectedOverlay = cdkConnectedOverlay;\r\n        this.nzDestroyService = nzDestroyService;\r\n        this.nzArrowPointAtCenter = false;\r\n        this.cdkConnectedOverlay.backdropClass = 'nz-overlay-transparent-backdrop';\r\n        this.cdkConnectedOverlay.positionChange\r\n            .pipe(takeUntil(this.nzDestroyService))\r\n            .subscribe((position) => {\r\n            if (this.nzArrowPointAtCenter) {\r\n                this.updateArrowPosition(position);\r\n            }\r\n        });\r\n    }\r\n    updateArrowPosition(position) {\r\n        const originRect = this.getOriginRect();\r\n        const placement = getPlacementName(position);\r\n        let offsetX = 0;\r\n        let offsetY = 0;\r\n        if (placement === 'topLeft' || placement === 'bottomLeft') {\r\n            offsetX = originRect.width / 2 - 14;\r\n        }\r\n        else if (placement === 'topRight' || placement === 'bottomRight') {\r\n            offsetX = -(originRect.width / 2 - 14);\r\n        }\r\n        else if (placement === 'leftTop' || placement === 'rightTop') {\r\n            offsetY = originRect.height / 2 - 10;\r\n        }\r\n        else if (placement === 'leftBottom' || placement === 'rightBottom') {\r\n            offsetY = -(originRect.height / 2 - 10);\r\n        }\r\n        if (this.cdkConnectedOverlay.offsetX !== offsetX || this.cdkConnectedOverlay.offsetY !== offsetY) {\r\n            this.cdkConnectedOverlay.offsetY = offsetY;\r\n            this.cdkConnectedOverlay.offsetX = offsetX;\r\n            this.cdkConnectedOverlay.overlayRef.updatePosition();\r\n        }\r\n    }\r\n    getFlexibleConnectedPositionStrategyOrigin() {\r\n        if (this.cdkConnectedOverlay.origin instanceof CdkOverlayOrigin) {\r\n            return this.cdkConnectedOverlay.origin.elementRef;\r\n        }\r\n        else {\r\n            return this.cdkConnectedOverlay.origin;\r\n        }\r\n    }\r\n    getOriginRect() {\r\n        const origin = this.getFlexibleConnectedPositionStrategyOrigin();\r\n        if (origin instanceof ElementRef) {\r\n            return origin.nativeElement.getBoundingClientRect();\r\n        }\r\n        // Check for Element so SVG elements are also supported.\r\n        if (origin instanceof Element) {\r\n            return origin.getBoundingClientRect();\r\n        }\r\n        const width = origin.width || 0;\r\n        const height = origin.height || 0;\r\n        // If the origin is a point, return a client rect as if it was a 0x0 element at the point.\r\n        return {\r\n            top: origin.y,\r\n            bottom: origin.y + height,\r\n            left: origin.x,\r\n            right: origin.x + width,\r\n            height,\r\n            width\r\n        };\r\n    }\r\n}\r\nNzConnectedOverlayDirective.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"14.3.0\", ngImport: i0, type: NzConnectedOverlayDirective, deps: [{ token: i1.CdkConnectedOverlay }, { token: DestroyService }], target: i0.ɵɵFactoryTarget.Directive });\r\nNzConnectedOverlayDirective.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"14.0.0\", version: \"14.3.0\", type: NzConnectedOverlayDirective, isStandalone: true, selector: \"[cdkConnectedOverlay][nzConnectedOverlay]\", inputs: { nzArrowPointAtCenter: \"nzArrowPointAtCenter\" }, providers: [DestroyService], exportAs: [\"nzConnectedOverlay\"], ngImport: i0 });\r\n__decorate([\r\n    InputBoolean()\r\n], NzConnectedOverlayDirective.prototype, \"nzArrowPointAtCenter\", void 0);\r\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"14.3.0\", ngImport: i0, type: NzConnectedOverlayDirective, decorators: [{\r\n            type: Directive,\r\n            args: [{\r\n                    selector: '[cdkConnectedOverlay][nzConnectedOverlay]',\r\n                    exportAs: 'nzConnectedOverlay',\r\n                    standalone: true,\r\n                    providers: [DestroyService]\r\n                }]\r\n        }], ctorParameters: function () { return [{ type: i1.CdkConnectedOverlay }, { type: DestroyService }]; }, propDecorators: { nzArrowPointAtCenter: [{\r\n                type: Input\r\n            }] } });\r\n//overlay-position.ts:\r\nconst POSITION_MAP = {\r\n    top: new ConnectionPositionPair({ originX: 'center', originY: 'top' }, { overlayX: 'center', overlayY: 'bottom' }),\r\n    topCenter: new ConnectionPositionPair({ originX: 'center', originY: 'top' }, { overlayX: 'center', overlayY: 'bottom' }),\r\n    topLeft: new ConnectionPositionPair({ originX: 'start', originY: 'top' }, { overlayX: 'start', overlayY: 'bottom' }),\r\n    topRight: new ConnectionPositionPair({ originX: 'end', originY: 'top' }, { overlayX: 'end', overlayY: 'bottom' }),\r\n    right: new ConnectionPositionPair({ originX: 'end', originY: 'center' }, { overlayX: 'start', overlayY: 'center' }),\r\n    rightTop: new ConnectionPositionPair({ originX: 'end', originY: 'top' }, { overlayX: 'start', overlayY: 'top' }),\r\n    rightBottom: new ConnectionPositionPair({ originX: 'end', originY: 'bottom' }, { overlayX: 'start', overlayY: 'bottom' }),\r\n    bottom: new ConnectionPositionPair({ originX: 'center', originY: 'bottom' }, { overlayX: 'center', overlayY: 'top' }),\r\n    bottomCenter: new ConnectionPositionPair({ originX: 'center', originY: 'bottom' }, { overlayX: 'center', overlayY: 'top' }),\r\n    bottomLeft: new ConnectionPositionPair({ originX: 'start', originY: 'bottom' }, { overlayX: 'start', overlayY: 'top' }),\r\n    bottomRight: new ConnectionPositionPair({ originX: 'end', originY: 'bottom' }, { overlayX: 'end', overlayY: 'top' }),\r\n    left: new ConnectionPositionPair({ originX: 'start', originY: 'center' }, { overlayX: 'end', overlayY: 'center' }),\r\n    leftTop: new ConnectionPositionPair({ originX: 'start', originY: 'top' }, { overlayX: 'end', overlayY: 'top' }),\r\n    leftBottom: new ConnectionPositionPair({ originX: 'start', originY: 'bottom' }, { overlayX: 'end', overlayY: 'bottom' })\r\n};\r\nconst DEFAULT_TOOLTIP_POSITIONS = [POSITION_MAP.top, POSITION_MAP.right, POSITION_MAP.bottom, POSITION_MAP.left];\r\nconst DEFAULT_CASCADER_POSITIONS = [\r\n    POSITION_MAP.bottomLeft,\r\n    POSITION_MAP.bottomRight,\r\n    POSITION_MAP.topLeft,\r\n    POSITION_MAP.topRight,\r\n    POSITION_MAP.topCenter,\r\n    POSITION_MAP.bottomCenter\r\n];\r\nconst DEFAULT_MENTION_TOP_POSITIONS = [\r\n    new ConnectionPositionPair({ originX: 'start', originY: 'bottom' }, { overlayX: 'start', overlayY: 'bottom' }),\r\n    new ConnectionPositionPair({ originX: 'start', originY: 'bottom' }, { overlayX: 'end', overlayY: 'bottom' })\r\n];\r\nconst DEFAULT_MENTION_BOTTOM_POSITIONS = [\r\n    POSITION_MAP.bottomLeft,\r\n    new ConnectionPositionPair({ originX: 'start', originY: 'bottom' }, { overlayX: 'end', overlayY: 'top' })\r\n];\r\nfunction getPlacementName(position) {\r\n    for (const placement in POSITION_MAP) {\r\n        if (position.connectionPair.originX === POSITION_MAP[placement].originX &&\r\n            position.connectionPair.originY === POSITION_MAP[placement].originY &&\r\n            position.connectionPair.overlayX === POSITION_MAP[placement].overlayX &&\r\n            position.connectionPair.overlayY === POSITION_MAP[placement].overlayY) {\r\n            return placement;\r\n        }\r\n    }\r\n    return undefined;\r\n}\r\nconst DATE_PICKER_POSITION_MAP = {\r\n    bottomLeft: new ConnectionPositionPair({ originX: 'start', originY: 'bottom' }, { overlayX: 'start', overlayY: 'top' }, undefined, 2),\r\n    topLeft: new ConnectionPositionPair({ originX: 'start', originY: 'top' }, { overlayX: 'start', overlayY: 'bottom' }, undefined, -2),\r\n    bottomRight: new ConnectionPositionPair({ originX: 'end', originY: 'bottom' }, { overlayX: 'end', overlayY: 'top' }, undefined, 2),\r\n    topRight: new ConnectionPositionPair({ originX: 'end', originY: 'top' }, { overlayX: 'end', overlayY: 'bottom' }, undefined, -2)\r\n};\r\nconst DEFAULT_DATE_PICKER_POSITIONS = [\r\n    DATE_PICKER_POSITION_MAP.bottomLeft,\r\n    DATE_PICKER_POSITION_MAP.topLeft,\r\n    DATE_PICKER_POSITION_MAP.bottomRight,\r\n    DATE_PICKER_POSITION_MAP.topRight\r\n];\n\nclass DateMaskDirective {\r\n    constructor(el) {\r\n        this.el = el;\r\n        this.dateFormat = 'yyyy/MM/dd';\r\n        this.disableInputMask = false;\r\n        this.delimiters = [];\r\n        this.parts = [];\r\n        this.lastValue = '';\r\n    }\r\n    ngOnInit() {\r\n        this.parseFormat();\r\n    }\r\n    parseFormat() {\r\n        if (this.disableInputMask)\r\n            return;\r\n        this.parts = [];\r\n        this.delimiters = [];\r\n        let currentPart = '';\r\n        for (let i = 0; i < this.dateFormat.length; i++) {\r\n            const char = this.dateFormat[i];\r\n            if (this.isFormatChar(char)) {\r\n                currentPart += char;\r\n            }\r\n            else {\r\n                if (currentPart) {\r\n                    this.parts.push(currentPart);\r\n                    currentPart = '';\r\n                }\r\n                this.delimiters.push(char);\r\n            }\r\n        }\r\n        if (currentPart) {\r\n            this.parts.push(currentPart);\r\n        }\r\n    }\r\n    isFormatChar(char) {\r\n        return /[yMdHhmsa]/i.test(char);\r\n    }\r\n    onInput(event) {\r\n        if (this.disableInputMask)\r\n            return;\r\n        const input = event.target;\r\n        const cursorPosition = input.selectionStart || 0;\r\n        let value = input.value.replace(/[^0-9APMapm\\s:/\\-\\.]/g, '');\r\n        // Allow backspace/delete\r\n        if (value.length < this.lastValue.length) {\r\n            this.lastValue = value;\r\n            return;\r\n        }\r\n        let formattedParts = [];\r\n        let currentValue = value;\r\n        let shouldAddDelimiter = false;\r\n        let totalLength = 0;\r\n        let newCursorPosition = cursorPosition;\r\n        for (let i = 0; i < this.parts.length; i++) {\r\n            const part = this.extractPart(currentValue, this.parts[i]);\r\n            if (!part && part !== '0')\r\n                break;\r\n            const expectedLength = this.getPartLength(this.parts[i]);\r\n            let formattedPart = part;\r\n            if (formattedPart.length >= expectedLength) {\r\n                formattedPart = this.validatePart(formattedPart.slice(0, expectedLength), this.parts[i]);\r\n                shouldAddDelimiter = true;\r\n            }\r\n            formattedParts.push(formattedPart);\r\n            totalLength += formattedPart.length;\r\n            if (shouldAddDelimiter && i < this.parts.length - 1) {\r\n                formattedParts.push(this.delimiters[i] || '');\r\n                totalLength += 1;\r\n                shouldAddDelimiter = false;\r\n                if (cursorPosition === totalLength - 1) {\r\n                    newCursorPosition = totalLength;\r\n                }\r\n            }\r\n            currentValue = this.removeProcessedPart(currentValue, part);\r\n        }\r\n        const formattedValue = formattedParts.join('');\r\n        input.value = formattedValue;\r\n        // Set cursor position\r\n        newCursorPosition = Math.min(newCursorPosition, totalLength);\r\n        input.setSelectionRange(newCursorPosition, newCursorPosition);\r\n        this.lastValue = formattedValue;\r\n    }\r\n    extractPart(value, format) {\r\n        if (!value)\r\n            return '';\r\n        if (format[0].toLowerCase() === 'a') {\r\n            // Handle AM/PM\r\n            const match = value.match(/^[AaPp][Mm]?/);\r\n            return match ? match[0].toUpperCase() : '';\r\n        }\r\n        // Handle numeric parts\r\n        const match = value.match(/^\\d+/);\r\n        return match ? match[0] : '';\r\n    }\r\n    removeProcessedPart(value, part) {\r\n        if (!part)\r\n            return value;\r\n        // Remove part and following delimiter if exists\r\n        const remainingValue = value.slice(part.length);\r\n        return remainingValue.replace(/^[:/\\s-]/, '');\r\n    }\r\n    onKeyDown(event) {\r\n        if (this.disableInputMask)\r\n            return;\r\n        const input = event.target;\r\n        const cursorPosition = input.selectionStart || 0;\r\n        // Allow control keys\r\n        if (event.key === 'Backspace' || event.key === 'Delete' ||\r\n            event.key === 'ArrowLeft' || event.key === 'ArrowRight' ||\r\n            event.key === 'Tab' || event.ctrlKey) {\r\n            return;\r\n        }\r\n        const currentPartIndex = this.getCurrentPartIndex(input.value, cursorPosition);\r\n        if (currentPartIndex === -1)\r\n            return;\r\n        const currentFormat = this.parts[currentPartIndex];\r\n        const isTimeDelimiter = event.key === ':' && cursorPosition > 0 &&\r\n            (this.parts[currentPartIndex - 1]?.includes('H') ||\r\n                this.parts[currentPartIndex - 1]?.includes('h'));\r\n        // Allow time delimiter after hours\r\n        if (isTimeDelimiter) {\r\n            if (this.delimiters[currentPartIndex - 1] === ':') {\r\n                const parts = input.value.split(/[:/\\s-]/);\r\n                const currentPart = this.validatePart(parts[currentPartIndex - 1], this.parts[currentPartIndex - 1]);\r\n                parts[currentPartIndex - 1] = currentPart;\r\n                const newValue = parts.slice(0, currentPartIndex).join(this.delimiters[currentPartIndex - 1]) + ':';\r\n                input.value = newValue + parts.slice(currentPartIndex).join(this.delimiters[currentPartIndex]);\r\n                input.setSelectionRange(newValue.length, newValue.length);\r\n                event.preventDefault();\r\n            }\r\n            return;\r\n        }\r\n        // Handle AM/PM input\r\n        if (currentFormat[0].toLowerCase() === 'a') {\r\n            if (!/^[AaPpMm]$/.test(event.key)) {\r\n                event.preventDefault();\r\n            }\r\n            return;\r\n        }\r\n        // Allow only digits for other parts\r\n        if (!/^\\d$/.test(event.key)) {\r\n            event.preventDefault();\r\n        }\r\n    }\r\n    validatePart(value, format) {\r\n        if (value === '')\r\n            return '';\r\n        const type = format[0].toLowerCase();\r\n        if (type === 'a') {\r\n            const upperValue = value.toUpperCase();\r\n            if (value.length === 1) {\r\n                return upperValue === 'A' || upperValue === 'P' ? upperValue : '';\r\n            }\r\n            return ['AM', 'PM'].includes(upperValue) ? upperValue : upperValue[0];\r\n        }\r\n        const numValue = parseInt(value, 10);\r\n        switch (type) {\r\n            case 'h': // 12-hour format\r\n                if (format[0] == 'H')\r\n                    return Math.min(Math.max(numValue, 0), 23).toString().padStart(2, '0');\r\n                return Math.min(Math.max(numValue, 1), 12).toString().padStart(2, '0');\r\n            case 'm': // month or minute\r\n                if (format === 'MM') {\r\n                    return Math.min(Math.max(numValue, 1), 12).toString().padStart(2, '0');\r\n                }\r\n                return Math.min(Math.max(numValue, 0), 59).toString().padStart(2, '0');\r\n            case 's': // seconds\r\n                return Math.min(Math.max(numValue, 0), 59).toString().padStart(2, '0');\r\n            case 'd': // day\r\n                return Math.min(Math.max(numValue, 1), 31).toString().padStart(2, '0');\r\n            case 'y': // year\r\n                if (format.length === 2)\r\n                    return value.padStart(2, '0');\r\n                return value.padStart(4, '0');\r\n            default:\r\n                return value;\r\n        }\r\n    }\r\n    getPartLength(format) {\r\n        const type = format[0].toLowerCase();\r\n        switch (type) {\r\n            case 'y': return format.length === 2 ? 2 : 4;\r\n            case 'a': return format.length === 1 ? 1 : 2;\r\n            default: return 2;\r\n        }\r\n    }\r\n    getCurrentPartIndex(value, cursorPosition) {\r\n        const parts = value.split(/[:/\\s-]/);\r\n        let currentIndex = 0;\r\n        let totalLength = 0;\r\n        for (let i = 0; i < parts.length; i++) {\r\n            totalLength += parts[i].length;\r\n            if (cursorPosition <= totalLength + i) {\r\n                return i;\r\n            }\r\n            totalLength += 1; // Add delimiter length\r\n        }\r\n        return parts.length - 1;\r\n    }\r\n}\r\nDateMaskDirective.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"14.3.0\", ngImport: i0, type: DateMaskDirective, deps: [{ token: i0.ElementRef }], target: i0.ɵɵFactoryTarget.Directive });\r\nDateMaskDirective.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"14.0.0\", version: \"14.3.0\", type: DateMaskDirective, isStandalone: true, selector: \"[asa-dateMask]\", inputs: { dateFormat: [\"asa-dateMask\", \"dateFormat\"], disableInputMask: \"disableInputMask\" }, host: { listeners: { \"input\": \"onInput($event)\", \"keydown\": \"onKeyDown($event)\" } }, ngImport: i0 });\r\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"14.3.0\", ngImport: i0, type: DateMaskDirective, decorators: [{\r\n            type: Directive,\r\n            args: [{\r\n                    selector: '[asa-dateMask]',\r\n                    standalone: true\r\n                }]\r\n        }], ctorParameters: function () { return [{ type: i0.ElementRef }]; }, propDecorators: { dateFormat: [{\r\n                type: Input,\r\n                args: ['asa-dateMask']\r\n            }], disableInputMask: [{\r\n                type: Input\r\n            }], onInput: [{\r\n                type: HostListener,\r\n                args: ['input', ['$event']]\r\n            }], onKeyDown: [{\r\n                type: HostListener,\r\n                args: ['keydown', ['$event']]\r\n            }] } });\n\nclass JalaliDateAdapter {\r\n    today() {\r\n        return new Date();\r\n    }\r\n    parse(value, formatString) {\r\n        if (typeof value === 'string') {\r\n            // Check if it's in ISO 8601 format\r\n            if (value.includes('T')) {\r\n                const parsedDate = parseISO(value);\r\n                return isValid(parsedDate) ? parsedDate : null;\r\n            }\r\n            try {\r\n                const parsedDate = parse(value, formatString, new Date());\r\n                return isValid(parsedDate) ? parsedDate : null;\r\n            }\r\n            catch (error) {\r\n                console.error('Error parsing date:', error);\r\n                return null;\r\n            }\r\n        }\r\n        else if (value instanceof Date) {\r\n            return isValid(value) ? value : null;\r\n        }\r\n        return null;\r\n    }\r\n    format(date, formatString) {\r\n        return format(date, formatString);\r\n    }\r\n    addDays(date, amount) {\r\n        return addDays(date, amount);\r\n    }\r\n    addMonths(date, amount) {\r\n        return addMonths(date, amount);\r\n    }\r\n    addYears(date, amount) {\r\n        return addYears(date, amount);\r\n    }\r\n    addHours(date, amount) {\r\n        return addHours(date, amount);\r\n    }\r\n    getYear(date) {\r\n        return date ? parseInt(format(date, 'yyyy')) : null;\r\n    }\r\n    getMonth(date) {\r\n        // Jalali months are 1-indexed in date-fns-jalali\r\n        return date ? parseInt(format(date, 'M')) - 1 : null;\r\n    }\r\n    getDate(date) {\r\n        return date ? parseInt(format(date, 'dd')) : null;\r\n    }\r\n    getDayOfWeek(date) {\r\n        return parseInt(format(date, 'i')) - 1;\r\n    }\r\n    getMonthNames(style) {\r\n        const jalaliMonths = [\r\n            'فروردین', 'اردیبهشت', 'خرداد', 'تیر', 'مرداد', 'شهریور',\r\n            'مهر', 'آبان', 'آذر', 'دی', 'بهمن', 'اسفند'\r\n        ];\r\n        switch (style) {\r\n            case 'long':\r\n                return jalaliMonths;\r\n            case 'short':\r\n                return jalaliMonths.map(month => month.substring(0, 3));\r\n            case 'narrow':\r\n                return jalaliMonths.map(month => month.substring(0, 1));\r\n            default:\r\n                return jalaliMonths;\r\n        }\r\n    }\r\n    getDateNames() {\r\n        return Array.from({ length: 31 }, (_, i) => (i + 1).toString());\r\n    }\r\n    getDayOfWeekNames(style) {\r\n        const formats = {\r\n            long: 'EEEE',\r\n            short: 'EEEEE',\r\n            narrow: 'EEEEEE'\r\n        };\r\n        return Array.from({ length: 7 }, (_, i) => format(addDays(startOfWeek(new Date()), i), formats[style]));\r\n    }\r\n    getFirstDayOfWeek() {\r\n        return 6; // Saturday is the first day of the week in the Jalali calendar\r\n    }\r\n    getNumDaysInMonth(date) {\r\n        return parseInt(format(endOfMonth(date), 'd'));\r\n    }\r\n    clone(date) {\r\n        return new Date(date.getTime());\r\n    }\r\n    createDate(year, month, date) {\r\n        // Adjust for 0-indexed months in the interface vs 1-indexed months in date-fns-jalali\r\n        return parse(`${year}/${month + 1}/${date}`, 'yyyy/M/d', new Date());\r\n    }\r\n    isSameDay(date1, date2) {\r\n        return isSameDay(date1, date2);\r\n    }\r\n    isSameMonth(date1, date2) {\r\n        return isSameMonth(date1, date2);\r\n    }\r\n    isSameYear(date1, date2) {\r\n        return isSameYear(date1, date2);\r\n    }\r\n    isAfter(date1, date2) {\r\n        return isAfter(date1, date2);\r\n    }\r\n    isBefore(date1, date2) {\r\n        return isBefore(date1, date2);\r\n    }\r\n    isEqual(date1, date2) {\r\n        return isEqual(date1, date2);\r\n    }\r\n    startOfMonth(date) {\r\n        return startOfMonth(date);\r\n    }\r\n    endOfMonth(date) {\r\n        return endOfMonth(date);\r\n    }\r\n    startOfWeek(date) {\r\n        return startOfWeek(date, { weekStartsOn: this.getFirstDayOfWeek() });\r\n    }\r\n    isValidFormat(dateString, formatString) {\r\n        try {\r\n            const parsedDate = parse(dateString, formatString, new Date());\r\n            if (!isValid(parsedDate)) {\r\n                return false;\r\n            }\r\n            // Check if the formatted parsed date matches the original date string\r\n            const formattedDate = format(parsedDate, formatString);\r\n            return formattedDate === dateString;\r\n        }\r\n        catch (error) {\r\n            return false;\r\n        }\r\n    }\r\n    max(dates) {\r\n        return max(dates);\r\n    }\r\n    setYear(date, year) {\r\n        return setYear(date, year);\r\n    }\r\n    startOfDay(date) {\r\n        return startOfDay(date);\r\n    }\r\n    getHours(date) {\r\n        return date ? parseInt(format(date, 'HH')) : null;\r\n    }\r\n    getMinutes(date) {\r\n        return date ? parseInt(format(date, 'mm')) : null;\r\n    }\r\n    getSeconds(date) {\r\n        return date ? parseInt(format(date, 'ss')) : null;\r\n    }\r\n    setHours(date, hours) {\r\n        const newDate = this.clone(date);\r\n        newDate.setHours(hours);\r\n        return newDate;\r\n    }\r\n    setMinutes(date, minutes) {\r\n        const newDate = this.clone(date);\r\n        newDate.setMinutes(minutes);\r\n        return newDate;\r\n    }\r\n    setSeconds(date, seconds) {\r\n        const newDate = this.clone(date);\r\n        newDate.setSeconds(seconds);\r\n        return newDate;\r\n    }\r\n    getDaysInMonth(date) {\r\n        return getDaysInMonth(date);\r\n    }\r\n    addMinutes(date, amount) {\r\n        return addMinutes(date, amount);\r\n    }\r\n}\r\nJalaliDateAdapter.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"14.3.0\", ngImport: i0, type: JalaliDateAdapter, deps: [], target: i0.ɵɵFactoryTarget.Injectable });\r\nJalaliDateAdapter.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"14.3.0\", ngImport: i0, type: JalaliDateAdapter, providedIn: 'root' });\r\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"14.3.0\", ngImport: i0, type: JalaliDateAdapter, decorators: [{\r\n            type: Injectable,\r\n            args: [{\r\n                    providedIn: 'root'\r\n                }]\r\n        }] });\r\nclass GregorianDateAdapter {\r\n    today() {\r\n        return new Date();\r\n    }\r\n    parse(value, formatString) {\r\n        if (typeof value === 'string') {\r\n            // Check if it's in ISO 8601 format\r\n            if (value.includes('T')) {\r\n                const parsedDate = parseISO(value);\r\n                return isValid$1(parsedDate) ? parsedDate : null;\r\n            }\r\n            try {\r\n                let parsedDate;\r\n                if (formatString === \"ISO\") {\r\n                    parsedDate = parseISO(value);\r\n                }\r\n                else {\r\n                    parsedDate = parse$1(value, formatString, new Date());\r\n                }\r\n                return isValid$1(parsedDate) ? parsedDate : null;\r\n            }\r\n            catch (error) {\r\n                console.error('Error parsing date:', error);\r\n                return null;\r\n            }\r\n        }\r\n        else if (value instanceof Date) {\r\n            return isValid$1(value) ? value : null;\r\n        }\r\n        return null;\r\n    }\r\n    format(date, formatString) {\r\n        return format$1(date, formatString);\r\n    }\r\n    addDays(date, amount) {\r\n        return addDays$1(date, amount);\r\n    }\r\n    addMonths(date, amount) {\r\n        return addMonths$1(date, amount);\r\n    }\r\n    addYears(date, amount) {\r\n        return addYears$1(date, amount);\r\n    }\r\n    addHours(date, amount) {\r\n        return addHours$1(date, amount);\r\n    }\r\n    getYear(date) {\r\n        return date.getFullYear();\r\n    }\r\n    getMonth(date) {\r\n        return date.getMonth();\r\n    }\r\n    getDate(date) {\r\n        return date.getDate();\r\n    }\r\n    getDayOfWeek(date) {\r\n        return date.getDay();\r\n    }\r\n    getMonthNames(style) {\r\n        const formats = {\r\n            long: 'MMMM',\r\n            short: 'MMM',\r\n            narrow: 'MMMMM'\r\n        };\r\n        return Array.from({ length: 12 }, (_, i) => format$1(new Date(2000, i, 1), formats[style]));\r\n    }\r\n    getDateNames() {\r\n        return Array.from({ length: 31 }, (_, i) => (i + 1).toString());\r\n    }\r\n    getDayOfWeekNames(style) {\r\n        const formats = {\r\n            long: 'EEEE',\r\n            short: 'EEE',\r\n            narrow: 'EEEEE'\r\n        };\r\n        return Array.from({ length: 7 }, (_, i) => format$1(addDays$1(startOfWeek$1(new Date()), i), formats[style]));\r\n    }\r\n    getFirstDayOfWeek() {\r\n        return 0; // Sunday is the first day of the week in the Gregorian calendar\r\n    }\r\n    getNumDaysInMonth(date) {\r\n        return new Date(date.getFullYear(), date.getMonth() + 1, 0).getDate();\r\n    }\r\n    clone(date) {\r\n        return new Date(date.getTime());\r\n    }\r\n    createDate(year, month, date) {\r\n        return new Date(year, month, date);\r\n    }\r\n    isSameDay(date1, date2) {\r\n        return isSameDay$1(date1, date2);\r\n    }\r\n    isSameMonth(date1, date2) {\r\n        return isSameMonth$1(date1, date2);\r\n    }\r\n    isSameYear(date1, date2) {\r\n        return isSameYear$1(date1, date2);\r\n    }\r\n    isAfter(date1, date2) {\r\n        return isAfter$1(date1, date2);\r\n    }\r\n    isBefore(date1, date2) {\r\n        return isBefore$1(date1, date2);\r\n    }\r\n    isEqual(date1, date2) {\r\n        return isEqual(date1, date2);\r\n    }\r\n    startOfMonth(date) {\r\n        return startOfMonth$1(date);\r\n    }\r\n    endOfMonth(date) {\r\n        return endOfMonth$1(date);\r\n    }\r\n    startOfWeek(date) {\r\n        return startOfWeek$1(date, { weekStartsOn: this.getFirstDayOfWeek() });\r\n    }\r\n    isValidFormat(dateString, formatString) {\r\n        try {\r\n            const parsedDate = parse$1(dateString, formatString, new Date());\r\n            if (!isValid$1(parsedDate)) {\r\n                return false;\r\n            }\r\n            // Check if the formatted parsed date matches the original date string\r\n            const formattedDate = format$1(parsedDate, formatString);\r\n            return formattedDate === dateString;\r\n        }\r\n        catch (error) {\r\n            return false;\r\n        }\r\n    }\r\n    max(dates) {\r\n        return max$1(dates);\r\n    }\r\n    setYear(date, year) {\r\n        return setYear$1(date, year);\r\n    }\r\n    startOfDay(date) {\r\n        return startOfDay(date);\r\n    }\r\n    getHours(date) {\r\n        return date ? date.getHours() : null;\r\n    }\r\n    getMinutes(date) {\r\n        return date ? date.getMinutes() : null;\r\n    }\r\n    getSeconds(date) {\r\n        return date ? date.getSeconds() : null;\r\n    }\r\n    setHours(date, hours) {\r\n        const newDate = this.clone(date);\r\n        newDate.setHours(hours);\r\n        return newDate;\r\n    }\r\n    setMinutes(date, minutes) {\r\n        const newDate = this.clone(date);\r\n        newDate.setMinutes(minutes);\r\n        return newDate;\r\n    }\r\n    setSeconds(date, seconds) {\r\n        const newDate = this.clone(date);\r\n        newDate.setSeconds(seconds);\r\n        return newDate;\r\n    }\r\n    getDaysInMonth(date) {\r\n        return getDaysInMonth$1(date);\r\n    }\r\n    addMinutes(date, amount) {\r\n        return addMinutes(date, amount);\r\n    }\r\n}\r\nGregorianDateAdapter.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"14.3.0\", ngImport: i0, type: GregorianDateAdapter, deps: [], target: i0.ɵɵFactoryTarget.Injectable });\r\nGregorianDateAdapter.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"14.3.0\", ngImport: i0, type: GregorianDateAdapter, providedIn: 'root' });\r\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"14.3.0\", ngImport: i0, type: GregorianDateAdapter, decorators: [{\r\n            type: Injectable,\r\n            args: [{\r\n                    providedIn: 'root'\r\n                }]\r\n        }] });\n\n/**\r\n * Time Picker Component\r\n * A customizable time picker that supports 12/24 hour formats, seconds, and multiple locales.\r\n *\r\n * Features:\r\n * - 12/24 hour format\r\n * - Optional seconds\r\n * - Localization support\r\n * - String or Date value types\r\n * - Min/Max time validation\r\n * - Custom styling\r\n */\r\nclass TimePickerComponent {\r\n    constructor(fb, elementRef, cdref, datePickerService, jalaliAdapter, gregorianAdapter) {\r\n        this.fb = fb;\r\n        this.elementRef = elementRef;\r\n        this.cdref = cdref;\r\n        this.datePickerService = datePickerService;\r\n        this.jalaliAdapter = jalaliAdapter;\r\n        this.gregorianAdapter = gregorianAdapter;\r\n        this.rtl = false;\r\n        this.placement = 'right';\r\n        this.valueType = 'string';\r\n        this.cssClass = '';\r\n        this.showIcon = true;\r\n        this.inline = false;\r\n        this.disableInputMask = false;\r\n        this.disabled = false;\r\n        this.allowEmpty = true;\r\n        this.readOnly = false;\r\n        this.readOnlyInput = false;\r\n        this.timeChange = new EventEmitter();\r\n        this.openChange = new EventEmitter();\r\n        this.timeFormat = '12';\r\n        this._displayFormat = 'hh:mm a';\r\n        this._value = null;\r\n        this._selectedDate = new Date();\r\n        this.onChange = () => { };\r\n        this.onTouched = () => { };\r\n        this.timeoutId = null;\r\n        this.showSeconds = false;\r\n        this.hours = [];\r\n        this.minutes = Array.from({ length: 60 }, (_, i) => i);\r\n        this.seconds = Array.from({ length: 60 }, (_, i) => i);\r\n        this.periods = [];\r\n        this.selectedTime = {\r\n            hour: 12,\r\n            minute: 0,\r\n            second: 0,\r\n            period: ''\r\n        };\r\n        this.isOpen = false;\r\n        this.overlayPositions = [...DEFAULT_DATE_PICKER_POSITIONS];\r\n        this.handleDocumentClick = (event) => {\r\n            if (!this.elementRef.nativeElement.contains(event.target) && this.isOpen) {\r\n                this.close();\r\n                this.handleTimeInput();\r\n            }\r\n        };\r\n        this.dateAdapter = this.gregorianAdapter;\r\n        this.initializeForm();\r\n        this.initializeLocale();\r\n    }\r\n    set displayFormat(value) {\r\n        this._displayFormat = value;\r\n        this.showSeconds = value.toLowerCase().includes('s');\r\n        // Infer time format from display format\r\n        this.timeFormat = this.getTimeFormatFromDisplayFormat(value);\r\n        this.updateHourRange();\r\n        this.updateTimeDisplay();\r\n    }\r\n    get displayFormat() {\r\n        return this._displayFormat;\r\n    }\r\n    set selectedDate(date) {\r\n        if (date) {\r\n            this._selectedDate = date;\r\n        }\r\n    }\r\n    get selectedDate() {\r\n        return this._selectedDate;\r\n    }\r\n    // Lifecycle hooks\r\n    ngOnInit() {\r\n        this.updateHourRange();\r\n        this.origin = new CdkOverlayOrigin(this.elementRef);\r\n        this.setupInputSubscription();\r\n        this.value = this.selectedDate;\r\n        // Only add document click listener for non-inline mode\r\n        if (!this.inline) {\r\n            document.addEventListener('click', this.handleDocumentClick);\r\n        }\r\n        // Auto-open for inline mode\r\n        if (this.inline) {\r\n            this.isOpen = true;\r\n            this.scrollToTime();\r\n        }\r\n    }\r\n    ngOnDestroy() {\r\n        this.cleanupTimeouts();\r\n        document.removeEventListener('click', this.handleDocumentClick);\r\n    }\r\n    ngOnChanges(changes) {\r\n        if (changes['rtl'] || changes['lang']) {\r\n            this.updateLocale();\r\n        }\r\n        if (changes['rtl'] && !changes['dateAdapter']) {\r\n            this.dateAdapter = this.rtl ? this.jalaliAdapter : this.gregorianAdapter;\r\n        }\r\n    }\r\n    // Initialization methods\r\n    initializeForm() {\r\n        this.form = this.fb.group({\r\n            timeInput: ['']\r\n        });\r\n    }\r\n    initializeLocale() {\r\n        this.lang = this.datePickerService.locale_en;\r\n        this.selectedTime.period = this.lang.am;\r\n        this.periods = [this.lang.am, this.lang.pm];\r\n    }\r\n    updateLocale() {\r\n        this.lang = this.rtl ? this.datePickerService.locale_fa : this.datePickerService.locale_en;\r\n        this.selectedTime.period = this.lang.am;\r\n        this.periods = [this.lang.am, this.lang.pm];\r\n        this.placeholder = this.lang.selectTime;\r\n    }\r\n    setupInputSubscription() {\r\n        this.form.get('timeInput')?.valueChanges.subscribe(value => {\r\n            if (!value)\r\n                return;\r\n            if (!this.isOpen) {\r\n                this.validateAndUpdateTime(value);\r\n            }\r\n            else {\r\n                this.parseTimeString(value);\r\n                this.scrollToTime();\r\n            }\r\n        });\r\n    }\r\n    // Time management\r\n    updateHourRange() {\r\n        const format = this.getTimeFormatFromDisplayFormat(this._displayFormat);\r\n        this.hours = format === '12'\r\n            ? Array.from({ length: 12 }, (_, i) => i + 1)\r\n            : Array.from({ length: 24 }, (_, i) => i);\r\n    }\r\n    formatTime(date) {\r\n        if (!date && !this.dateAdapter)\r\n            return '';\r\n        const currentDate = date || this.updateDateFromSelection();\r\n        return this.dateAdapter.format(currentDate, this._displayFormat);\r\n    }\r\n    parseTimeString(value) {\r\n        if (!this.dateAdapter)\r\n            return;\r\n        const date = value instanceof Date ? value : this.dateAdapter.parse(value, this._displayFormat);\r\n        if (!date)\r\n            return;\r\n        const hours = this.dateAdapter.getHours(date);\r\n        const minutes = this.dateAdapter.getMinutes(date);\r\n        const seconds = this.dateAdapter.getSeconds(date);\r\n        if (hours === null || minutes === null || seconds === null)\r\n            return;\r\n        this.selectedTime = {\r\n            hour: hours,\r\n            minute: minutes,\r\n            second: seconds,\r\n            period: hours >= 12 ? this.lang.pm : this.lang.am\r\n        };\r\n        this.cdref.markForCheck();\r\n    }\r\n    // Value accessors and form control\r\n    get value() {\r\n        return this._value;\r\n    }\r\n    set value(val) {\r\n        this._value = val;\r\n        this.updateFromValue(val);\r\n    }\r\n    updateFromValue(value) {\r\n        if (!value) {\r\n            this.resetSelection();\r\n            return;\r\n        }\r\n        if (value instanceof Date) {\r\n            this.updateFromDate(value);\r\n        }\r\n        else {\r\n            this.parseTimeString(value);\r\n        }\r\n    }\r\n    updateFromDate(date) {\r\n        if (date && !isNaN(date.getTime()) && this.dateAdapter) {\r\n            const hours = this.dateAdapter.getHours(date);\r\n            if (hours === null)\r\n                return;\r\n            this.selectedTime = {\r\n                hour: hours,\r\n                minute: this.dateAdapter.getMinutes(date) ?? 0,\r\n                second: this.dateAdapter.getSeconds(date) ?? 0,\r\n                period: hours >= 12 ? this.lang.pm : this.lang.am\r\n            };\r\n        }\r\n        else {\r\n            this.resetSelection();\r\n        }\r\n        this.cdref.markForCheck();\r\n    }\r\n    resetSelection() {\r\n        this.selectedTime = {\r\n            hour: 0,\r\n            minute: 0,\r\n            second: 0,\r\n            period: this.lang.am\r\n        };\r\n        this.cdref.markForCheck();\r\n    }\r\n    writeValue(value) {\r\n        if (!value) {\r\n            this.value = null;\r\n            return;\r\n        }\r\n        if (value instanceof Date) {\r\n            this.value = value;\r\n        }\r\n        else if (value.trim()) {\r\n            const date = this.selectedDate;\r\n            this.value = !isNaN(date.getTime()) && this.valueType === 'date' ? date : value;\r\n            this.parseTimeString(value);\r\n        }\r\n        this.updateTimeDisplay();\r\n        this.save(false);\r\n    }\r\n    registerOnChange(fn) {\r\n        this.onChange = fn;\r\n    }\r\n    registerOnTouched(fn) {\r\n        this.onTouched = fn;\r\n    }\r\n    // UI Event handlers\r\n    handleKeydown(event) {\r\n        if (event.key === 'Tab' || event.key === 'Enter') {\r\n            this.handleTimeInput();\r\n            if (event.key === 'Tab')\r\n                this.close();\r\n        }\r\n        else if (event.key === 'Escape') {\r\n            this.close();\r\n        }\r\n    }\r\n    handleTimeInput() {\r\n        const currentValue = this.form.get('timeInput')?.value;\r\n        if (currentValue || (!currentValue && !this.allowEmpty)) {\r\n            this.validateAndUpdateTime(currentValue);\r\n        }\r\n    }\r\n    onFocusInput() {\r\n        if (!this.isOpen) {\r\n            this.open();\r\n        }\r\n    }\r\n    toggleTimePicker(event) {\r\n        event.stopPropagation();\r\n        this.isOpen ? this.close() : this.open();\r\n    }\r\n    // Picker operations\r\n    open() {\r\n        if (this.inline || this.disabled || this.readOnly)\r\n            return;\r\n        const wasOpen = this.isOpen;\r\n        this.isOpen = true;\r\n        this.openChange.emit(true);\r\n        this.scrollToTime();\r\n        if (!wasOpen) {\r\n            this.cdref.markForCheck();\r\n        }\r\n    }\r\n    close() {\r\n        if (this.inline)\r\n            return;\r\n        this.cleanupTimeouts();\r\n        if (this.isOpen) {\r\n            this.isOpen = false;\r\n            this.openChange.emit(false);\r\n            this.cdref.markForCheck();\r\n        }\r\n    }\r\n    // Selection methods\r\n    selectHour(hour) {\r\n        if (!this.isHourDisabled(hour)) {\r\n            this.selectedTime.hour = hour;\r\n            this.updateTimeDisplay();\r\n            this.scrollToSelectedItem(`h${hour}`);\r\n            if (this.inline)\r\n                this.save();\r\n        }\r\n    }\r\n    selectMinute(minute) {\r\n        if (!this.isMinuteDisabled(minute)) {\r\n            this.selectedTime.minute = minute;\r\n            this.updateTimeDisplay();\r\n            this.scrollToSelectedItem(`m${minute}`);\r\n            if (this.inline)\r\n                this.save();\r\n        }\r\n    }\r\n    selectSecond(second) {\r\n        if (!this.isSecondDisabled(second)) {\r\n            this.selectedTime.second = second;\r\n            this.updateTimeDisplay();\r\n            this.scrollToSelectedItem(`s${second}`);\r\n            if (this.inline)\r\n                this.save();\r\n        }\r\n    }\r\n    selectPeriod(period) {\r\n        this.selectedTime.period = period;\r\n        this.updateTimeDisplay();\r\n    }\r\n    selectNow() {\r\n        const now = this.selectedDate;\r\n        this.selectedTime = {\r\n            hour: now.getHours(),\r\n            minute: now.getMinutes(),\r\n            second: now.getSeconds(),\r\n            period: now.getHours() >= 12 ? this.lang.pm : this.lang.am\r\n        };\r\n        this.updateTimeDisplay();\r\n        this.scrollToTime();\r\n        this.save();\r\n    }\r\n    save(close = true) {\r\n        const date = this.updateDateFromSelection();\r\n        const { isValid, normalizedDate } = this.validateAndNormalizeTime(date);\r\n        if (!isValid || !normalizedDate)\r\n            return;\r\n        const outputValue = this.valueType === 'date'\r\n            ? normalizedDate\r\n            : this.formatTime(normalizedDate);\r\n        const valueChanged = JSON.stringify(this._value) !== JSON.stringify(outputValue);\r\n        if (valueChanged) {\r\n            this._value = outputValue;\r\n            this.form.get('timeInput')?.setValue(this.formatTime(normalizedDate), { emitEvent: false });\r\n            this.onChange(outputValue);\r\n            this.timeChange.emit(outputValue);\r\n            this.cdref.markForCheck();\r\n        }\r\n        if (close && !this.inline) {\r\n            this.close();\r\n        }\r\n    }\r\n    // Validation methods\r\n    validateAndUpdateTime(value) {\r\n        if (!value || !this.dateAdapter) {\r\n            this.updateTimeDisplay();\r\n            return;\r\n        }\r\n        try {\r\n            const parsedDate = this.dateAdapter.parse(value, this._displayFormat);\r\n            if (!parsedDate) {\r\n                this.updateTimeDisplay();\r\n                return;\r\n            }\r\n            const { isValid, normalizedDate } = this.validateAndNormalizeTime(parsedDate);\r\n            const formattedTime = this.dateAdapter.format(normalizedDate, this._displayFormat);\r\n            this.form.get('timeInput')?.setValue(formattedTime, { emitEvent: false });\r\n            this.parseTimeString(normalizedDate);\r\n            const outputValue = this.valueType === 'date' ? normalizedDate : formattedTime;\r\n            this._value = outputValue;\r\n            this.onChange(outputValue);\r\n            this.timeChange.emit(outputValue);\r\n        }\r\n        catch (error) {\r\n            console.error('Error normalizing time:', error);\r\n            this.updateTimeDisplay();\r\n        }\r\n    }\r\n    isHourDisabled(hour) {\r\n        if (!this.dateAdapter)\r\n            return false;\r\n        return this.isFullHourDisabled(hour);\r\n    }\r\n    isMinuteDisabled(minute) {\r\n        if (!this.dateAdapter)\r\n            return false;\r\n        return this.isFullMinuteDisabled(minute);\r\n    }\r\n    isSecondDisabled(second) {\r\n        if (!this.dateAdapter)\r\n            return false;\r\n        const testConfig = { ...this.selectedTime, second };\r\n        const testDate = this.createDateWithTime(testConfig);\r\n        return this.isTimeDisabled(testDate);\r\n    }\r\n    isTimeDisabled(testDate) {\r\n        if (!this.dateAdapter)\r\n            return false;\r\n        if (this.minTime) {\r\n            const minDate = this.dateAdapter.parse(this.minTime, this._displayFormat);\r\n            if (minDate && this.dateAdapter.isBefore(testDate, minDate)) {\r\n                return true;\r\n            }\r\n        }\r\n        if (this.maxTime) {\r\n            const maxDate = this.dateAdapter.parse(this.maxTime, this._displayFormat);\r\n            if (maxDate && this.dateAdapter.isAfter(testDate, maxDate)) {\r\n                return true;\r\n            }\r\n        }\r\n        return this.disabledTimesFilter ? this.disabledTimesFilter(testDate) : false;\r\n    }\r\n    validateAndNormalizeTime(date) {\r\n        if (!this.dateAdapter) {\r\n            return { isValid: false, normalizedDate: null };\r\n        }\r\n        let isValid = true;\r\n        // Clone the date to avoid modifying the original\r\n        let normalizedDate = this.dateAdapter.clone(date);\r\n        if (this.isTimeDisabled(normalizedDate)) {\r\n            isValid = false;\r\n            // Try to find nearest valid time (check next and previous 48 intervals of 30 minutes)\r\n            for (let i = 1; i <= 48; i++) {\r\n                const nextTime = this.dateAdapter.addMinutes(date, i * 30);\r\n                const prevTime = this.dateAdapter.addMinutes(date, -i * 30);\r\n                if (!this.isTimeDisabled(nextTime)) {\r\n                    normalizedDate = nextTime;\r\n                    break;\r\n                }\r\n                if (!this.isTimeDisabled(prevTime)) {\r\n                    normalizedDate = prevTime;\r\n                    break;\r\n                }\r\n            }\r\n            // If still disabled after trying to find valid time\r\n            if (this.isTimeDisabled(normalizedDate)) {\r\n                return { isValid: false, normalizedDate: null };\r\n            }\r\n        }\r\n        return { isValid: isValid, normalizedDate };\r\n    }\r\n    isFullHourDisabled(hour) {\r\n        for (let minute = 0; minute < 60; minute++) {\r\n            const testConfig = {\r\n                ...this.selectedTime,\r\n                hour,\r\n                minute,\r\n                second: 0\r\n            };\r\n            const testDate = this.createDateWithTime(testConfig);\r\n            if (!this.isTimeDisabled(testDate)) {\r\n                return false; // If any minute is enabled, hour is not fully disabled\r\n            }\r\n        }\r\n        return true; // All minutes in hour are disabled\r\n    }\r\n    isFullMinuteDisabled(minute) {\r\n        if (!this.showSeconds) {\r\n            const testConfig = {\r\n                ...this.selectedTime,\r\n                minute,\r\n                second: 0\r\n            };\r\n            const testDate = this.createDateWithTime(testConfig);\r\n            return this.isTimeDisabled(testDate);\r\n        }\r\n        // If showing seconds, check each second\r\n        for (let second = 0; second < 60; second++) {\r\n            const testConfig = {\r\n                ...this.selectedTime,\r\n                minute,\r\n                second\r\n            };\r\n            const testDate = this.createDateWithTime(testConfig);\r\n            if (!this.isTimeDisabled(testDate)) {\r\n                return false; // If any second is enabled, minute is not fully disabled\r\n            }\r\n        }\r\n        return true; // All seconds in minute are disabled\r\n    }\r\n    // Helper methods\r\n    createDateWithTime(config) {\r\n        if (!this.dateAdapter)\r\n            return this.selectedDate;\r\n        let testHour = config.hour;\r\n        if (this.timeFormat === '12') {\r\n            if (config.period === this.lang.pm && testHour < 12)\r\n                testHour += 12;\r\n            if (config.period === this.lang.am && testHour === 12)\r\n                testHour = 0;\r\n        }\r\n        let date = this.selectedDate;\r\n        date = this.dateAdapter.setHours(date, testHour);\r\n        date = this.dateAdapter.setMinutes(date, config.minute);\r\n        date = this.dateAdapter.setSeconds(date, config.second);\r\n        return date;\r\n    }\r\n    updateDateFromSelection() {\r\n        if (!this.dateAdapter)\r\n            return this.selectedDate;\r\n        let hours = this.selectedTime.hour;\r\n        if (this.timeFormat === '12') {\r\n            if (this.selectedTime.period === this.lang.pm && hours < 12)\r\n                hours += 12;\r\n            if (this.selectedTime.period === this.lang.am && hours === 12)\r\n                hours = 0;\r\n        }\r\n        let date = this._value instanceof Date ?\r\n            this.dateAdapter.clone(this._value) :\r\n            this.selectedDate;\r\n        date = this.dateAdapter.setHours(date, hours);\r\n        date = this.dateAdapter.setMinutes(date, this.selectedTime.minute);\r\n        date = this.dateAdapter.setSeconds(date, this.selectedTime.second);\r\n        return date;\r\n    }\r\n    updateTimeDisplay() {\r\n        if (this.form) {\r\n            this.form.get('timeInput')?.setValue(this.formatTime(), { emitEvent: false });\r\n        }\r\n    }\r\n    getTimeFormatFromDisplayFormat(format) {\r\n        // Check for 24-hour format indicators\r\n        const has24HourFormat = /\\bH{1,2}\\b/.test(format);\r\n        return has24HourFormat ? '24' : '12';\r\n    }\r\n    // UI Update methods\r\n    async scrollToTime() {\r\n        await this.scrollToSelectedItem(`h${this.selectedTime.hour}`, 'auto'),\r\n            await this.scrollToSelectedItem(`m${this.selectedTime.minute}`, 'auto'),\r\n            this.showSeconds ? await this.scrollToSelectedItem(`s${this.selectedTime.second}`, 'auto') : '';\r\n    }\r\n    scrollToSelectedItem(id, behavior = 'smooth') {\r\n        this.cleanupTimeouts();\r\n        return new Promise((resolve) => {\r\n            if (!id) {\r\n                resolve(false);\r\n                return;\r\n            }\r\n            this.timeoutId = window.setTimeout(() => {\r\n                const selectedElement = this.popupWrapper?.nativeElement.querySelector(`#selector_${id}`);\r\n                if (selectedElement) {\r\n                    selectedElement.scrollIntoView({ behavior, block: 'center' });\r\n                }\r\n                resolve(true);\r\n            }, 0);\r\n        });\r\n    }\r\n    cleanupTimeouts() {\r\n        if (this.timeoutId !== null) {\r\n            window.clearTimeout(this.timeoutId);\r\n            this.timeoutId = null;\r\n        }\r\n    }\r\n    onPositionChange(position) {\r\n        this.cdref.detectChanges();\r\n    }\r\n}\r\nTimePickerComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"14.3.0\", ngImport: i0, type: TimePickerComponent, deps: [{ token: i1$1.FormBuilder }, { token: i0.ElementRef }, { token: i0.ChangeDetectorRef }, { token: AsaDatePickerService }, { token: JalaliDateAdapter }, { token: GregorianDateAdapter }], target: i0.ɵɵFactoryTarget.Component });\r\nTimePickerComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"14.0.0\", version: \"14.3.0\", type: TimePickerComponent, isStandalone: true, selector: \"asa-time-picker\", inputs: { placeholder: \"placeholder\", rtl: \"rtl\", placement: \"placement\", minTime: \"minTime\", maxTime: \"maxTime\", lang: \"lang\", valueType: \"valueType\", cssClass: \"cssClass\", showIcon: \"showIcon\", dateAdapter: \"dateAdapter\", inline: \"inline\", disableInputMask: \"disableInputMask\", disabled: \"disabled\", disabledTimesFilter: \"disabledTimesFilter\", allowEmpty: \"allowEmpty\", readOnly: \"readOnly\", readOnlyInput: \"readOnlyInput\", displayFormat: \"displayFormat\", selectedDate: \"selectedDate\" }, outputs: { timeChange: \"timeChange\", openChange: \"openChange\" }, host: { listeners: { \"click\": \"open()\", \"keydown\": \"handleKeydown($event)\" } }, providers: [\r\n        AsaDatePickerService,\r\n        {\r\n            provide: NG_VALUE_ACCESSOR,\r\n            useExisting: forwardRef(() => TimePickerComponent),\r\n            multi: true\r\n        }\r\n    ], viewQueries: [{ propertyName: \"timePickerInput\", first: true, predicate: [\"timePickerInput\"], descendants: true }, { propertyName: \"popupWrapper\", first: true, predicate: [\"popupWrapper\"], descendants: true }], usesOnChanges: true, ngImport: i0, template: `\n    <div class=\"time-picker-wrapper\" [formGroup]=\"form\">\n      <!-- Regular input mode -->\n      <ng-container *ngIf=\"!inline\">\n        <div class=\"input-wrapper\" [class.focus]=\"isOpen\" [class.disabled]=\"disabled\">\n          <input\n            #timePickerInput\n            [asa-dateMask]=\"displayFormat\"\n            [disableInputMask]=\"disableInputMask\"\n            [class.disabled]=\"disabled\"\n            type=\"text\"\n            class=\"time-picker-input\"\n            [class.focus]=\"isOpen\"\n            formControlName=\"timeInput\"\n            (focus)=\"onFocusInput()\"\n            [placeholder]=\"placeholder\"\n            [readonly]=\"readOnly || readOnlyInput\"\n            [attr.disabled]=\"disabled? 'disabled':null\"\n          >\n          <button *ngIf=\"showIcon\" class=\"time-button\" (click)=\"toggleTimePicker($event)\" tabindex=\"-1\">\n            <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"20\" height=\"20\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"#999\" stroke-width=\"2\">\n              <circle cx=\"12\" cy=\"12\" r=\"10\"/>\n              <path d=\"M12 6v6l4 2\"/>\n            </svg>\n          </button>\n        </div>\n\n        <ng-template\n          cdkConnectedOverlay\n          nzConnectedOverlay\n          [cdkConnectedOverlayOrigin]=\"origin\"\n          [cdkConnectedOverlayOpen]=\"isOpen\"\n          [cdkConnectedOverlayPositions]=\"overlayPositions\"\n          [cdkConnectedOverlayTransformOriginOn]=\"'.time-picker-popup'\"\n          [cdkConnectedOverlayHasBackdrop]=\"false\"\n          (positionChange)=\"onPositionChange($event)\"\n          (detach)=\"close()\"\n        >\n          <ng-container *ngTemplateOutlet=\"timePickerContent\"></ng-container>\n        </ng-template>\n      </ng-container>\n\n      <!-- Inline mode -->\n      <ng-container *ngIf=\"inline\">\n        <ng-container *ngTemplateOutlet=\"timePickerContent\"></ng-container>\n      </ng-container>\n\n      <!-- Time Picker Content Template -->\n      <ng-template #timePickerContent>\n        <div\n          #popupWrapper\n          [class]=\"'time-picker-popup ' + cssClass\"\n          [@slideMotion]=\"'enter'\"\n          [class.inline]=\"inline\"\n          [class.disabled]=\"disabled\"\n          style=\"position: relative\"\n          (click)=\"$event.stopPropagation()\"\n        >\n          <div class=\"time-picker-content\">\n            <div class=\"time-columns\">\n              <!-- Hours -->\n              <div class=\"time-column\">\n                <div class=\"time-scroller\">\n                  <button\n                    *ngFor=\"let hour of hours\"\n                    [id]=\"'selector_h'+hour\"\n                    [class.selected]=\"selectedTime.hour === hour\"\n                    [class.disabled]=\"isHourDisabled(hour)\"\n                    (click)=\"selectHour(hour)\"\n                    type=\"button\"\n                  >\n                    {{ hour.toString().padStart(2, '0') }}\n                  </button>\n                </div>\n              </div>\n\n              <div class=\"time-separator\">:</div>\n\n              <!-- Minutes -->\n              <div class=\"time-column\">\n                <div class=\"time-scroller\">\n                  <button\n                    *ngFor=\"let minute of minutes\"\n                    [id]=\"'selector_m'+minute\"\n                    [class.selected]=\"selectedTime.minute === minute\"\n                    [class.disabled]=\"isMinuteDisabled(minute)\"\n                    (click)=\"selectMinute(minute)\"\n                    type=\"button\"\n                  >\n                    {{ minute.toString().padStart(2, '0') }}\n                  </button>\n                </div>\n              </div>\n\n              <!-- Seconds (if format includes seconds) -->\n              <ng-container *ngIf=\"showSeconds\">\n                <div class=\"time-separator\">:</div>\n                <div class=\"time-column\">\n                  <div class=\"time-scroller\">\n                    <button\n                      *ngFor=\"let second of seconds\"\n                      [id]=\"'selector_s'+second\"\n                      [class.selected]=\"selectedTime.second === second\"\n                      [class.disabled]=\"isSecondDisabled(second)\"\n                      (click)=\"selectSecond(second)\"\n                      type=\"button\"\n                    >\n                      {{ second.toString().padStart(2, '0') }}\n                    </button>\n                  </div>\n                </div>\n              </ng-container>\n\n              <!-- AM/PM (only in 12-hour format) -->\n              <ng-container *ngIf=\"timeFormat === '12'\">\n                <div class=\"time-column period\">\n                  <button\n                    *ngFor=\"let period of periods\"\n                    [class.selected]=\"selectedTime.period === period\"\n                    (click)=\"selectPeriod(period)\"\n                    type=\"button\"\n                  >\n                    {{ period }}\n                  </button>\n                </div>\n              </ng-container>\n            </div>\n          </div>\n\n          <div class=\"time-picker-footer\" *ngIf=\"!inline\">\n            <div class=\"footer-buttons\">\n              <button class=\"now-btn\" (click)=\"selectNow()\" type=\"button\">{{ lang.now }}</button>\n            </div>\n            <div class=\"footer-actions\">\n              <button class=\"save-btn\" (click)=\"save()\" type=\"button\">{{ lang.ok }}</button>\n            </div>\n          </div>\n        </div>\n      </ng-template>\n    </div>\n  `, isInline: true, styles: [\":host *{font-family:inherit;font-weight:400;box-sizing:border-box;padding:0;margin:0}.time-picker-wrapper{display:inline-block}.input-wrapper{position:relative;display:inline-flex;align-items:center;border:1px solid #d9d9d9;border-radius:4px}.input-wrapper.focus{border-color:#40a9ff;box-shadow:0 0 0 2px #1890ff33;outline:none}.input-wrapper.disabled{background:#fafafa}input:focus{outline:none}input:hover{border-color:#40a9ff}input.time-picker-input{font-family:inherit;width:100%;padding:6px;border:none;border-radius:4px;font-size:14px;transition:all .3s}.time-button{background:none;border:none;cursor:pointer;padding:4px 4px 0}.time-picker-popup{background:white;border-radius:8px;box-shadow:0 6px 16px #00000014;width:fit-content;min-width:200px;overflow:hidden;margin-block:3px;height:40vh;max-height:280px}.time-picker-popup.inline{box-shadow:none;margin:0;border:1px solid #d9d9d9}.time-picker-popup.inline .time-picker-content{padding:4px;height:100%}.time-picker-popup.inline .time-columns{padding:4px}.time-picker-popup.inline .time-column::-webkit-scrollbar{width:6px}.time-picker-popup.inline .time-column::-webkit-scrollbar-thumb{background:#d9d9d9;border-radius:3px}.time-picker-popup.inline .time-column::-webkit-scrollbar-track{background:#f5f5f5}.time-picker-header{padding:16px;font-size:16px;font-weight:500;border-bottom:1px solid #f0f0f0}.time-picker-content{padding:8px;height:calc(100% - 59px)}.time-columns{display:flex;align-items:center;justify-content:center;padding:8px;gap:8px;height:100%}.time-column{flex:1;height:100%;overflow-y:auto;scrollbar-width:none}.time-column::-webkit-scrollbar{display:none}.time-column button{width:100%;padding:6px 8px;background:none;border:none;cursor:pointer;color:#666;font-size:14px;border-radius:4px}.time-column button:hover:not(.disabled){background:#f5f5f5}.time-column button.selected{background:#e6f4ff;color:#1890ff}.time-column button.disabled{color:#d9d9d9;cursor:not-allowed}.time-scroller{display:flex;flex-direction:column;align-items:center}.time-separator{padding:8px 0;color:#999;font-weight:700}.time-picker-footer{display:flex;justify-content:space-between;padding:8px;border-top:1px solid #f0f0f0}button{padding:4px 15px;border-radius:4px;border:1px solid #d9d9d9;background:white;cursor:pointer;font-size:14px;font-family:inherit}.save-btn{background:#1890ff;border-color:#1890ff;color:#fff}.save-btn:hover{background:#40a9ff;border-color:#40a9ff}.cancel-btn:hover{border-color:#40a9ff;color:#40a9ff}.footer-buttons,.footer-actions{display:flex;gap:8px}.now-btn{color:#1890ff;border-color:transparent;background:transparent;box-shadow:none;padding-left:0}.now-btn:hover{color:#40a9ff}.embedded-time-picker.time-picker-popup .time-picker-content{height:100%}.embedded-time-picker.time-picker-popup.inline{border:none;border-radius:0;height:286px;max-height:290px;direction:ltr}\\n\"], dependencies: [{ kind: \"directive\", type: NgIf, selector: \"[ngIf]\", inputs: [\"ngIf\", \"ngIfThen\", \"ngIfElse\"] }, { kind: \"directive\", type: NgFor, selector: \"[ngFor][ngForOf]\", inputs: [\"ngForOf\", \"ngForTrackBy\", \"ngForTemplate\"] }, { kind: \"ngmodule\", type: ReactiveFormsModule }, { kind: \"directive\", type: i1$1.DefaultValueAccessor, selector: \"input:not([type=checkbox])[formControlName],textarea[formControlName],input:not([type=checkbox])[formControl],textarea[formControl],input:not([type=checkbox])[ngModel],textarea[ngModel],[ngDefaultControl]\" }, { kind: \"directive\", type: i1$1.NgControlStatus, selector: \"[formControlName],[ngModel],[formControl]\" }, { kind: \"directive\", type: i1$1.NgControlStatusGroup, selector: \"[formGroupName],[formArrayName],[ngModelGroup],[formGroup],form:not([ngNoForm]),[ngForm]\" }, { kind: \"directive\", type: i1$1.FormGroupDirective, selector: \"[formGroup]\", inputs: [\"formGroup\"], outputs: [\"ngSubmit\"], exportAs: [\"ngForm\"] }, { kind: \"directive\", type: i1$1.FormControlName, selector: \"[formControlName]\", inputs: [\"formControlName\", \"disabled\", \"ngModel\"], outputs: [\"ngModelChange\"] }, { kind: \"directive\", type: NgTemplateOutlet, selector: \"[ngTemplateOutlet]\", inputs: [\"ngTemplateOutletContext\", \"ngTemplateOutlet\", \"ngTemplateOutletInjector\"] }, { kind: \"directive\", type: DateMaskDirective, selector: \"[asa-dateMask]\", inputs: [\"asa-dateMask\", \"disableInputMask\"] }, { kind: \"ngmodule\", type: OverlayModule }, { kind: \"directive\", type: i1.CdkConnectedOverlay, selector: \"[cdk-connected-overlay], [connected-overlay], [cdkConnectedOverlay]\", inputs: [\"cdkConnectedOverlayOrigin\", \"cdkConnectedOverlayPositions\", \"cdkConnectedOverlayPositionStrategy\", \"cdkConnectedOverlayOffsetX\", \"cdkConnectedOverlayOffsetY\", \"cdkConnectedOverlayWidth\", \"cdkConnectedOverlayHeight\", \"cdkConnectedOverlayMinWidth\", \"cdkConnectedOverlayMinHeight\", \"cdkConnectedOverlayBackdropClass\", \"cdkConnectedOverlayPanelClass\", \"cdkConnectedOverlayViewportMargin\", \"cdkConnectedOverlayScrollStrategy\", \"cdkConnectedOverlayOpen\", \"cdkConnectedOverlayDisableClose\", \"cdkConnectedOverlayTransformOriginOn\", \"cdkConnectedOverlayHasBackdrop\", \"cdkConnectedOverlayLockPosition\", \"cdkConnectedOverlayFlexibleDimensions\", \"cdkConnectedOverlayGrowAfterOpen\", \"cdkConnectedOverlayPush\"], outputs: [\"backdropClick\", \"positionChange\", \"attach\", \"detach\", \"overlayKeydown\", \"overlayOutsideClick\"], exportAs: [\"cdkConnectedOverlay\"] }, { kind: \"directive\", type: NzConnectedOverlayDirective, selector: \"[cdkConnectedOverlay][nzConnectedOverlay]\", inputs: [\"nzArrowPointAtCenter\"], exportAs: [\"nzConnectedOverlay\"] }], animations: [slideMotion], changeDetection: i0.ChangeDetectionStrategy.OnPush });\r\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"14.3.0\", ngImport: i0, type: TimePickerComponent, decorators: [{\r\n            type: Component,\r\n            args: [{ selector: 'asa-time-picker', changeDetection: ChangeDetectionStrategy.OnPush, template: `\n    <div class=\"time-picker-wrapper\" [formGroup]=\"form\">\n      <!-- Regular input mode -->\n      <ng-container *ngIf=\"!inline\">\n        <div class=\"input-wrapper\" [class.focus]=\"isOpen\" [class.disabled]=\"disabled\">\n          <input\n            #timePickerInput\n            [asa-dateMask]=\"displayFormat\"\n            [disableInputMask]=\"disableInputMask\"\n            [class.disabled]=\"disabled\"\n            type=\"text\"\n            class=\"time-picker-input\"\n            [class.focus]=\"isOpen\"\n            formControlName=\"timeInput\"\n            (focus)=\"onFocusInput()\"\n            [placeholder]=\"placeholder\"\n            [readonly]=\"readOnly || readOnlyInput\"\n            [attr.disabled]=\"disabled? 'disabled':null\"\n          >\n          <button *ngIf=\"showIcon\" class=\"time-button\" (click)=\"toggleTimePicker($event)\" tabindex=\"-1\">\n            <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"20\" height=\"20\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"#999\" stroke-width=\"2\">\n              <circle cx=\"12\" cy=\"12\" r=\"10\"/>\n              <path d=\"M12 6v6l4 2\"/>\n            </svg>\n          </button>\n        </div>\n\n        <ng-template\n          cdkConnectedOverlay\n          nzConnectedOverlay\n          [cdkConnectedOverlayOrigin]=\"origin\"\n          [cdkConnectedOverlayOpen]=\"isOpen\"\n          [cdkConnectedOverlayPositions]=\"overlayPositions\"\n          [cdkConnectedOverlayTransformOriginOn]=\"'.time-picker-popup'\"\n          [cdkConnectedOverlayHasBackdrop]=\"false\"\n          (positionChange)=\"onPositionChange($event)\"\n          (detach)=\"close()\"\n        >\n          <ng-container *ngTemplateOutlet=\"timePickerContent\"></ng-container>\n        </ng-template>\n      </ng-container>\n\n      <!-- Inline mode -->\n      <ng-container *ngIf=\"inline\">\n        <ng-container *ngTemplateOutlet=\"timePickerContent\"></ng-container>\n      </ng-container>\n\n      <!-- Time Picker Content Template -->\n      <ng-template #timePickerContent>\n        <div\n          #popupWrapper\n          [class]=\"'time-picker-popup ' + cssClass\"\n          [@slideMotion]=\"'enter'\"\n          [class.inline]=\"inline\"\n          [class.disabled]=\"disabled\"\n          style=\"position: relative\"\n          (click)=\"$event.stopPropagation()\"\n        >\n          <div class=\"time-picker-content\">\n            <div class=\"time-columns\">\n              <!-- Hours -->\n              <div class=\"time-column\">\n                <div class=\"time-scroller\">\n                  <button\n                    *ngFor=\"let hour of hours\"\n                    [id]=\"'selector_h'+hour\"\n                    [class.selected]=\"selectedTime.hour === hour\"\n                    [class.disabled]=\"isHourDisabled(hour)\"\n                    (click)=\"selectHour(hour)\"\n                    type=\"button\"\n                  >\n                    {{ hour.toString().padStart(2, '0') }}\n                  </button>\n                </div>\n              </div>\n\n              <div class=\"time-separator\">:</div>\n\n              <!-- Minutes -->\n              <div class=\"time-column\">\n                <div class=\"time-scroller\">\n                  <button\n                    *ngFor=\"let minute of minutes\"\n                    [id]=\"'selector_m'+minute\"\n                    [class.selected]=\"selectedTime.minute === minute\"\n                    [class.disabled]=\"isMinuteDisabled(minute)\"\n                    (click)=\"selectMinute(minute)\"\n                    type=\"button\"\n                  >\n                    {{ minute.toString().padStart(2, '0') }}\n                  </button>\n                </div>\n              </div>\n\n              <!-- Seconds (if format includes seconds) -->\n              <ng-container *ngIf=\"showSeconds\">\n                <div class=\"time-separator\">:</div>\n                <div class=\"time-column\">\n                  <div class=\"time-scroller\">\n                    <button\n                      *ngFor=\"let second of seconds\"\n                      [id]=\"'selector_s'+second\"\n                      [class.selected]=\"selectedTime.second === second\"\n                      [class.disabled]=\"isSecondDisabled(second)\"\n                      (click)=\"selectSecond(second)\"\n                      type=\"button\"\n                    >\n                      {{ second.toString().padStart(2, '0') }}\n                    </button>\n                  </div>\n                </div>\n              </ng-container>\n\n              <!-- AM/PM (only in 12-hour format) -->\n              <ng-container *ngIf=\"timeFormat === '12'\">\n                <div class=\"time-column period\">\n                  <button\n                    *ngFor=\"let period of periods\"\n                    [class.selected]=\"selectedTime.period === period\"\n                    (click)=\"selectPeriod(period)\"\n                    type=\"button\"\n                  >\n                    {{ period }}\n                  </button>\n                </div>\n              </ng-container>\n            </div>\n          </div>\n\n          <div class=\"time-picker-footer\" *ngIf=\"!inline\">\n            <div class=\"footer-buttons\">\n              <button class=\"now-btn\" (click)=\"selectNow()\" type=\"button\">{{ lang.now }}</button>\n            </div>\n            <div class=\"footer-actions\">\n              <button class=\"save-btn\" (click)=\"save()\" type=\"button\">{{ lang.ok }}</button>\n            </div>\n          </div>\n        </div>\n      </ng-template>\n    </div>\n  `, standalone: true, imports: [\r\n                        NgIf,\r\n                        NgFor,\r\n                        ReactiveFormsModule,\r\n                        NgTemplateOutlet,\r\n                        DateMaskDirective,\r\n                        OverlayModule,\r\n                        NzConnectedOverlayDirective\r\n                    ], providers: [\r\n                        AsaDatePickerService,\r\n                        {\r\n                            provide: NG_VALUE_ACCESSOR,\r\n                            useExisting: forwardRef(() => TimePickerComponent),\r\n                            multi: true\r\n                        }\r\n                    ], host: {\r\n                        '(click)': 'open()'\r\n                    }, animations: [slideMotion], styles: [\":host *{font-family:inherit;font-weight:400;box-sizing:border-box;padding:0;margin:0}.time-picker-wrapper{display:inline-block}.input-wrapper{position:relative;display:inline-flex;align-items:center;border:1px solid #d9d9d9;border-radius:4px}.input-wrapper.focus{border-color:#40a9ff;box-shadow:0 0 0 2px #1890ff33;outline:none}.input-wrapper.disabled{background:#fafafa}input:focus{outline:none}input:hover{border-color:#40a9ff}input.time-picker-input{font-family:inherit;width:100%;padding:6px;border:none;border-radius:4px;font-size:14px;transition:all .3s}.time-button{background:none;border:none;cursor:pointer;padding:4px 4px 0}.time-picker-popup{background:white;border-radius:8px;box-shadow:0 6px 16px #00000014;width:fit-content;min-width:200px;overflow:hidden;margin-block:3px;height:40vh;max-height:280px}.time-picker-popup.inline{box-shadow:none;margin:0;border:1px solid #d9d9d9}.time-picker-popup.inline .time-picker-content{padding:4px;height:100%}.time-picker-popup.inline .time-columns{padding:4px}.time-picker-popup.inline .time-column::-webkit-scrollbar{width:6px}.time-picker-popup.inline .time-column::-webkit-scrollbar-thumb{background:#d9d9d9;border-radius:3px}.time-picker-popup.inline .time-column::-webkit-scrollbar-track{background:#f5f5f5}.time-picker-header{padding:16px;font-size:16px;font-weight:500;border-bottom:1px solid #f0f0f0}.time-picker-content{padding:8px;height:calc(100% - 59px)}.time-columns{display:flex;align-items:center;justify-content:center;padding:8px;gap:8px;height:100%}.time-column{flex:1;height:100%;overflow-y:auto;scrollbar-width:none}.time-column::-webkit-scrollbar{display:none}.time-column button{width:100%;padding:6px 8px;background:none;border:none;cursor:pointer;color:#666;font-size:14px;border-radius:4px}.time-column button:hover:not(.disabled){background:#f5f5f5}.time-column button.selected{background:#e6f4ff;color:#1890ff}.time-column button.disabled{color:#d9d9d9;cursor:not-allowed}.time-scroller{display:flex;flex-direction:column;align-items:center}.time-separator{padding:8px 0;color:#999;font-weight:700}.time-picker-footer{display:flex;justify-content:space-between;padding:8px;border-top:1px solid #f0f0f0}button{padding:4px 15px;border-radius:4px;border:1px solid #d9d9d9;background:white;cursor:pointer;font-size:14px;font-family:inherit}.save-btn{background:#1890ff;border-color:#1890ff;color:#fff}.save-btn:hover{background:#40a9ff;border-color:#40a9ff}.cancel-btn:hover{border-color:#40a9ff;color:#40a9ff}.footer-buttons,.footer-actions{display:flex;gap:8px}.now-btn{color:#1890ff;border-color:transparent;background:transparent;box-shadow:none;padding-left:0}.now-btn:hover{color:#40a9ff}.embedded-time-picker.time-picker-popup .time-picker-content{height:100%}.embedded-time-picker.time-picker-popup.inline{border:none;border-radius:0;height:286px;max-height:290px;direction:ltr}\\n\"] }]\r\n        }], ctorParameters: function () { return [{ type: i1$1.FormBuilder }, { type: i0.ElementRef }, { type: i0.ChangeDetectorRef }, { type: AsaDatePickerService }, { type: JalaliDateAdapter }, { type: GregorianDateAdapter }]; }, propDecorators: { placeholder: [{\r\n                type: Input\r\n            }], rtl: [{\r\n                type: Input\r\n            }], placement: [{\r\n                type: Input\r\n            }], minTime: [{\r\n                type: Input\r\n            }], maxTime: [{\r\n                type: Input\r\n            }], lang: [{\r\n                type: Input\r\n            }], valueType: [{\r\n                type: Input\r\n            }], cssClass: [{\r\n                type: Input\r\n            }], showIcon: [{\r\n                type: Input\r\n            }], dateAdapter: [{\r\n                type: Input\r\n            }], inline: [{\r\n                type: Input\r\n            }], disableInputMask: [{\r\n                type: Input\r\n            }], disabled: [{\r\n                type: Input\r\n            }], disabledTimesFilter: [{\r\n                type: Input\r\n            }], allowEmpty: [{\r\n                type: Input\r\n            }], readOnly: [{\r\n                type: Input\r\n            }], readOnlyInput: [{\r\n                type: Input\r\n            }], displayFormat: [{\r\n                type: Input\r\n            }], selectedDate: [{\r\n                type: Input\r\n            }], timeChange: [{\r\n                type: Output\r\n            }], openChange: [{\r\n                type: Output\r\n            }], timePickerInput: [{\r\n                type: ViewChild,\r\n                args: ['timePickerInput']\r\n            }], popupWrapper: [{\r\n                type: ViewChild,\r\n                args: ['popupWrapper']\r\n            }], handleKeydown: [{\r\n                type: HostListener,\r\n                args: ['keydown', ['$event']]\r\n            }] } });\n\nclass DatePickerPopupComponent {\r\n    constructor(el, cdr, dpService, jalali, gregorian, destroy$) {\r\n        this.el = el;\r\n        this.cdr = cdr;\r\n        this.dpService = dpService;\r\n        this.jalali = jalali;\r\n        this.gregorian = gregorian;\r\n        this.destroy$ = destroy$;\r\n        // ========== Input Properties ==========\r\n        this.rtl = false;\r\n        this.selectedDate = null;\r\n        this.selectedStartDate = null;\r\n        this.selectedEndDate = null;\r\n        this.mode = 'day';\r\n        this.isRange = false;\r\n        this.customLabels = [];\r\n        this.calendarType = 'gregorian';\r\n        this.minDate = null;\r\n        this.maxDate = null;\r\n        this.cssClass = '';\r\n        this.footerDescription = '';\r\n        this.activeInput = null;\r\n        this.showSidebar = true;\r\n        this.showTimePicker = false;\r\n        this.timeDisplayFormat = 'HH:mm';\r\n        this.disabledDates = [];\r\n        // ========== Output Properties ==========\r\n        this.dateSelected = new EventEmitter();\r\n        this.dateRangeSelected = new EventEmitter();\r\n        this.closePicker = new EventEmitter();\r\n        this.clickInside = new EventEmitter();\r\n        this.weekDays = [];\r\n        this.periods = [];\r\n        this.days = [];\r\n        this.selectedPeriod = '';\r\n        this.tempEndDate = null;\r\n        this.monthListNum = Array.from({ length: 12 }, (_, i) => i + 1);\r\n        this.yearList = [];\r\n        this.yearRanges = [];\r\n        this.viewMode = 'days';\r\n        this.timeoutId = null;\r\n        cdr.markForCheck();\r\n    }\r\n    // ========== Getters ==========\r\n    get getDate() {\r\n        return this.selectedDate || this.selectedStartDate || this.selectedEndDate || new Date();\r\n    }\r\n    // ========== Lifecycle Hooks ==========\r\n    ngOnInit() {\r\n        this.initializeComponent();\r\n    }\r\n    ngOnChanges(changes) {\r\n        this.handleChanges(changes);\r\n    }\r\n    ngAfterViewInit() {\r\n        this.scrollToSelectedItem();\r\n        this.setTimePickerDate();\r\n        this.templates.forEach((item) => {\r\n            switch (item.getType()) {\r\n                case 'day':\r\n                    this.dayTemplate = item.template;\r\n                    break;\r\n                case 'month':\r\n                    this.monthTemplate = item.template;\r\n                    break;\r\n                case 'quarter':\r\n                    this.quarterTemplate = item.template;\r\n                    break;\r\n                case 'year':\r\n                    this.yearTemplate = item.template;\r\n                    break;\r\n            }\r\n        });\r\n        this.cdr.markForCheck();\r\n    }\r\n    ngOnDestroy() {\r\n        if (this.timeoutId != null) {\r\n            clearTimeout(this.timeoutId);\r\n        }\r\n    }\r\n    // ========== Initialization Methods ==========\r\n    initializeComponent() {\r\n        this.setDateAdapter();\r\n        this.setInitialDate();\r\n        this.generateCalendar();\r\n        this.weekDays = this.dateAdapter.getDayOfWeekNames('short');\r\n        if (this.mode === 'year') {\r\n            this.showYearSelector();\r\n        }\r\n        this.initLabels();\r\n    }\r\n    initLabels() {\r\n        const today = this.dateAdapter.today();\r\n        if (this.customLabels?.length) {\r\n            this.periods = this.customLabels;\r\n        }\r\n        else if (this.isRange) {\r\n            this.generateDefaultPeriods(today);\r\n        }\r\n    }\r\n    generateDefaultPeriods(today) {\r\n        this.periods = [\r\n            {\r\n                label: this.lang.lastDay,\r\n                value: [this.dateAdapter.addDays(today, -1), today]\r\n            },\r\n            {\r\n                label: this.lang.lastWeek,\r\n                value: [this.dateAdapter.addDays(today, -7), today],\r\n                arrow: true\r\n            },\r\n            {\r\n                label: this.lang.lastMonth,\r\n                value: [this.dateAdapter.addMonths(today, -1), today]\r\n            },\r\n            {\r\n                label: this.lang.custom,\r\n                value: 'custom'\r\n            }\r\n        ];\r\n    }\r\n    // ========== Date Adapter Methods ==========\r\n    setDateAdapter() {\r\n        this.dateAdapter = this.calendarType === 'jalali' ? this.jalali : this.gregorian;\r\n        this.lang = this.dpService.locale;\r\n    }\r\n    // ========== Calendar Generation Methods ==========\r\n    generateCalendar() {\r\n        const firstDayOfMonth = this.dateAdapter.startOfMonth(this.currentDate);\r\n        const startDate = this.dateAdapter.startOfWeek(firstDayOfMonth);\r\n        this.days = Array.from({ length: 42 }, (_, i) => this.dateAdapter.addDays(startDate, i));\r\n    }\r\n    // ========== View Mode Management ==========\r\n    setViewMode() {\r\n        switch (this.mode) {\r\n            case 'day':\r\n                this.viewMode = 'days';\r\n                break;\r\n            case 'month':\r\n                this.viewMode = 'months';\r\n                this.generateYearList(15);\r\n                break;\r\n            case 'year':\r\n                this.viewMode = 'years';\r\n                break;\r\n        }\r\n    }\r\n    showMonthSelector() {\r\n        this.viewMode = 'months';\r\n        this.generateYearList(15);\r\n        this.scrollToSelectedItem(this.dateAdapter.getYear(this.getDate));\r\n        this.cdr.markForCheck();\r\n    }\r\n    showYearSelector() {\r\n        this.viewMode = 'years';\r\n        this.generateYearRanges();\r\n        this.generateYearList();\r\n        this.scrollToSelectedItem();\r\n        this.cdr.markForCheck();\r\n    }\r\n    // ========== Time Selection Methods ==========\r\n    onTimeChange(time) {\r\n        const timeDate = time instanceof Date ? time : new Date(time);\r\n        if (!this.isRange) {\r\n            this.updateSingleDateTime(timeDate);\r\n        }\r\n        else {\r\n            this.updateRangeDateTime(timeDate);\r\n        }\r\n    }\r\n    updateSingleDateTime(timeDate) {\r\n        if (!this.selectedDate) {\r\n            this.selectedDate = this.dateAdapter.today();\r\n        }\r\n        const updatedDate = this.applyTimeToDate(this.selectedDate, timeDate);\r\n        this.selectedDate = updatedDate;\r\n    }\r\n    updateRangeDateTime(timeDate) {\r\n        if (this.activeInput === 'start' && this.selectedStartDate) {\r\n            const updatedDate = this.applyTimeToDate(this.selectedStartDate, timeDate);\r\n            this.selectedStartDate = updatedDate;\r\n            this.dateRangeSelected.emit({ start: this.selectedStartDate, end: null });\r\n        }\r\n        else if (this.activeInput === 'end' && this.selectedEndDate) {\r\n            const updatedDate = this.applyTimeToDate(this.selectedEndDate, timeDate);\r\n            this.selectedEndDate = updatedDate;\r\n            clearTimeout(this.timeoutId);\r\n            this.timeoutId = setTimeout(() => {\r\n                this.dateRangeSelected.emit({ start: this.selectedStartDate, end: this.selectedEndDate });\r\n            }, 300);\r\n        }\r\n    }\r\n    applyTimeToDate(date, timeDate) {\r\n        let updatedDate = this.dateAdapter.setHours(date, timeDate.getHours());\r\n        updatedDate = this.dateAdapter.setMinutes(updatedDate, timeDate.getMinutes());\r\n        updatedDate = this.dateAdapter.setSeconds(updatedDate, timeDate.getSeconds());\r\n        return updatedDate;\r\n    }\r\n    setTimePickerDate(date) {\r\n        if (this.showTimePicker) {\r\n            if (this.isRange) {\r\n                this.dpService.activeInput$.asObservable()\r\n                    .pipe(takeUntil$1(this.destroy$))\r\n                    .subscribe(active => {\r\n                    if (active == 'start') {\r\n                        this.timePicker.updateFromDate(this.selectedStartDate);\r\n                    }\r\n                    else {\r\n                        this.timePicker.updateFromDate(this.selectedEndDate);\r\n                    }\r\n                    this.timePicker.scrollToTime();\r\n                });\r\n            }\r\n            else {\r\n                this.timePicker.updateFromDate(date || this.selectedDate);\r\n                this.timePicker.scrollToTime();\r\n            }\r\n        }\r\n    }\r\n    // ========== Date Selection Methods ==========\r\n    selectDate(date) {\r\n        if (this.isDateDisabled(date))\r\n            return;\r\n        if (this.showTimePicker) {\r\n            const existingDate = this.isRange ?\r\n                (this.activeInput === 'start' ? this.selectedStartDate : this.selectedEndDate) :\r\n                this.selectedDate;\r\n            if (existingDate) {\r\n                date = this.applyTimeToDate(date, existingDate);\r\n            }\r\n        }\r\n        else {\r\n            date = this.applyTimeToDate(date, new Date());\r\n        }\r\n        if (this.isRange) {\r\n            this.handleRangeSelection(date);\r\n        }\r\n        else {\r\n            this.handleSingleSelection(date);\r\n        }\r\n        this.currentDate = date;\r\n        this.cdr.markForCheck();\r\n    }\r\n    handleRangeSelection(date) {\r\n        const prevStartDate = this.selectedStartDate;\r\n        const prevEndDate = this.selectedEndDate;\r\n        if (!this.selectedStartDate ||\r\n            (this.selectedStartDate && this.selectedEndDate) ||\r\n            this.dateAdapter.isBefore(date, this.selectedStartDate)) {\r\n            this.selectedStartDate = date;\r\n            this.selectedEndDate = null;\r\n            if (!this.showTimePicker) {\r\n                this.activeInput = 'end';\r\n                this.dpService.activeInput$.next('end');\r\n            }\r\n            this.dateRangeSelected.emit({ start: this.selectedStartDate, end: null });\r\n        }\r\n        else {\r\n            if (this.showTimePicker) {\r\n                this.activeInput = 'end';\r\n                this.dpService.activeInput$.next('end');\r\n            }\r\n            this.selectedEndDate = date;\r\n            this.dateRangeSelected.emit({ start: this.selectedStartDate, end: this.selectedEndDate });\r\n        }\r\n        if (prevStartDate !== this.selectedStartDate || prevEndDate !== this.selectedEndDate)\r\n            this.cdr.markForCheck();\r\n    }\r\n    handleSingleSelection(date) {\r\n        this.selectedDate = date;\r\n        if (!this.showTimePicker)\r\n            this.dateSelected.emit(date);\r\n    }\r\n    selectMonth(month, closeAfterSelection = false) {\r\n        if (this.isMonthDisabled(month))\r\n            return;\r\n        this.currentDate = this.dateAdapter.createDate(this.dateAdapter.getYear(this.currentDate), month - 1, 1);\r\n        if (this.isRange && this.mode === 'month') {\r\n            this.handleRangeSelection(this.currentDate);\r\n            return;\r\n        }\r\n        if (this.mode === 'month' || closeAfterSelection) {\r\n            this.selectedDate = this.currentDate;\r\n            this.dateSelected.emit(this.currentDate);\r\n            this.closeDatePicker();\r\n        }\r\n        else {\r\n            this.viewMode = 'days';\r\n            this.generateCalendar();\r\n            this.cdr.detectChanges();\r\n        }\r\n        this.scrollToSelectedItem(month);\r\n    }\r\n    selectYear(year, sideSelector = false) {\r\n        if (this.isYearDisabled(year))\r\n            return;\r\n        this.currentDate = this.dateAdapter.createDate(year, this.dateAdapter.getMonth(this.currentDate), 1);\r\n        if (this.isRange && this.mode === 'year') {\r\n            this.handleRangeSelection(this.currentDate);\r\n            return;\r\n        }\r\n        if (this.mode === 'year') {\r\n            this.selectedDate = this.currentDate;\r\n            this.dateSelected.emit(this.currentDate);\r\n            this.closeDatePicker();\r\n            return;\r\n        }\r\n        if (sideSelector) {\r\n            this.currentDate = this.dateAdapter.setYear(this.selectedDate, year);\r\n            this.scrollToSelectedItem(year);\r\n        }\r\n        else {\r\n            this.viewMode = 'months';\r\n            this.cdr.detectChanges();\r\n        }\r\n    }\r\n    // ========== Navigation Methods ==========\r\n    goPrev() {\r\n        if (this.viewMode === 'days') {\r\n            this.prevMonth();\r\n            this.cdr.detectChanges();\r\n            return;\r\n        }\r\n        let id;\r\n        if (this.viewMode === 'months') {\r\n            this.currentDate = this.dateAdapter.addYears(this.currentDate, -1);\r\n            id = this.dateAdapter.getYear(this.currentDate);\r\n        }\r\n        if (this.viewMode === 'years') {\r\n            const yearStart = this.yearList[0] - 15;\r\n            this.yearList = Array.from({ length: 15 }, (_, i) => yearStart + i);\r\n            id = yearStart;\r\n        }\r\n        this.cdr.detectChanges();\r\n        this.scrollToSelectedItem(id);\r\n    }\r\n    goNext() {\r\n        if (this.viewMode === 'days') {\r\n            this.nextMonth();\r\n            this.cdr.detectChanges();\r\n            return;\r\n        }\r\n        let id;\r\n        if (this.viewMode === 'months') {\r\n            this.currentDate = this.dateAdapter.addYears(this.currentDate, 1);\r\n            id = this.dateAdapter.getYear(this.currentDate);\r\n        }\r\n        if (this.viewMode === 'years') {\r\n            const yearStart = this.yearList[14] + 1;\r\n            this.yearList = Array.from({ length: 15 }, (_, i) => yearStart + i);\r\n            id = yearStart;\r\n        }\r\n        this.cdr.detectChanges();\r\n        this.scrollToSelectedItem(id);\r\n    }\r\n    prevMonth() {\r\n        if (this.isPrevMonthDisabled())\r\n            return;\r\n        this.currentDate = this.dateAdapter.addMonths(this.currentDate, -1);\r\n        this.generateCalendar();\r\n        this.scrollToSelectedItem(this.dateAdapter.getMonth(this.currentDate) + 1);\r\n    }\r\n    nextMonth() {\r\n        if (this.isNextMonthDisabled())\r\n            return;\r\n        this.currentDate = this.dateAdapter.addMonths(this.currentDate, 1);\r\n        this.generateCalendar();\r\n        this.scrollToSelectedItem(this.dateAdapter.getMonth(this.currentDate) + 1);\r\n    }\r\n    // ========== State Check Methods ==========\r\n    isSelected(date) {\r\n        if (this.isRange) {\r\n            return this.isRangeStart(date) || this.isRangeEnd(date);\r\n        }\r\n        return this.selectedDate && this.dateAdapter.isSameDay(date, this.selectedDate);\r\n    }\r\n    isRangeStart(date) {\r\n        return this.isRange &&\r\n            this.selectedStartDate &&\r\n            this.dateAdapter.isSameDay(date, this.selectedStartDate);\r\n    }\r\n    isRangeEnd(date) {\r\n        return this.isRange &&\r\n            this.selectedEndDate &&\r\n            this.dateAdapter.isSameDay(date, this.selectedEndDate);\r\n    }\r\n    isInRange(date) {\r\n        return this.isRange &&\r\n            this.selectedStartDate &&\r\n            (this.selectedEndDate || this.tempEndDate) &&\r\n            this.dateAdapter.isAfter(date, this.selectedStartDate) &&\r\n            this.dateAdapter.isBefore(date, this.selectedEndDate || this.tempEndDate);\r\n    }\r\n    isToday(date) {\r\n        return this.dateAdapter.isSameDay(date, this.dateAdapter.today()) && this.showToday;\r\n    }\r\n    isActiveMonth(month) {\r\n        return this.dateAdapter.getMonth(this.currentDate) === month - 1;\r\n    }\r\n    isActiveYear(year) {\r\n        return year === this.dateAdapter.getYear(this.currentDate);\r\n    }\r\n    isActiveYearRange(startYear) {\r\n        return startYear === this.yearList[0];\r\n    }\r\n    // ========== Disabled State Methods ==========\r\n    isDateDisabled(date) {\r\n        if ((this.minDate && this.dateAdapter.isBefore(date, this.minDate)) ||\r\n            (this.maxDate && this.dateAdapter.isAfter(date, this.maxDate))) {\r\n            return true;\r\n        }\r\n        // Check if date is in disabled dates array\r\n        const parsedDisabledDates = this.parseDisabledDates();\r\n        const isDisabledDate = parsedDisabledDates.some(disabledDate => this.dateAdapter.isSameDay(date, disabledDate));\r\n        // Check custom filter function if provided\r\n        const isFilterDisabled = this.disabledDatesFilter ?\r\n            this.disabledDatesFilter(date) :\r\n            false;\r\n        return isDisabledDate || isFilterDisabled;\r\n    }\r\n    isMonthDisabled(month) {\r\n        const year = this.dateAdapter.getYear(this.currentDate);\r\n        const startOfMonth = this.dateAdapter.createDate(year, month - 1, 1);\r\n        // Check if all days in month are disabled\r\n        const daysInMonth = this.dateAdapter.getDaysInMonth(startOfMonth);\r\n        let allDaysDisabled = true;\r\n        for (let day = 1; day <= daysInMonth; day++) {\r\n            const date = this.dateAdapter.createDate(year, month - 1, day);\r\n            if (!this.isDateDisabled(date)) {\r\n                allDaysDisabled = false;\r\n                break;\r\n            }\r\n        }\r\n        return allDaysDisabled;\r\n    }\r\n    isYearDisabled(year) {\r\n        if (this.minDate && this.dateAdapter.getYear(this.minDate) > year)\r\n            return true;\r\n        if (this.maxDate && this.dateAdapter.getYear(this.maxDate) < year)\r\n            return true;\r\n        // Check if all months in year are disabled\r\n        const firstOfMonth = this.dateAdapter.createDate(year, 0, 1);\r\n        let day = 1;\r\n        for (let date = firstOfMonth; date.getFullYear() == firstOfMonth.getFullYear(); date = this.dateAdapter.addDays(firstOfMonth, day++)) {\r\n            if (!this.isDateDisabled(date)) {\r\n                return false;\r\n            }\r\n        }\r\n        return true;\r\n    }\r\n    isYearRangeDisabled(yearRange) {\r\n        if (this.minDate && this.dateAdapter.getYear(this.minDate) > yearRange.end)\r\n            return true;\r\n        if (this.maxDate && this.dateAdapter.getYear(this.maxDate) < yearRange.start)\r\n            return true;\r\n        // Check if all years in range are disabled\r\n        for (let year = yearRange.start; year <= yearRange.end; year++) {\r\n            if (!this.isYearDisabled(year)) {\r\n                return false;\r\n            }\r\n        }\r\n        return true;\r\n    }\r\n    isPrevMonthDisabled() {\r\n        if (!this.minDate)\r\n            return false;\r\n        const minYear = this.dateAdapter.getYear(this.minDate);\r\n        switch (this.viewMode) {\r\n            case 'days':\r\n                const prevMonth = this.dateAdapter.getMonth(this.currentDate) - 1;\r\n                return this.dateAdapter.getMonth(this.minDate) > prevMonth;\r\n            case 'months':\r\n                const prevYear = this.dateAdapter.getYear(this.currentDate) - 1;\r\n                return minYear > prevYear;\r\n            case 'years':\r\n                return minYear > this.yearList[this.yearList.length - 1];\r\n            default:\r\n                return false;\r\n        }\r\n    }\r\n    isNextMonthDisabled() {\r\n        if (!this.maxDate)\r\n            return false;\r\n        const maxYear = this.dateAdapter.getYear(this.maxDate);\r\n        switch (this.viewMode) {\r\n            case 'days':\r\n                const nextMonth = this.dateAdapter.getMonth(this.currentDate) + 1;\r\n                return this.dateAdapter.getMonth(this.maxDate) < nextMonth;\r\n            case 'months':\r\n                const nextYear = this.dateAdapter.getYear(this.currentDate) + 1;\r\n                return maxYear < nextYear;\r\n            case 'years':\r\n                return maxYear < this.yearList[0];\r\n            default:\r\n                return false;\r\n        }\r\n    }\r\n    parseDisabledDates() {\r\n        return this.disabledDates.map(date => {\r\n            if (date instanceof Date) {\r\n                return this.dateAdapter.startOfDay(date);\r\n            }\r\n            const parsedDate = this.dateAdapter.parse(date, this.dateFormat);\r\n            return parsedDate || null;\r\n        }).filter(date => date !== null);\r\n    }\r\n    // ========== Event Handlers ==========\r\n    onMouseEnter(date, event) {\r\n        if (this.isRange && this.selectedStartDate && !this.selectedEndDate) {\r\n            this.tempEndDate = date;\r\n        }\r\n    }\r\n    onClickInside() {\r\n        this.clickInside.emit(true);\r\n    }\r\n    // ========== Utility Methods ==========\r\n    getMonthName(month) {\r\n        return this.dateAdapter.getMonthNames('long')[month - 1];\r\n    }\r\n    getCurrentMonthName() {\r\n        return this.dateAdapter.getMonthNames('long')[this.dateAdapter.getMonth(this.currentDate)];\r\n    }\r\n    getCurrentYear() {\r\n        return this.dateAdapter.getYear(this.currentDate);\r\n    }\r\n    getWeekDays() {\r\n        return this.weekDays;\r\n    }\r\n    isSameMonth(date1, date2) {\r\n        return this.dateAdapter.isSameMonth(date1, date2);\r\n    }\r\n    closeDatePicker() {\r\n        this.closePicker.emit();\r\n    }\r\n    // ========== Year Management Methods ==========\r\n    generateYearRanges(length = 15) {\r\n        const yearCount = 15;\r\n        const currentYear = this.dateAdapter.getYear(this.dateAdapter.today());\r\n        const startYear = currentYear - Math.floor(yearCount / 2) - (yearCount * Math.floor(length / 2));\r\n        this.yearRanges = [];\r\n        for (let i = 0; i < length; i++) {\r\n            const start = startYear + i * yearCount;\r\n            this.yearRanges.push({ start, end: start + 14 });\r\n        }\r\n    }\r\n    generateYearList(length = 15) {\r\n        const date = this.selectedDate || this.selectedEndDate || this.selectedStartDate || new Date();\r\n        const currentYear = this.dateAdapter.getYear(date);\r\n        let start;\r\n        if (this.viewMode === 'years') {\r\n            const currentRange = this.yearRanges.find(range => range.start <= currentYear && range.end >= currentYear);\r\n            start = currentRange ? currentRange.start : currentYear;\r\n        }\r\n        else {\r\n            start = this.dateAdapter.getYear(date) - Math.round(length / 2);\r\n        }\r\n        this.yearList = Array.from({ length }, (_, i) => start + i);\r\n    }\r\n    selectYearRange(startYear) {\r\n        this.yearList = Array.from({ length: 15 }, (_, i) => startYear + i);\r\n        this.viewMode = 'years';\r\n        this.cdr.detectChanges();\r\n        this.scrollToSelectedItem(startYear);\r\n    }\r\n    // ========== Period Selection Methods ==========\r\n    isActivePeriod(period) {\r\n        const sameStart = this.dateAdapter.isEqual(this.dateAdapter.startOfDay(period.value[0]), this.dateAdapter.startOfDay(this.selectedStartDate));\r\n        const sameEnd = this.dateAdapter.isEqual(this.dateAdapter.startOfDay(period.value[1]), this.dateAdapter.startOfDay(this.selectedEndDate));\r\n        if (period.value === 'custom') {\r\n            let isActiveOther = this.periods.find(p => p.arrow);\r\n            return !isActiveOther;\r\n        }\r\n        ;\r\n        period.arrow = sameStart && sameEnd;\r\n        return sameStart && sameEnd;\r\n    }\r\n    selectPeriod(period) {\r\n        this.selectedPeriod = period.value;\r\n        if (period.value !== 'custom') {\r\n            const [start, end] = period.value;\r\n            this.dateRangeSelected.emit({ start, end });\r\n        }\r\n    }\r\n    onTodayClick() {\r\n        this.currentDate = this.selectedDate = new Date();\r\n        this.generateCalendar();\r\n        this.selectDate(this.currentDate);\r\n        this.setTimePickerDate(this.currentDate);\r\n        this.cdr.detectChanges();\r\n    }\r\n    onOkClick() {\r\n        if (this.isRange) {\r\n            this.dateRangeSelected.emit({ start: this.selectedStartDate, end: this.selectedEndDate });\r\n            this.closeDatePicker();\r\n        }\r\n        else {\r\n            this.dateSelected.emit(this.selectedDate);\r\n        }\r\n    }\r\n    // ========== Scroll Management ==========\r\n    scrollToSelectedItem(id = null) {\r\n        if (!this.showSidebar)\r\n            return;\r\n        if (this.timeoutId != null) {\r\n            clearTimeout(this.timeoutId);\r\n        }\r\n        const itemId = this.determineScrollItemId(id);\r\n        if (!itemId || !this.itemSelector)\r\n            return;\r\n        this.timeoutId = setTimeout(() => {\r\n            const selectedElement = this.itemSelector.nativeElement.querySelector(`#selector_${itemId}`);\r\n            if (selectedElement) {\r\n                selectedElement.scrollIntoView({ behavior: 'smooth', block: 'center' });\r\n            }\r\n        }, 0);\r\n    }\r\n    determineScrollItemId(id) {\r\n        if (id != null)\r\n            return id;\r\n        if (!this.getDate)\r\n            return null;\r\n        switch (this.viewMode) {\r\n            case 'days':\r\n                return this.dateAdapter.getMonth(this.getDate) + 1;\r\n            case 'months':\r\n                return this.dateAdapter.getYear(this.getDate);\r\n            case 'years':\r\n                const currentYear = this.dateAdapter.getYear(this.getDate);\r\n                const currentRange = this.yearRanges.find(range => range.start <= currentYear && range.end >= currentYear);\r\n                return currentRange?.start || null;\r\n            default:\r\n                return null;\r\n        }\r\n    }\r\n    // ========== State Management ==========\r\n    handleChanges(changes) {\r\n        if (changes['calendarType']) {\r\n            this.setDateAdapter();\r\n            this.weekDays = this.dateAdapter.getDayOfWeekNames('short');\r\n        }\r\n        if (changes['selectedDate'] ||\r\n            changes['selectedStartDate'] ||\r\n            changes['selectedEndDate'] ||\r\n            changes['mode'] ||\r\n            changes['calendarType']) {\r\n            this.setInitialDate();\r\n            this.generateCalendar();\r\n        }\r\n        if (changes['minDate'] || changes['maxDate']) {\r\n            this.adjustCurrentDateToValidRange();\r\n        }\r\n    }\r\n    setInitialDate() {\r\n        this.currentDate = this.determineInitialDate();\r\n        this.setViewMode();\r\n        this.adjustCurrentDateToValidRange();\r\n    }\r\n    determineInitialDate() {\r\n        if (this.isRange) {\r\n            if (this.activeInput === 'start') {\r\n                return this.selectedStartDate || this.dateAdapter.today();\r\n            }\r\n            return this.selectedEndDate || this.selectedStartDate || this.dateAdapter.today();\r\n        }\r\n        return this.selectedDate || this.dateAdapter.today();\r\n    }\r\n    adjustCurrentDateToValidRange() {\r\n        let adjustedDate = this.currentDate;\r\n        if (this.minDate && this.dateAdapter.isBefore(adjustedDate, this.minDate)) {\r\n            adjustedDate = this.minDate;\r\n        }\r\n        else if (this.maxDate && this.dateAdapter.isAfter(adjustedDate, this.maxDate)) {\r\n            adjustedDate = this.maxDate;\r\n        }\r\n        if (!this.dateAdapter.isSameDay(this.currentDate, adjustedDate)) {\r\n            this.currentDate = adjustedDate;\r\n            this.generateCalendar();\r\n        }\r\n    }\r\n}\r\nDatePickerPopupComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"14.3.0\", ngImport: i0, type: DatePickerPopupComponent, deps: [{ token: i0.ElementRef }, { token: i0.ChangeDetectorRef }, { token: AsaDatePickerService }, { token: JalaliDateAdapter }, { token: GregorianDateAdapter }, { token: DestroyService }], target: i0.ɵɵFactoryTarget.Component });\r\nDatePickerPopupComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"14.0.0\", version: \"14.3.0\", type: DatePickerPopupComponent, isStandalone: true, selector: \"asa-date-picker-popup\", inputs: { rtl: \"rtl\", selectedDate: \"selectedDate\", selectedStartDate: \"selectedStartDate\", selectedEndDate: \"selectedEndDate\", mode: \"mode\", isRange: \"isRange\", customLabels: \"customLabels\", calendarType: \"calendarType\", minDate: \"minDate\", maxDate: \"maxDate\", cssClass: \"cssClass\", footerDescription: \"footerDescription\", activeInput: \"activeInput\", showSidebar: \"showSidebar\", showToday: \"showToday\", showTimePicker: \"showTimePicker\", timeDisplayFormat: \"timeDisplayFormat\", dateFormat: \"dateFormat\", disabledDates: \"disabledDates\", disabledDatesFilter: \"disabledDatesFilter\", disabledTimesFilter: \"disabledTimesFilter\", templates: \"templates\" }, outputs: { dateSelected: \"dateSelected\", dateRangeSelected: \"dateRangeSelected\", closePicker: \"closePicker\", clickInside: \"clickInside\" }, host: { listeners: { \"click\": \"onClickInside()\" } }, viewQueries: [{ propertyName: \"itemSelector\", first: true, predicate: [\"itemSelector\"], descendants: true }, { propertyName: \"timePicker\", first: true, predicate: TimePickerComponent, descendants: true }], usesOnChanges: true, ngImport: i0, template: `\n    <div class=\"date-picker-popup\" [class.rtl]=\"rtl\" [class]=\"cssClass\" tabindex=\"-1\">\n      <div class=\"date-picker-content\">\n        <ng-container *ngIf=\"showSidebar\">\n          <div *ngIf=\"isRange\" class=\"period-selector\">\n            <button\n              *ngFor=\"let period of periods\"\n              tabindex=\"-1\"\n              [class.active]=\"isActivePeriod(period)\"\n              (click)=\"selectPeriod(period)\"\n            >\n              {{ period.label }}\n              <span *ngIf=\"period.arrow\" class=\"arrow\">→</span>\n            </button>\n          </div>\n          <div *ngIf=\"!isRange\" class=\"side-selector\" #itemSelector>\n            <ng-container *ngIf=\"viewMode == 'days'\">\n              <button\n                *ngFor=\"let month of monthListNum\"\n                tabindex=\"-1\"\n                [id]=\"'selector_'+month\"\n                [class.active]=\"isActiveMonth(month)\"\n                [disabled]=\"isMonthDisabled(month)\"\n                (click)=\"selectMonth(month, false)\">\n                {{ getMonthName(month) }}\n              </button>\n            </ng-container>\n            <ng-container *ngIf=\"viewMode == 'months'\">\n              <button\n                *ngFor=\"let year of yearList\"\n                tabindex=\"-1\"\n                [id]=\"'selector_'+year\"\n                [class.active]=\"isActiveYear(year)\"\n                [disabled]=\"isYearDisabled(year)\"\n                (click)=\"selectYear(year, true)\"\n              >\n                {{ year }}\n              </button>\n            </ng-container>\n            <ng-container *ngIf=\"viewMode == 'years'\">\n              <button\n                tabindex=\"-1\"\n                *ngFor=\"let yearRange of yearRanges\"\n                [id]=\"'selector_'+yearRange.start\"\n                [class.active]=\"isActiveYearRange(yearRange.start)\"\n                [disabled]=\"isYearRangeDisabled(yearRange)\"\n                (click)=\"selectYearRange(yearRange.start)\"\n              >\n                {{ yearRange.start }} - {{ yearRange.end }}\n              </button>\n            </ng-container>\n          </div>\n        </ng-container>\n        <div class=\"calendar\">\n          <div class=\"header\">\n            <button class=\"asa-calendar-nav-left\" (click)=\"goPrev()\" [disabled]=\"isPrevMonthDisabled()\" tabindex=\"-1\"></button>\n            <span class=\"month-year\">\n              <span *ngIf=\"mode != 'year'\" class=\"month-name\" (click)=\"showMonthSelector()\">{{ getCurrentMonthName() }}</span>\n              <span class=\"year\" (click)=\"showYearSelector()\">{{ getCurrentYear() }}</span>\n            </span>\n            <button class=\"asa-calendar-nav-right\" (click)=\"goNext()\" [disabled]=\"isNextMonthDisabled()\" tabindex=\"-1\"></button>\n          </div>\n          <div *ngIf=\"viewMode == 'days'\">\n            <div *ngIf=\"viewMode === 'days'\" class=\"weekdays\">\n              <span *ngFor=\"let day of getWeekDays()\">{{ day }}</span>\n            </div>\n            <div *ngIf=\"viewMode === 'days'\" class=\"days\">\n              <button\n                *ngFor=\"let day of days\"\n                tabindex=\"-1\"\n                [class.different-month]=\"!isSameMonth(day, currentDate)\"\n                [class.selected]=\"isSelected(day)\"\n                [class.in-range]=\"isInRange(day)\"\n                [class.range-start]=\"isRangeStart(day)\"\n                [class.range-end]=\"isRangeEnd(day)\"\n                [class.today]=\"isToday(day)\"\n                [class.disabled]=\"isDateDisabled(day)\"\n                [disabled]=\"isDateDisabled(day)\"\n                (click)=\"selectDate(day)\"\n                (mouseenter)=\"onMouseEnter(day,$event)\"\n              >\n                <ng-container *ngIf=\"dayTemplate; else dayDefTemplate\">\n                  <ng-container *ngTemplateOutlet=\"$any(dayTemplate); context: { $implicit: day }\"></ng-container>\n                </ng-container>\n                <ng-template #dayDefTemplate>\n                  {{ dateAdapter.getDate(day) }}\n                </ng-template>\n              </button>\n            </div>\n          </div>\n          <div *ngIf=\"viewMode === 'months'\" class=\"months\">\n            <button\n              *ngFor=\"let month of monthListNum\"\n              tabindex=\"-1\"\n              [class.selected]=\"month === dateAdapter.getMonth(currentDate) + 1\"\n              [disabled]=\"isMonthDisabled(month)\"\n              (click)=\"selectMonth(month,false)\"\n            >\n              <ng-container *ngIf=\"monthTemplate; else monthDefTemplate\">\n                <ng-container *ngTemplateOutlet=\"$any(monthTemplate); context: { $implicit: month }\"></ng-container>\n              </ng-container>\n              <ng-template #monthDefTemplate>\n                {{ getMonthName(month) }}\n              </ng-template>\n            </button>\n          </div>\n          <div *ngIf=\"viewMode === 'years' || mode == 'year'\" class=\"years\">\n            <button\n              *ngFor=\"let year of yearList\"\n              tabindex=\"-1\"\n              [class.selected]=\"year === dateAdapter.getYear(currentDate)\"\n              [disabled]=\"isYearDisabled(year)\"\n              (click)=\"selectYear(year)\"\n            >\n              <ng-container *ngIf=\"yearTemplate; else yearDefTemplate\">\n                <ng-container *ngTemplateOutlet=\"$any(yearTemplate); context: { $implicit: year }\"></ng-container>\n              </ng-container>\n              <ng-template #yearDefTemplate>\n                {{ year }}\n              </ng-template>\n            </button>\n          </div>\n        </div>\n\n        <!-- Time Picker Integration -->\n        <div *ngIf=\"showTimePicker\" class=\"time-picker-section\">\n          <asa-time-picker\n            #timePicker\n            [rtl]=\"rtl\"\n            [dateAdapter]=\"dateAdapter\"\n            [valueType]=\"'date'\"\n            [displayFormat]=\"timeDisplayFormat\"\n            [inline]=\"true\"\n            [disabledTimesFilter]=\"disabledTimesFilter\"\n            [cssClass]=\"'embedded-time-picker'\"\n            [selectedDate]=\"selectedDate\"\n            (timeChange)=\"onTimeChange($event)\"\n          ></asa-time-picker>\n        </div>\n      </div>\n      <div class=\"date-picker-footer\" *ngIf=\"footerDescription || showTimePicker || showToday\">\n        <div class=\"footer-description\" *ngIf=\"footerDescription\" [innerHtml]=\"footerDescription\">\n        </div>\n        <div class=\"footer-actions\">\n          <button *ngIf=\"showTimePicker\" class=\"footer-button ok\" (click)=\"onOkClick()\">{{ lang.ok }}</button>\n          <button *ngIf=\"showToday\" class=\"footer-button\" (click)=\"onTodayClick()\">{{ lang.today }}</button>\n        </div>\n      </div>\n    </div>\n  `, isInline: true, styles: [\":host *{font-family:inherit;font-weight:400;box-sizing:border-box;padding:0;margin:0}:host.up .date-picker-popup{bottom:100%;margin-bottom:5px}:host.down .date-picker-popup{top:100%;margin-top:5px}.date-picker-popup{display:flex;flex-direction:column;border-radius:4px;box-shadow:0 2px 10px #0000001a;overflow:hidden;z-index:1000;width:fit-content;border:1px solid #ddd;background:white}.date-picker-content{display:flex;flex-direction:row;max-height:295px}.date-picker-footer{border-top:1px solid #f0f0f0;padding:10px;display:flex;flex-direction:column;justify-content:space-between}.side-selector,.period-selector{width:120px;border-inline-end:1px solid #f0f0f0}.side-selector button,.period-selector button{display:flex;justify-content:space-between;font-size:14px;width:100%;padding:10px;text-align:start;border:none;background:none;cursor:pointer;border-block-end:1px solid #f0f0f0;color:#555;transition:background-color .3s}.side-selector button:hover,.period-selector button:hover{background-color:#e6f7ff}.side-selector button.active,.period-selector button.active{background-color:#bfeaff;color:#0175e0;width:100%}.side-selector{overflow:auto;scrollbar-width:none;-ms-overflow-style:none}.side-selector::-webkit-scrollbar{display:none}.calendar{padding:10px 15px 15px;flex-grow:1;background:#FFF;width:280px;max-width:280px}.header{display:flex;justify-content:space-between;align-items:center;margin-bottom:5px;padding-bottom:2px;border-bottom:1px solid #f0f0f0}.header button{background:none;border:none;font-size:16px;cursor:pointer;padding:4px 5px}.header .month-name,.header .year{color:#47366c}.weekdays{display:grid;grid-template-columns:repeat(7,1fr);text-align:center;margin-bottom:5px;font-size:14px;color:#18396cb0}.weekdays span{font-weight:700}.days{display:grid;grid-template-columns:repeat(7,1fr);gap:2px}.days button{position:relative;aspect-ratio:1;border:none;background:none;cursor:pointer;border-radius:50%;font-size:14px;color:#555;transition:background-color .3s,color .3s}.days button:hover{background-color:#e6f7ff}.days button.different-month{color:#ccc}.days button.selected,.days button.range-end.in-range,.days button.range-start.in-range{background-color:#1890ff;color:#fff}.days button.in-range{background-color:#e6f7ff;color:#1890ff}.days button.today{border:2px solid #29b9ff}.days button.today span{position:absolute;bottom:-1rem;right:.6rem;padding:0;margin:0;font-size:36px;color:#9370db}.days button.disabled{color:#aaa;background:#fafafa;opacity:1}.days button.disabled:after{content:\\\"\\\";background:rgba(252,103,143,.6666666667);position:absolute;right:20%;top:45%;width:20px;height:1px;transform:rotate(145deg)}.month-year{display:flex;align-items:center;cursor:pointer;font-size:16px}.month-name,.year{margin:0 5px}.years,.months{display:grid;grid-template-columns:repeat(3,1fr)}.years button,.months button{padding:10px;border:none;background:none;cursor:pointer;font-size:14px;position:relative}.years button.selected,.months button.selected{background-color:#1890ff;color:#fff}.months{gap:1rem .3rem}.years{gap:.5rem .3rem!important}.footer-description{font-size:13px;color:#666}.footer-actions{display:flex;gap:10px;justify-content:end;flex-direction:row-reverse}.footer-button{background:none;border:none;color:#1890ff;cursor:pointer;font-size:14px;padding:2px 6px;transition:color .3s}.footer-button.ok{background:#1890ff;border-radius:1px;color:#fff}.footer-button.ok:hover{color:#eee}.footer-button:hover{color:#40a9ff}.asa-calendar-nav-right:before,.asa-calendar-nav-left:before{position:relative;content:\\\"\\\";display:inline-block;height:6px;width:6px;vertical-align:baseline;border-style:solid;border-color:#555;border-width:2px 2px 0 0}.asa-calendar-nav-left:before{transform:rotate(-135deg)!important}.asa-calendar-nav-right:before{transform:rotate(45deg)}button:disabled{opacity:.5;cursor:not-allowed}[tabindex=\\\"-1\\\"]:focus{outline:none!important}.rtl{direction:rtl}.rtl .arrow{rotate:180deg}.rtl .asa-calendar-nav-left:before{transform:rotate(45deg)!important}.rtl .asa-calendar-nav-right:before{transform:rotate(-135deg)}.rtl .calendar{direction:rtl}[dir=rtl] .arrow{rotate:180deg}.time-picker-section{border-inline-start:1px solid #f0f0f0}\\n\"], dependencies: [{ kind: \"directive\", type: NgIf, selector: \"[ngIf]\", inputs: [\"ngIf\", \"ngIfThen\", \"ngIfElse\"] }, { kind: \"directive\", type: NgFor, selector: \"[ngFor][ngForOf]\", inputs: [\"ngForOf\", \"ngForTrackBy\", \"ngForTemplate\"] }, { kind: \"directive\", type: NgTemplateOutlet, selector: \"[ngTemplateOutlet]\", inputs: [\"ngTemplateOutletContext\", \"ngTemplateOutlet\", \"ngTemplateOutletInjector\"] }, { kind: \"component\", type: TimePickerComponent, selector: \"asa-time-picker\", inputs: [\"placeholder\", \"rtl\", \"placement\", \"minTime\", \"maxTime\", \"lang\", \"valueType\", \"cssClass\", \"showIcon\", \"dateAdapter\", \"inline\", \"disableInputMask\", \"disabled\", \"disabledTimesFilter\", \"allowEmpty\", \"readOnly\", \"readOnlyInput\", \"displayFormat\", \"selectedDate\"], outputs: [\"timeChange\", \"openChange\"] }], changeDetection: i0.ChangeDetectionStrategy.OnPush });\r\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"14.3.0\", ngImport: i0, type: DatePickerPopupComponent, decorators: [{\r\n            type: Component,\r\n            args: [{ selector: 'asa-date-picker-popup', standalone: true, changeDetection: ChangeDetectionStrategy.OnPush, imports: [\r\n                        NgIf,\r\n                        NgFor,\r\n                        NgTemplateOutlet,\r\n                        TimePickerComponent\r\n                    ], template: `\n    <div class=\"date-picker-popup\" [class.rtl]=\"rtl\" [class]=\"cssClass\" tabindex=\"-1\">\n      <div class=\"date-picker-content\">\n        <ng-container *ngIf=\"showSidebar\">\n          <div *ngIf=\"isRange\" class=\"period-selector\">\n            <button\n              *ngFor=\"let period of periods\"\n              tabindex=\"-1\"\n              [class.active]=\"isActivePeriod(period)\"\n              (click)=\"selectPeriod(period)\"\n            >\n              {{ period.label }}\n              <span *ngIf=\"period.arrow\" class=\"arrow\">→</span>\n            </button>\n          </div>\n          <div *ngIf=\"!isRange\" class=\"side-selector\" #itemSelector>\n            <ng-container *ngIf=\"viewMode == 'days'\">\n              <button\n                *ngFor=\"let month of monthListNum\"\n                tabindex=\"-1\"\n                [id]=\"'selector_'+month\"\n                [class.active]=\"isActiveMonth(month)\"\n                [disabled]=\"isMonthDisabled(month)\"\n                (click)=\"selectMonth(month, false)\">\n                {{ getMonthName(month) }}\n              </button>\n            </ng-container>\n            <ng-container *ngIf=\"viewMode == 'months'\">\n              <button\n                *ngFor=\"let year of yearList\"\n                tabindex=\"-1\"\n                [id]=\"'selector_'+year\"\n                [class.active]=\"isActiveYear(year)\"\n                [disabled]=\"isYearDisabled(year)\"\n                (click)=\"selectYear(year, true)\"\n              >\n                {{ year }}\n              </button>\n            </ng-container>\n            <ng-container *ngIf=\"viewMode == 'years'\">\n              <button\n                tabindex=\"-1\"\n                *ngFor=\"let yearRange of yearRanges\"\n                [id]=\"'selector_'+yearRange.start\"\n                [class.active]=\"isActiveYearRange(yearRange.start)\"\n                [disabled]=\"isYearRangeDisabled(yearRange)\"\n                (click)=\"selectYearRange(yearRange.start)\"\n              >\n                {{ yearRange.start }} - {{ yearRange.end }}\n              </button>\n            </ng-container>\n          </div>\n        </ng-container>\n        <div class=\"calendar\">\n          <div class=\"header\">\n            <button class=\"asa-calendar-nav-left\" (click)=\"goPrev()\" [disabled]=\"isPrevMonthDisabled()\" tabindex=\"-1\"></button>\n            <span class=\"month-year\">\n              <span *ngIf=\"mode != 'year'\" class=\"month-name\" (click)=\"showMonthSelector()\">{{ getCurrentMonthName() }}</span>\n              <span class=\"year\" (click)=\"showYearSelector()\">{{ getCurrentYear() }}</span>\n            </span>\n            <button class=\"asa-calendar-nav-right\" (click)=\"goNext()\" [disabled]=\"isNextMonthDisabled()\" tabindex=\"-1\"></button>\n          </div>\n          <div *ngIf=\"viewMode == 'days'\">\n            <div *ngIf=\"viewMode === 'days'\" class=\"weekdays\">\n              <span *ngFor=\"let day of getWeekDays()\">{{ day }}</span>\n            </div>\n            <div *ngIf=\"viewMode === 'days'\" class=\"days\">\n              <button\n                *ngFor=\"let day of days\"\n                tabindex=\"-1\"\n                [class.different-month]=\"!isSameMonth(day, currentDate)\"\n                [class.selected]=\"isSelected(day)\"\n                [class.in-range]=\"isInRange(day)\"\n                [class.range-start]=\"isRangeStart(day)\"\n                [class.range-end]=\"isRangeEnd(day)\"\n                [class.today]=\"isToday(day)\"\n                [class.disabled]=\"isDateDisabled(day)\"\n                [disabled]=\"isDateDisabled(day)\"\n                (click)=\"selectDate(day)\"\n                (mouseenter)=\"onMouseEnter(day,$event)\"\n              >\n                <ng-container *ngIf=\"dayTemplate; else dayDefTemplate\">\n                  <ng-container *ngTemplateOutlet=\"$any(dayTemplate); context: { $implicit: day }\"></ng-container>\n                </ng-container>\n                <ng-template #dayDefTemplate>\n                  {{ dateAdapter.getDate(day) }}\n                </ng-template>\n              </button>\n            </div>\n          </div>\n          <div *ngIf=\"viewMode === 'months'\" class=\"months\">\n            <button\n              *ngFor=\"let month of monthListNum\"\n              tabindex=\"-1\"\n              [class.selected]=\"month === dateAdapter.getMonth(currentDate) + 1\"\n              [disabled]=\"isMonthDisabled(month)\"\n              (click)=\"selectMonth(month,false)\"\n            >\n              <ng-container *ngIf=\"monthTemplate; else monthDefTemplate\">\n                <ng-container *ngTemplateOutlet=\"$any(monthTemplate); context: { $implicit: month }\"></ng-container>\n              </ng-container>\n              <ng-template #monthDefTemplate>\n                {{ getMonthName(month) }}\n              </ng-template>\n            </button>\n          </div>\n          <div *ngIf=\"viewMode === 'years' || mode == 'year'\" class=\"years\">\n            <button\n              *ngFor=\"let year of yearList\"\n              tabindex=\"-1\"\n              [class.selected]=\"year === dateAdapter.getYear(currentDate)\"\n              [disabled]=\"isYearDisabled(year)\"\n              (click)=\"selectYear(year)\"\n            >\n              <ng-container *ngIf=\"yearTemplate; else yearDefTemplate\">\n                <ng-container *ngTemplateOutlet=\"$any(yearTemplate); context: { $implicit: year }\"></ng-container>\n              </ng-container>\n              <ng-template #yearDefTemplate>\n                {{ year }}\n              </ng-template>\n            </button>\n          </div>\n        </div>\n\n        <!-- Time Picker Integration -->\n        <div *ngIf=\"showTimePicker\" class=\"time-picker-section\">\n          <asa-time-picker\n            #timePicker\n            [rtl]=\"rtl\"\n            [dateAdapter]=\"dateAdapter\"\n            [valueType]=\"'date'\"\n            [displayFormat]=\"timeDisplayFormat\"\n            [inline]=\"true\"\n            [disabledTimesFilter]=\"disabledTimesFilter\"\n            [cssClass]=\"'embedded-time-picker'\"\n            [selectedDate]=\"selectedDate\"\n            (timeChange)=\"onTimeChange($event)\"\n          ></asa-time-picker>\n        </div>\n      </div>\n      <div class=\"date-picker-footer\" *ngIf=\"footerDescription || showTimePicker || showToday\">\n        <div class=\"footer-description\" *ngIf=\"footerDescription\" [innerHtml]=\"footerDescription\">\n        </div>\n        <div class=\"footer-actions\">\n          <button *ngIf=\"showTimePicker\" class=\"footer-button ok\" (click)=\"onOkClick()\">{{ lang.ok }}</button>\n          <button *ngIf=\"showToday\" class=\"footer-button\" (click)=\"onTodayClick()\">{{ lang.today }}</button>\n        </div>\n      </div>\n    </div>\n  `, styles: [\":host *{font-family:inherit;font-weight:400;box-sizing:border-box;padding:0;margin:0}:host.up .date-picker-popup{bottom:100%;margin-bottom:5px}:host.down .date-picker-popup{top:100%;margin-top:5px}.date-picker-popup{display:flex;flex-direction:column;border-radius:4px;box-shadow:0 2px 10px #0000001a;overflow:hidden;z-index:1000;width:fit-content;border:1px solid #ddd;background:white}.date-picker-content{display:flex;flex-direction:row;max-height:295px}.date-picker-footer{border-top:1px solid #f0f0f0;padding:10px;display:flex;flex-direction:column;justify-content:space-between}.side-selector,.period-selector{width:120px;border-inline-end:1px solid #f0f0f0}.side-selector button,.period-selector button{display:flex;justify-content:space-between;font-size:14px;width:100%;padding:10px;text-align:start;border:none;background:none;cursor:pointer;border-block-end:1px solid #f0f0f0;color:#555;transition:background-color .3s}.side-selector button:hover,.period-selector button:hover{background-color:#e6f7ff}.side-selector button.active,.period-selector button.active{background-color:#bfeaff;color:#0175e0;width:100%}.side-selector{overflow:auto;scrollbar-width:none;-ms-overflow-style:none}.side-selector::-webkit-scrollbar{display:none}.calendar{padding:10px 15px 15px;flex-grow:1;background:#FFF;width:280px;max-width:280px}.header{display:flex;justify-content:space-between;align-items:center;margin-bottom:5px;padding-bottom:2px;border-bottom:1px solid #f0f0f0}.header button{background:none;border:none;font-size:16px;cursor:pointer;padding:4px 5px}.header .month-name,.header .year{color:#47366c}.weekdays{display:grid;grid-template-columns:repeat(7,1fr);text-align:center;margin-bottom:5px;font-size:14px;color:#18396cb0}.weekdays span{font-weight:700}.days{display:grid;grid-template-columns:repeat(7,1fr);gap:2px}.days button{position:relative;aspect-ratio:1;border:none;background:none;cursor:pointer;border-radius:50%;font-size:14px;color:#555;transition:background-color .3s,color .3s}.days button:hover{background-color:#e6f7ff}.days button.different-month{color:#ccc}.days button.selected,.days button.range-end.in-range,.days button.range-start.in-range{background-color:#1890ff;color:#fff}.days button.in-range{background-color:#e6f7ff;color:#1890ff}.days button.today{border:2px solid #29b9ff}.days button.today span{position:absolute;bottom:-1rem;right:.6rem;padding:0;margin:0;font-size:36px;color:#9370db}.days button.disabled{color:#aaa;background:#fafafa;opacity:1}.days button.disabled:after{content:\\\"\\\";background:rgba(252,103,143,.6666666667);position:absolute;right:20%;top:45%;width:20px;height:1px;transform:rotate(145deg)}.month-year{display:flex;align-items:center;cursor:pointer;font-size:16px}.month-name,.year{margin:0 5px}.years,.months{display:grid;grid-template-columns:repeat(3,1fr)}.years button,.months button{padding:10px;border:none;background:none;cursor:pointer;font-size:14px;position:relative}.years button.selected,.months button.selected{background-color:#1890ff;color:#fff}.months{gap:1rem .3rem}.years{gap:.5rem .3rem!important}.footer-description{font-size:13px;color:#666}.footer-actions{display:flex;gap:10px;justify-content:end;flex-direction:row-reverse}.footer-button{background:none;border:none;color:#1890ff;cursor:pointer;font-size:14px;padding:2px 6px;transition:color .3s}.footer-button.ok{background:#1890ff;border-radius:1px;color:#fff}.footer-button.ok:hover{color:#eee}.footer-button:hover{color:#40a9ff}.asa-calendar-nav-right:before,.asa-calendar-nav-left:before{position:relative;content:\\\"\\\";display:inline-block;height:6px;width:6px;vertical-align:baseline;border-style:solid;border-color:#555;border-width:2px 2px 0 0}.asa-calendar-nav-left:before{transform:rotate(-135deg)!important}.asa-calendar-nav-right:before{transform:rotate(45deg)}button:disabled{opacity:.5;cursor:not-allowed}[tabindex=\\\"-1\\\"]:focus{outline:none!important}.rtl{direction:rtl}.rtl .arrow{rotate:180deg}.rtl .asa-calendar-nav-left:before{transform:rotate(45deg)!important}.rtl .asa-calendar-nav-right:before{transform:rotate(-135deg)}.rtl .calendar{direction:rtl}[dir=rtl] .arrow{rotate:180deg}.time-picker-section{border-inline-start:1px solid #f0f0f0}\\n\"] }]\r\n        }], ctorParameters: function () { return [{ type: i0.ElementRef }, { type: i0.ChangeDetectorRef }, { type: AsaDatePickerService }, { type: JalaliDateAdapter }, { type: GregorianDateAdapter }, { type: DestroyService }]; }, propDecorators: { rtl: [{\r\n                type: Input\r\n            }], selectedDate: [{\r\n                type: Input\r\n            }], selectedStartDate: [{\r\n                type: Input\r\n            }], selectedEndDate: [{\r\n                type: Input\r\n            }], mode: [{\r\n                type: Input\r\n            }], isRange: [{\r\n                type: Input\r\n            }], customLabels: [{\r\n                type: Input\r\n            }], calendarType: [{\r\n                type: Input\r\n            }], minDate: [{\r\n                type: Input\r\n            }], maxDate: [{\r\n                type: Input\r\n            }], cssClass: [{\r\n                type: Input\r\n            }], footerDescription: [{\r\n                type: Input\r\n            }], activeInput: [{\r\n                type: Input\r\n            }], showSidebar: [{\r\n                type: Input\r\n            }], showToday: [{\r\n                type: Input\r\n            }], showTimePicker: [{\r\n                type: Input\r\n            }], timeDisplayFormat: [{\r\n                type: Input\r\n            }], dateFormat: [{\r\n                type: Input\r\n            }], disabledDates: [{\r\n                type: Input\r\n            }], disabledDatesFilter: [{\r\n                type: Input\r\n            }], disabledTimesFilter: [{\r\n                type: Input\r\n            }], templates: [{\r\n                type: Input\r\n            }], dateSelected: [{\r\n                type: Output\r\n            }], dateRangeSelected: [{\r\n                type: Output\r\n            }], closePicker: [{\r\n                type: Output\r\n            }], clickInside: [{\r\n                type: Output\r\n            }], itemSelector: [{\r\n                type: ViewChild,\r\n                args: ['itemSelector']\r\n            }], timePicker: [{\r\n                type: ViewChild,\r\n                args: [TimePickerComponent]\r\n            }], onClickInside: [{\r\n                type: HostListener,\r\n                args: ['click']\r\n            }] } });\n\nclass CustomTemplate {\r\n    constructor(template) {\r\n        this.template = template;\r\n    }\r\n    getType() {\r\n        return this.name;\r\n    }\r\n}\r\nCustomTemplate.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"14.3.0\", ngImport: i0, type: CustomTemplate, deps: [{ token: i0.TemplateRef }], target: i0.ɵɵFactoryTarget.Directive });\r\nCustomTemplate.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"14.0.0\", version: \"14.3.0\", type: CustomTemplate, isStandalone: true, selector: \"[Template]\", inputs: { type: \"type\", name: [\"Template\", \"name\"] }, ngImport: i0 });\r\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"14.3.0\", ngImport: i0, type: CustomTemplate, decorators: [{\r\n            type: Directive,\r\n            args: [{\r\n                    selector: '[Template]',\r\n                    standalone: true,\r\n                    host: {}\r\n                }]\r\n        }], ctorParameters: function () { return [{ type: i0.TemplateRef }]; }, propDecorators: { type: [{\r\n                type: Input\r\n            }], name: [{\r\n                type: Input,\r\n                args: ['Template']\r\n            }] } });\n\nclass AsaDatePickerComponent {\r\n    constructor(fb, elementRef, renderer, cdref, dpService, destroy$, ngZone, jalali, gregorian, doc) {\r\n        this.fb = fb;\r\n        this.elementRef = elementRef;\r\n        this.renderer = renderer;\r\n        this.cdref = cdref;\r\n        this.dpService = dpService;\r\n        this.destroy$ = destroy$;\r\n        this.ngZone = ngZone;\r\n        this.jalali = jalali;\r\n        this.gregorian = gregorian;\r\n        // ========== Input Properties ==========\r\n        this.rtl = false;\r\n        this.mode = 'day';\r\n        this.isRange = false;\r\n        this.calendarType = 'gregorian';\r\n        this.cssClass = '';\r\n        this.footerDescription = '';\r\n        this.placement = 'bottomRight';\r\n        this.disabled = false;\r\n        this.isInline = false;\r\n        this.showSidebar = true;\r\n        this.showToday = false;\r\n        this.valueFormat = 'gregorian';\r\n        this.disableInputMask = false;\r\n        this.disabledDates = [];\r\n        this.allowEmpty = false;\r\n        this.readOnly = false;\r\n        this.readOnlyInput = false;\r\n        // ========== Output Properties ==========\r\n        this.onFocus = new EventEmitter();\r\n        this.onBlur = new EventEmitter();\r\n        this.onChangeValue = new EventEmitter();\r\n        this.onOpenChange = new EventEmitter();\r\n        this.overlayPositions = [...DEFAULT_DATE_PICKER_POSITIONS];\r\n        this.currentPositionX = 'start';\r\n        this.currentPositionY = 'bottom';\r\n        this.isOpen = false;\r\n        this.selectedDate = null;\r\n        this.selectedStartDate = null;\r\n        this.selectedEndDate = null;\r\n        this.activeInput = '';\r\n        this.hideStateHelper = false;\r\n        this.isInternalChange = false;\r\n        this.lastEmittedValue = null;\r\n        this.showTimePicker = false;\r\n        this.timeDisplayFormat = 'HH:mm';\r\n        this._format = 'yyyy/MM/dd';\r\n        // ========== ControlValueAccessor Implementation ==========\r\n        this.onChange = () => { };\r\n        this.onTouch = () => { };\r\n        this.initializeComponent(doc);\r\n    }\r\n    set minDate(date) {\r\n        if (date) {\r\n            this._minDate = date;\r\n        }\r\n    }\r\n    ;\r\n    get minDate() {\r\n        return this._minDate;\r\n    }\r\n    set maxDate(date) {\r\n        if (date) {\r\n            this._maxDate = date;\r\n        }\r\n    }\r\n    ;\r\n    get maxDate() {\r\n        return this._maxDate;\r\n    }\r\n    set format(value) {\r\n        this._format = value;\r\n        this.showTimePicker = this.hasTimeComponent(value);\r\n        this.timeDisplayFormat = this.extractTimeFormat(value);\r\n    }\r\n    get format() {\r\n        return this._format;\r\n    }\r\n    get valueAdapter() {\r\n        return this.valueFormat == 'jalali' ? this.jalali : this.gregorian;\r\n    }\r\n    // ========== Lifecycle Hooks ==========\r\n    ngOnInit() {\r\n        this.initialize();\r\n        document.addEventListener('click', this.documentClickListener);\r\n    }\r\n    ngOnChanges(changes) {\r\n        this.handleChanges(changes);\r\n    }\r\n    ngAfterViewInit() {\r\n        this.setupAfterViewInit();\r\n        this._minDate = this.valueAdapter?.parse(this._minDate, this.extractDateFormat(this.format));\r\n        this._maxDate = this.valueAdapter?.parse(this._maxDate, this.extractDateFormat(this.format));\r\n    }\r\n    ngOnDestroy() {\r\n        this.destroy$.next();\r\n        this.destroy$.complete();\r\n        document.removeEventListener('click', this.documentClickListener);\r\n    }\r\n    // ========== Initialization Methods ==========\r\n    initializeComponent(doc) {\r\n        this.origin = new CdkOverlayOrigin(this.elementRef);\r\n        this.document = doc;\r\n        this.form = this.fb.group({\r\n            dateInput: [''],\r\n            startDateInput: [''],\r\n            endDateInput: ['']\r\n        });\r\n        this.documentClickListener = this.handleDocumentClick.bind(this);\r\n        this.lang = this.calendarType === 'jalali' ? this.dpService.locale_fa : this.dpService.locale_en;\r\n        this.dpService.locale = this.lang;\r\n    }\r\n    initialize() {\r\n        this.setDateAdapter();\r\n        this.setupFormControls();\r\n    }\r\n    setupAfterViewInit() {\r\n        this.setupActiveInputSubscription();\r\n        this.setupMouseDownEventHandler();\r\n    }\r\n    // ========== Date Adapter Methods ==========\r\n    setDateAdapter() {\r\n        this.dateAdapter = this.calendarType === 'jalali' ? this.jalali : this.gregorian;\r\n    }\r\n    // ========== Form Control Methods ==========\r\n    setupFormControls() {\r\n        if (this.isRange) {\r\n            this.form.get('startDateInput')?.valueChanges.pipe(takeUntil$1(this.destroy$)).subscribe(value => this.onInputChange(value, 'start'));\r\n            this.form.get('endDateInput')?.valueChanges.pipe(takeUntil$1(this.destroy$)).subscribe(value => this.onInputChange(value, 'end'));\r\n        }\r\n        else {\r\n            this.form.get('dateInput')?.valueChanges.pipe(takeUntil$1(this.destroy$)).subscribe(value => this.onInputChange(value));\r\n        }\r\n    }\r\n    // ========== Event Handlers ==========\r\n    handleChanges(changes) {\r\n        if (changes['calendarType']) {\r\n            this.setDateAdapter();\r\n            this.updateInputValue();\r\n            this.lang = this.calendarType === 'jalali' ? this.dpService.locale_fa : this.dpService.locale_en;\r\n            this.dpService.locale = this.lang;\r\n        }\r\n        if (changes['minDate'] || changes['maxDate']) {\r\n            this._minDate = this.valueAdapter?.parse(this._minDate, this.extractDateFormat(this.format));\r\n            this._maxDate = this.valueAdapter?.parse(this._maxDate, this.extractDateFormat(this.format));\r\n            this.form.updateValueAndValidity();\r\n        }\r\n        if (changes['mode'] || changes['isRange']) {\r\n            this.setupFormControls();\r\n        }\r\n        if (changes['placement']) {\r\n            this.setPlacement(this.placement);\r\n        }\r\n        if (changes['lang']) {\r\n            this.lang = changes['lang'].currentValue;\r\n            this.dpService.locale = this.lang;\r\n        }\r\n        if (changes['mode'] && !changes['format']) {\r\n            this.format = this.getFormatForMode();\r\n        }\r\n        if (changes['isRange'] && this.isRange == false) {\r\n            this.origin = new CdkOverlayOrigin(this.elementRef);\r\n        }\r\n        if (changes['valueFormat']) {\r\n            this.emitValueIfChanged();\r\n        }\r\n    }\r\n    handleDocumentClick(event) {\r\n        if (!this.elementRef.nativeElement.contains(event.target)) {\r\n            if (this.isOpen) {\r\n                this.close();\r\n                this.onInputBlur(this.activeInput, event);\r\n            }\r\n            this.hideStateHelper = false;\r\n        }\r\n    }\r\n    // ========== Input Handling Methods ==========\r\n    onInputChange(value, inputType) {\r\n        if (!this.isInternalChange) {\r\n            if (this.isRange) {\r\n                this.handleRangeInputChange(value, inputType);\r\n            }\r\n            else {\r\n                this.handleSingleInputChange(value);\r\n            }\r\n            this.updateDatePickerPopup();\r\n        }\r\n    }\r\n    handleRangeInputChange(value, inputType) {\r\n        const date = this.dateAdapter.parse(value, this.format);\r\n        if (date) {\r\n            if (inputType === 'start') {\r\n                this.selectedStartDate = this.clampDate(date);\r\n            }\r\n            else if (inputType === 'end') {\r\n                this.selectedEndDate = this.clampDate(date);\r\n            }\r\n            this.emitValueIfChanged();\r\n        }\r\n    }\r\n    handleSingleInputChange(value) {\r\n        const date = this.dateAdapter.parse(value, this.format);\r\n        if (date) {\r\n            this.selectedDate = this.clampDate(date);\r\n            this.emitValueIfChanged();\r\n        }\r\n    }\r\n    // ========== Value Emission Methods ==========\r\n    emitValueIfChanged() {\r\n        const newValue = this.prepareValueForEmission();\r\n        if (newValue && JSON.stringify(newValue) !== JSON.stringify(this.lastEmittedValue)) {\r\n            this.lastEmittedValue = newValue;\r\n            this.onChange(newValue);\r\n            this.onChangeValue.emit(newValue);\r\n        }\r\n    }\r\n    prepareValueForEmission() {\r\n        if (this.isRange) {\r\n            if (this.selectedStartDate && this.selectedEndDate) {\r\n                return {\r\n                    start: this.convertDateToFormat(this.selectedStartDate, this.calendarType),\r\n                    end: this.convertDateToFormat(this.selectedEndDate, this.calendarType)\r\n                };\r\n            }\r\n        }\r\n        else if (this.selectedDate) {\r\n            return this.convertDateToFormat(this.selectedDate, this.calendarType);\r\n        }\r\n        return null;\r\n    }\r\n    // ========== Date Selection Methods ==========\r\n    onDateSelected(date) {\r\n        const clampedDate = this.clampDate(date);\r\n        if (this.isRange) {\r\n            this.handleRangeDateSelection(clampedDate);\r\n        }\r\n        else {\r\n            this.handleSingleDateSelection(clampedDate);\r\n        }\r\n        this.hideStateHelper = true;\r\n        this.updateDatePickerPopup();\r\n        this.focus();\r\n    }\r\n    handleRangeDateSelection(date) {\r\n        if (!this.selectedStartDate || (this.selectedStartDate && this.selectedEndDate) ||\r\n            this.dateAdapter.isBefore(date, this.selectedStartDate)) {\r\n            this.selectedStartDate = date;\r\n            this.selectedEndDate = null;\r\n            this.form.get('startDateInput')?.setValue(this.dateAdapter.format(date, this.format), { emitEvent: false });\r\n            this.form.get('endDateInput')?.setValue('', { emitEvent: false });\r\n        }\r\n        else {\r\n            this.selectedEndDate = date;\r\n            this.form.get('endDateInput')?.setValue(this.dateAdapter.format(date, this.format), { emitEvent: false });\r\n            this.emitValueIfChanged();\r\n            this.close();\r\n        }\r\n    }\r\n    handleSingleDateSelection(date) {\r\n        this.selectedDate = date;\r\n        const formattedDate = this.dateAdapter.format(date, this.format);\r\n        this.form.get('dateInput')?.setValue(formattedDate, { emitEvent: false });\r\n        this.emitValueIfChanged();\r\n        this.close();\r\n    }\r\n    // ========== Date Range Methods ==========\r\n    onDateRangeSelected(dateRange) {\r\n        this.hideStateHelper = true;\r\n        this.selectedStartDate = this.clampDate(dateRange.start);\r\n        const startFormatted = this.dateAdapter.format(this.selectedStartDate, this.format);\r\n        this.form.get('startDateInput')?.setValue(startFormatted, { emitEvent: false });\r\n        if (dateRange.end) {\r\n            this.selectedEndDate = this.clampDate(dateRange.end);\r\n            const endFormatted = this.dateAdapter.format(this.selectedEndDate, this.format);\r\n            this.form.get('endDateInput')?.setValue(endFormatted, { emitEvent: false });\r\n            this.emitValueIfChanged();\r\n            if (!this.hasTimeComponent(this.format))\r\n                this.close();\r\n            this.updateDatePickerPopup();\r\n            this.focus();\r\n        }\r\n    }\r\n    // ========== UI State Methods ==========\r\n    close() {\r\n        if (this.isInline) {\r\n            return;\r\n        }\r\n        if (this.isOpen) {\r\n            this.isOpen = false;\r\n            this.onOpenChange.emit(false);\r\n            this.cdref.markForCheck();\r\n        }\r\n    }\r\n    open() {\r\n        if (this.isInline || this.isOpen || this.disabled || this.readOnly) {\r\n            return;\r\n        }\r\n        this.isOpen = true;\r\n        this.onOpenChange.emit(true);\r\n        this.focus();\r\n        this.cdref.markForCheck();\r\n    }\r\n    focus() {\r\n        const activeInputElement = this.getInput(this.activeInput);\r\n        if (this.document.activeElement !== activeInputElement) {\r\n            activeInputElement?.focus();\r\n            const length = activeInputElement?.value?.length;\r\n            activeInputElement?.setSelectionRange(length, length);\r\n        }\r\n    }\r\n    // ========== UI Helper Methods ==========\r\n    getInput(partType) {\r\n        if (this.isInline) {\r\n            return undefined;\r\n        }\r\n        return this.isRange\r\n            ? partType === 'start'\r\n                ? this.rangePickerInputs?.first.nativeElement\r\n                : this.rangePickerInputs?.last.nativeElement\r\n            : this.datePickerInput?.nativeElement;\r\n    }\r\n    getPlaceholder(inputType = null) {\r\n        if (inputType === 'start')\r\n            return this.lang.startDate;\r\n        if (inputType === 'end')\r\n            return this.lang.endDate;\r\n        switch (this.mode) {\r\n            case 'month': return this.lang.selectMonth;\r\n            case 'year': return this.lang.selectYear;\r\n            default: return this.lang.selectDate;\r\n        }\r\n    }\r\n    // ========== Date Validation Methods ==========\r\n    clampDate(date) {\r\n        if (!date)\r\n            return date;\r\n        let adjustedDate = this.dateAdapter.clone(date);\r\n        if (this.minDate && this.dateAdapter.isBefore(adjustedDate, this.minDate)) {\r\n            return this.minDate;\r\n        }\r\n        if (this.maxDate && this.dateAdapter.isAfter(adjustedDate, this.maxDate)) {\r\n            return this.maxDate;\r\n        }\r\n        if (this.isDateDisabled(adjustedDate)) {\r\n            // Find the nearest enabled date\r\n            adjustedDate = this.findNearestValidDate(adjustedDate);\r\n        }\r\n        // Preserve the original time if format includes time\r\n        adjustedDate = this.clampDateTime(adjustedDate, date);\r\n        return adjustedDate;\r\n    }\r\n    clampDateTime(adjustedDate, date) {\r\n        if (this.hasTimeComponent(this.format)) {\r\n            adjustedDate.setHours(date.getHours());\r\n            adjustedDate.setMinutes(date.getMinutes());\r\n            adjustedDate.setSeconds(date.getSeconds());\r\n            let { normalizedDate } = this.validateAndNormalizeTime(adjustedDate);\r\n            adjustedDate = normalizedDate;\r\n        }\r\n        return adjustedDate;\r\n    }\r\n    findNearestValidDate(date) {\r\n        let nextDate = this.dateAdapter.addDays(date, 1);\r\n        let prevDate = this.dateAdapter.addDays(date, -1);\r\n        while (this.isDateDisabled(nextDate) && this.isDateDisabled(prevDate)) {\r\n            nextDate = this.dateAdapter.addDays(nextDate, 1);\r\n            prevDate = this.dateAdapter.addDays(prevDate, -1);\r\n        }\r\n        // Return the first non-disabled date found\r\n        if (!this.isDateDisabled(nextDate)) {\r\n            date = nextDate;\r\n        }\r\n        else if (!this.isDateDisabled(prevDate)) {\r\n            date = prevDate;\r\n        }\r\n        return date;\r\n    }\r\n    validateAndNormalizeTime(date) {\r\n        if (!this.dateAdapter) {\r\n            return { isValid: false, normalizedDate: null };\r\n        }\r\n        let isValid = true;\r\n        let normalizedDate = this.dateAdapter.clone(date);\r\n        if (this.isTimeDisabled(normalizedDate)) {\r\n            isValid = false;\r\n            // Get start and end of the current day\r\n            const startOfDay = this.dateAdapter.clone(date);\r\n            startOfDay.setHours(0, 0, 0, 0);\r\n            const endOfDay = this.dateAdapter.clone(date);\r\n            endOfDay.setHours(23, 59, 59, 999);\r\n            // Try to find nearest valid time within the same day\r\n            const currentMinutes = date.getHours() * 60 + date.getMinutes();\r\n            const maxForwardMinutes = (24 * 60) - currentMinutes;\r\n            let validTimeFound = false;\r\n            // Check forward\r\n            for (let i = 1; i <= maxForwardMinutes; i++) {\r\n                const nextTime = this.dateAdapter.clone(date);\r\n                nextTime.setHours(Math.floor((currentMinutes + i) / 60), (currentMinutes + i) % 60, 0);\r\n                if (nextTime.getTime() <= endOfDay.getTime() && !this.isTimeDisabled(nextTime)) {\r\n                    normalizedDate = nextTime;\r\n                    validTimeFound = true;\r\n                    break;\r\n                }\r\n            }\r\n            // Check backward\r\n            if (!validTimeFound)\r\n                for (let i = 1; i < currentMinutes; i++) {\r\n                    const prevTime = this.dateAdapter.clone(date);\r\n                    prevTime.setHours(Math.floor((currentMinutes - i) / 60), (currentMinutes - i) % 60, 0);\r\n                    if (prevTime.getTime() >= startOfDay.getTime() && !this.isTimeDisabled(prevTime)) {\r\n                        normalizedDate = prevTime;\r\n                        break;\r\n                    }\r\n                }\r\n            // If no valid time found in the current day, set to start of day\r\n            if (this.isTimeDisabled(normalizedDate)) {\r\n                normalizedDate = startOfDay;\r\n            }\r\n        }\r\n        return { isValid: isValid, normalizedDate };\r\n    }\r\n    parseDisabledDates() {\r\n        return this.disabledDates.map(date => {\r\n            if (date instanceof Date) {\r\n                return this.dateAdapter.startOfDay(date);\r\n            }\r\n            const parsedDate = this.dateAdapter.parse(date, this.extractDateFormat(this.format));\r\n            return parsedDate || null;\r\n        }).filter(date => date !== null);\r\n    }\r\n    isDateDisabled(date) {\r\n        if (!date)\r\n            return false;\r\n        const dateToCheck = this.dateAdapter.startOfDay(date);\r\n        // Check if date is in disabled dates array\r\n        const parsedDisabledDates = this.parseDisabledDates();\r\n        const isDisabledDate = parsedDisabledDates.some(disabledDate => this.dateAdapter.isSameDay(dateToCheck, disabledDate));\r\n        // Check custom filter function if provided\r\n        const isFilterDisabled = this.disabledDatesFilter ?\r\n            this.disabledDatesFilter(dateToCheck) :\r\n            false;\r\n        return isDisabledDate || isFilterDisabled;\r\n    }\r\n    isTimeDisabled(date) {\r\n        return this.disabledTimesFilter ? this.disabledTimesFilter(date) : false;\r\n    }\r\n    // ========== Date Validation Methods (continued) ==========\r\n    dateFormatValidator(control) {\r\n        const value = control.value;\r\n        if (!value)\r\n            return null;\r\n        const format = this.getFormatForMode();\r\n        if (!this.dateAdapter.isValidFormat(value, format)) {\r\n            return { invalidFormat: true };\r\n        }\r\n        return null;\r\n    }\r\n    getFormatForMode() {\r\n        switch (this.mode) {\r\n            case 'year':\r\n                return 'yyyy';\r\n            case 'month':\r\n                return 'yyyy/MM';\r\n            default:\r\n                return this.format;\r\n        }\r\n    }\r\n    // ========== Overlay Position Methods ==========\r\n    setPlacement(placement) {\r\n        const position = DATE_PICKER_POSITION_MAP[placement];\r\n        this.overlayPositions = [position, ...DEFAULT_DATE_PICKER_POSITIONS];\r\n        this.currentPositionX = position.originX;\r\n        this.currentPositionY = position.originY;\r\n    }\r\n    onPositionChange(position) {\r\n        if (this.currentPositionX !== position.connectionPair.originX ||\r\n            this.currentPositionY !== position.connectionPair.originY) {\r\n            this.currentPositionX = position.connectionPair.originX;\r\n            this.currentPositionY = position.connectionPair.originY;\r\n            this.cdref.markForCheck();\r\n        }\r\n    }\r\n    // ========== Input Event Handlers ==========\r\n    onFocusout(event) {\r\n        event.preventDefault();\r\n        this.onTouch();\r\n        if (!this.elementRef.nativeElement.contains(event.relatedTarget) &&\r\n            !this.datePickerPopup?.el.nativeElement.contains(event.relatedTarget)) {\r\n            this.close();\r\n        }\r\n    }\r\n    onInputBlur(inputType, event) {\r\n        const inputValue = this.getInputValue(inputType);\r\n        if (typeof inputValue === 'string' && !this.isOpen) {\r\n            const correctedValue = this.validateAndCorrectInput(inputValue);\r\n            if (correctedValue !== inputValue) {\r\n                if (inputValue) {\r\n                    this.handleCorrectedValue(inputType, correctedValue);\r\n                }\r\n                else if (!this.allowEmpty) {\r\n                    this.handleCorrectedValue(inputType, correctedValue);\r\n                }\r\n                else {\r\n                    this.selectedDate = null;\r\n                    this.onChange(inputValue);\r\n                }\r\n            }\r\n            this.onBlur.emit({\r\n                input: inputType,\r\n                event,\r\n                value: correctedValue\r\n            });\r\n        }\r\n    }\r\n    getInputValue(inputType) {\r\n        if (this.isRange) {\r\n            return inputType === 'start'\r\n                ? this.form.get('startDateInput')?.value\r\n                : this.form.get('endDateInput')?.value;\r\n        }\r\n        return this.form.get('dateInput')?.value;\r\n    }\r\n    validateAndCorrectInput(value) {\r\n        let date = this.dateAdapter.parse(value, this.format);\r\n        if (!date) {\r\n            const today = this.dateAdapter.today();\r\n            date = this.clampDate(today);\r\n        }\r\n        else {\r\n            date = this.clampDate(date);\r\n        }\r\n        return this.dateAdapter.format(date, this.format);\r\n    }\r\n    handleCorrectedValue(inputType, correctedValue) {\r\n        this.isInternalChange = true;\r\n        if (this.isRange) {\r\n            this.handleRangeCorrectedValue(inputType, correctedValue);\r\n        }\r\n        else {\r\n            this.handleSingleCorrectedValue(correctedValue);\r\n        }\r\n        this.isInternalChange = false;\r\n    }\r\n    handleRangeCorrectedValue(inputType, correctedValue) {\r\n        if (inputType === 'start') {\r\n            this.form.get('startDateInput')?.setValue(correctedValue);\r\n            this.selectedStartDate = this.dateAdapter.parse(correctedValue, this.format);\r\n        }\r\n        else {\r\n            this.form.get('endDateInput')?.setValue(correctedValue);\r\n            this.selectedEndDate = this.dateAdapter.parse(correctedValue, this.format);\r\n        }\r\n        if (this.selectedStartDate && this.selectedEndDate) {\r\n            this.onChange({\r\n                start: this.dateAdapter.format(this.selectedStartDate, this.format),\r\n                end: this.dateAdapter.format(this.selectedEndDate, this.format)\r\n            });\r\n        }\r\n        if (this.datePickerPopup) {\r\n            this.datePickerPopup.selectedStartDate = this.selectedStartDate;\r\n            this.datePickerPopup.selectedEndDate = this.selectedEndDate;\r\n            this.datePickerPopup.generateCalendar();\r\n        }\r\n    }\r\n    handleSingleCorrectedValue(correctedValue) {\r\n        this.form.get('dateInput')?.setValue(correctedValue);\r\n        this.selectedDate = this.dateAdapter.parse(correctedValue, this.format);\r\n        this.onChange(this.selectedDate);\r\n        if (this.datePickerPopup) {\r\n            this.datePickerPopup.selectedDate = this.selectedDate;\r\n        }\r\n    }\r\n    onFocusInput(inputType, event) {\r\n        if (this.hideStateHelper == false) {\r\n            this.toggleDatePicker(inputType, event);\r\n            this.hideStateHelper = true;\r\n        }\r\n        else {\r\n            this.hideStateHelper = false;\r\n        }\r\n    }\r\n    toggleDatePicker(inputType, event) {\r\n        this.onFocus.emit({\r\n            input: inputType,\r\n            event\r\n        });\r\n        this.activeInput = inputType;\r\n        this.dpService.activeInput$.next(this.activeInput);\r\n        this.open();\r\n        this.cdref.detectChanges();\r\n    }\r\n    onInputKeydown(event) {\r\n        if ((!event.shiftKey && event.key === 'Tab') || (!event.shiftKey && event.key === 'Enter')) {\r\n            if (this.isRange) {\r\n                return;\r\n            }\r\n            this.close();\r\n        }\r\n    }\r\n    // ========== Update Methods ==========\r\n    updateInputValue() {\r\n        if (this.isRange) {\r\n            if (this.selectedStartDate) {\r\n                this.form.get('startDateInput')?.setValue(this.dateAdapter.format(this.selectedStartDate, this.format));\r\n            }\r\n            if (this.selectedEndDate) {\r\n                this.form.get('endDateInput')?.setValue(this.dateAdapter.format(this.selectedEndDate, this.format));\r\n            }\r\n        }\r\n        else if (this.selectedDate) {\r\n            this.form.get('dateInput')?.setValue(this.dateAdapter.format(this.selectedDate, this.format));\r\n        }\r\n    }\r\n    updateDatePickerPopup() {\r\n        if (this.datePickerPopup) {\r\n            if (this.isRange) {\r\n                this.datePickerPopup.selectedStartDate = this.selectedStartDate;\r\n                this.datePickerPopup.selectedEndDate = this.selectedEndDate;\r\n                if (this.showTimePicker) {\r\n                    this.datePickerPopup.timePicker.updateFromDate(this.activeInput == 'start' ?\r\n                        this.selectedStartDate :\r\n                        this.selectedEndDate);\r\n                    this.datePickerPopup.timePicker.scrollToTime();\r\n                }\r\n            }\r\n            else {\r\n                this.datePickerPopup.selectedDate = this.selectedDate;\r\n                if (this.showTimePicker) {\r\n                    this.datePickerPopup.timePicker.updateFromDate(this.selectedDate);\r\n                    this.datePickerPopup.timePicker.scrollToTime();\r\n                }\r\n            }\r\n            this.datePickerPopup.generateCalendar();\r\n            this.cdref.detectChanges();\r\n        }\r\n    }\r\n    convertDateToFormat(date, fromType) {\r\n        if (!date)\r\n            return null;\r\n        switch (this.valueFormat) {\r\n            case 'date':\r\n                return date;\r\n            case 'jalali':\r\n                return this.jalali.format(date, this.format);\r\n            case 'gregorian':\r\n                return this.gregorian.format(date, this.format);\r\n            default:\r\n                return this.dateAdapter.format(date, this.format);\r\n        }\r\n    }\r\n    writeValue(value) {\r\n        if (value) {\r\n            this.isInternalChange = true;\r\n            if (this.isRange && typeof value === 'object') {\r\n                const startDate = this.parseIncomingValue(value.start);\r\n                const endDate = this.parseIncomingValue(value.end);\r\n                if (startDate) {\r\n                    this.selectedStartDate = startDate;\r\n                    this.form.get('startDateInput')?.setValue(this.dateAdapter.format(startDate, this.format), { emitEvent: false });\r\n                }\r\n                if (endDate) {\r\n                    this.selectedEndDate = endDate;\r\n                    this.form.get('endDateInput')?.setValue(this.dateAdapter.format(endDate, this.format), { emitEvent: false });\r\n                }\r\n            }\r\n            else {\r\n                const parsedDate = this.parseIncomingValue(value);\r\n                if (parsedDate) {\r\n                    this.selectedDate = parsedDate;\r\n                    this.form.get('dateInput')?.setValue(this.dateAdapter.format(parsedDate, this.format), { emitEvent: false });\r\n                }\r\n            }\r\n            this.lastEmittedValue = value;\r\n            this.isInternalChange = false;\r\n            this.updateDatePickerPopup();\r\n            this.cdref.markForCheck();\r\n        }\r\n        else {\r\n            this.resetValues();\r\n        }\r\n    }\r\n    resetValues() {\r\n        this.isInternalChange = true;\r\n        this.selectedDate = null;\r\n        this.selectedStartDate = null;\r\n        this.selectedEndDate = null;\r\n        this.form.get('dateInput')?.setValue('', { emitEvent: false });\r\n        this.form.get('startDateInput')?.setValue('', { emitEvent: false });\r\n        this.form.get('endDateInput')?.setValue('', { emitEvent: false });\r\n        this.lastEmittedValue = null;\r\n        this.isInternalChange = false;\r\n        this.updateDatePickerPopup();\r\n    }\r\n    registerOnChange(fn) {\r\n        this.onChange = fn;\r\n    }\r\n    registerOnTouched(fn) {\r\n        this.onTouch = fn;\r\n    }\r\n    // ========== Setup Methods ==========\r\n    setupActiveInputSubscription() {\r\n        this.dpService.activeInput$\r\n            .pipe(takeUntil$1(this.destroy$))\r\n            .subscribe((active) => {\r\n            this.activeInput = active;\r\n            if (active) {\r\n                if (!this.isOpen)\r\n                    this.origin = new CdkOverlayOrigin(this.activeInput == 'start' ? this.rangePickerInputs?.first : this.rangePickerInputs.last);\r\n                this.focus();\r\n            }\r\n        });\r\n    }\r\n    setupMouseDownEventHandler() {\r\n        this.ngZone.runOutsideAngular(() => fromEvent(this.elementRef.nativeElement, 'mousedown')\r\n            .pipe(takeUntil$1(this.destroy$))\r\n            .subscribe((event) => {\r\n            if (event.target.tagName.toLowerCase() !== 'input') {\r\n                event.preventDefault();\r\n            }\r\n        }));\r\n    }\r\n    parseDateValue(value) {\r\n        if (value instanceof Date) {\r\n            return value;\r\n        }\r\n        return this.dateAdapter.parse(value, this.format);\r\n    }\r\n    parseValueFromFormat(value, targetAdapter) {\r\n        if (!value)\r\n            return null;\r\n        if (value instanceof Date)\r\n            return value;\r\n        return targetAdapter.parse(value, this.format);\r\n    }\r\n    parseIncomingValue(value) {\r\n        if (!value)\r\n            return null;\r\n        if (value instanceof Date)\r\n            return value;\r\n        let parsedDate = null;\r\n        // try with value adapter\r\n        parsedDate = this.valueAdapter.parse(value, this.format);\r\n        if (parsedDate)\r\n            return parsedDate;\r\n        return null;\r\n    }\r\n    // ========== Time Methods ==========\r\n    hasTimeComponent(format) {\r\n        return /[Hh]|[m]|[s]|[a]/g.test(format);\r\n    }\r\n    extractTimeFormat(format) {\r\n        const timeMatch = format.match(/[Hh]{1,2}:mm(?::ss)?(?:\\s*[aA])?/);\r\n        return timeMatch ? timeMatch[0] : 'HH:mm';\r\n    }\r\n    extractDateFormat(format) {\r\n        const dateFormatMatch = format.match(/[yMd\\/.-]+/);\r\n        return dateFormatMatch ? dateFormatMatch[0] : '';\r\n    }\r\n}\r\nAsaDatePickerComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"14.3.0\", ngImport: i0, type: AsaDatePickerComponent, deps: [{ token: i1$1.FormBuilder }, { token: i0.ElementRef }, { token: i0.Renderer2 }, { token: i0.ChangeDetectorRef }, { token: AsaDatePickerService }, { token: DestroyService }, { token: i0.NgZone }, { token: JalaliDateAdapter }, { token: GregorianDateAdapter }, { token: DOCUMENT }], target: i0.ɵɵFactoryTarget.Component });\r\nAsaDatePickerComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"14.0.0\", version: \"14.3.0\", type: AsaDatePickerComponent, isStandalone: true, selector: \"asa-date-picker\", inputs: { rtl: \"rtl\", mode: \"mode\", isRange: \"isRange\", customLabels: \"customLabels\", calendarType: \"calendarType\", lang: \"lang\", cssClass: \"cssClass\", footerDescription: \"footerDescription\", rangeInputLabels: \"rangeInputLabels\", inputLabel: \"inputLabel\", placement: \"placement\", disabled: \"disabled\", isInline: \"isInline\", showSidebar: \"showSidebar\", showToday: \"showToday\", valueFormat: \"valueFormat\", disableInputMask: \"disableInputMask\", disabledDates: \"disabledDates\", disabledDatesFilter: \"disabledDatesFilter\", disabledTimesFilter: \"disabledTimesFilter\", allowEmpty: \"allowEmpty\", readOnly: \"readOnly\", readOnlyInput: \"readOnlyInput\", minDate: \"minDate\", maxDate: \"maxDate\", format: \"format\" }, outputs: { onFocus: \"onFocus\", onBlur: \"onBlur\", onChangeValue: \"onChangeValue\", onOpenChange: \"onOpenChange\" }, host: { properties: { \"class.asa-datepicker\": \"true\", \"class.asa-datepicker-rtl\": \"rtl\" } }, providers: [\r\n        DestroyService,\r\n        AsaDatePickerService,\r\n        {\r\n            provide: NG_VALUE_ACCESSOR,\r\n            useExisting: forwardRef(() => AsaDatePickerComponent),\r\n            multi: true\r\n        }\r\n    ], queries: [{ propertyName: \"templates\", predicate: CustomTemplate }], viewQueries: [{ propertyName: \"datePickerInput\", first: true, predicate: [\"datePickerInput\"], descendants: true }, { propertyName: \"datePickerPopup\", first: true, predicate: DatePickerPopupComponent, descendants: true }, { propertyName: \"rangePickerInputs\", predicate: [\"rangePickerInput\"], descendants: true }], usesOnChanges: true, ngImport: i0, template: `\n    <div asaDatepickerStyles class=\"date-picker-wrapper\" [class.date-picker-rtl]=\"rtl\" [class.disabled]=\"disabled\" [formGroup]=\"form\">\n      <ng-container *ngIf=\"!isInline; else inlineMode\">\n        <ng-container *ngIf=\"!isRange; else rangeMode\">\n          <div class=\"input-container\" [class.rtl]>\n            <label for=\"dateInput\" *ngIf=\"inputLabel\">{{ inputLabel }}</label>\n            <input\n              #datePickerInput\n              type=\"text\"\n              formControlName=\"dateInput\"\n              [asa-dateMask]=\"format\"\n              [disableInputMask]=\"disableInputMask\"\n              (click)=\"toggleDatePicker(null,$event)\"\n              (focus)=\"onFocusInput(null,$event)\"\n              (blur)=\"onInputBlur(null,$event)\"\n              (keydown)=\"onInputKeydown($event)\"\n              [class.focus]=\"isOpen\"\n              [placeholder]=\"getPlaceholder()\"\n              [readonly]=\"readOnly || readOnlyInput\"\n              [attr.disabled]=\"disabled? 'disabled':null\"\n            >\n            <ng-container *ngTemplateOutlet=\"icon\"></ng-container>\n          </div>\n        </ng-container>\n        <ng-template #rangeMode>\n          <div *ngIf=\"rangeInputLabels\" class=\"range-input-labels\">\n            <div class=\"start-label\">\n              <label for=\"startDateInput\">{{ rangeInputLabels.start }}</label>\n            </div>\n            <div class=\"end-label\">\n              <label for=\"endDateInput\">{{ rangeInputLabels.end }}</label>\n            </div>\n          </div>\n          <div class=\"range-input-container\">\n            <input\n              #rangePickerInput\n              type=\"text\"\n              formControlName=\"startDateInput\"\n              [asa-dateMask]=\"format\"\n              [disableInputMask]=\"disableInputMask\"\n              (click)=\"toggleDatePicker('start',$event)\"\n              (focus)=\"onFocusInput('start',$event)\"\n              (focusout)=\"onFocusout($event)\"\n              (blur)=\"onInputBlur('start',$event)\"\n              (keydown)=\"onInputKeydown($event)\"\n              [class.focus]=\"isOpen && activeInput === 'start'\"\n              [placeholder]=\"getPlaceholder('start')\"\n              [readonly]=\"readOnly || readOnlyInput\"\n              [attr.disabled]=\"disabled? 'disabled':null\"\n            >\n            <span class=\"range-separator\">→</span>\n            <input\n              #rangePickerInput\n              type=\"text\"\n              formControlName=\"endDateInput\"\n              [asa-dateMask]=\"format\"\n              [disableInputMask]=\"disableInputMask\"\n              (click)=\"toggleDatePicker('end',$event)\"\n              (focus)=\"onFocusInput('end',$event)\"\n              (focusout)=\"onFocusout($event)\"\n              (blur)=\"onInputBlur('end',$event)\"\n              (keydown)=\"onInputKeydown($event)\"\n              [class.focus]=\"isOpen && activeInput === 'end'\"\n              [placeholder]=\"getPlaceholder('end')\"\n              [readonly]=\"readOnly || readOnlyInput\"\n              [attr.disabled]=\"disabled? 'disabled':null\"\n            >\n            <ng-container *ngTemplateOutlet=\"icon\"></ng-container>\n          </div>\n        </ng-template>\n        <ng-template #icon>\n            <button class=\"calendar-button\" (click)=\"toggleDatePicker(null, $event)\" tabindex=\"-1\">\n              <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"18px\" height=\"18px\" viewBox=\"0 0 24 24\" fill=\"#999\">\n                <path fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M6 2C6 1.44772 6.44772 1 7 1C7.55228 1 8 1.44772 8 2V3H16V2C16 1.44772 16.4477 1 17 1C17.5523 1 18 1.44772 18 2V3H19C20.6569 3 22 4.34315 22 6V20C22 21.6569 20.6569 23 19 23H5C3.34315 23 2 21.6569 2 20V6C2 4.34315 3.34315 3 5 3H6V2ZM16 5V6C16 6.55228 16.4477 7 17 7C17.5523 7 18 6.55228 18 6V5H19C19.5523 5 20 5.44772 20 6V9H4V6C4 5.44772 4.44772 5 5 5H6V6C6 6.55228 6.44772 7 7 7C7.55228 7 8 6.55228 8 6V5H16ZM4 11V20C4 20.5523 4.44772 21 5 21H19C19.5523 21 20 20.5523 20 20V11H4Z\" fill=\"#999\"/>\n              </svg>\n            </button>\n        </ng-template>\n      </ng-container>\n      <ng-template #inlineMode>\n        <div\n          class=\"dp-dropdown\"\n          [class.asa-picker-dropdown-rtl]=\"rtl\"\n          [class.asa-picker-dropdown-placement-bottomLeft]=\"currentPositionY === 'bottom' && currentPositionX === 'start'\"\n          [class.asa-picker-dropdown-placement-topLeft]=\"currentPositionY === 'top' && currentPositionX === 'start'\"\n          [class.asa-picker-dropdown-placement-bottomRight]=\"currentPositionY === 'bottom' && currentPositionX === 'end'\"\n          [class.asa-picker-dropdown-placement-topRight]=\"currentPositionY === 'top' && currentPositionX === 'end'\"\n          [class.asa-picker-dropdown-range]=\"isRange\"\n        >\n          <asa-date-picker-popup\n            [rtl]=\"rtl\"\n            [@slideMotion]=\"'enter'\"\n            [selectedDate]=\"selectedDate\"\n            [selectedStartDate]=\"selectedStartDate\"\n            [selectedEndDate]=\"selectedEndDate\"\n            [mode]=\"mode\"\n            [isRange]=\"isRange\"\n            [customLabels]=\"customLabels\"\n            [calendarType]=\"calendarType\"\n            [minDate]=\"minDate\"\n            [maxDate]=\"maxDate\"\n            [cssClass]=\"cssClass\"\n            [footerDescription]=\"footerDescription\"\n            [activeInput]=\"activeInput\"\n            [showSidebar]=\"showSidebar\"\n            [showToday]=\"showToday\"\n            [showTimePicker]=\"showTimePicker\"\n            [timeDisplayFormat]=\"timeDisplayFormat\"\n            [dateFormat]=\"extractDateFormat(format)\"\n            [disabledDates]=\"disabledDates\"\n            [disabledDatesFilter]=\"disabledDatesFilter\"\n            [disabledTimesFilter]=\"disabledTimesFilter\"\n            [templates]=\"templates\"\n            (dateSelected)=\"onDateSelected($event)\"\n            (dateRangeSelected)=\"onDateRangeSelected($event)\"\n            (closePicker)=\"close()\"\n            (clickInside)=\"focus()\"\n            tabindex=\"-1\"\n            [attr.disabled]=\"disabled? 'disabled':null\"\n          ></asa-date-picker-popup>\n        </div>\n      </ng-template>\n      <ng-template\n        cdkConnectedOverlay\n        nzConnectedOverlay\n        [cdkConnectedOverlayOrigin]=\"origin\"\n        [cdkConnectedOverlayOpen]=\"isOpen\"\n        [cdkConnectedOverlayPositions]=\"overlayPositions\"\n        [cdkConnectedOverlayTransformOriginOn]=\"'.asa-picker-wrapper'\"\n        [cdkConnectedOverlayHasBackdrop]=\"false\"\n        (positionChange)=\"onPositionChange($event)\"\n        (detach)=\"close()\"\n      >\n        <div\n          class=\"asa-picker-wrapper\"\n          [class.disabled]=\"disabled\"\n          [@slideMotion]=\"'enter'\"\n          style=\"position: relative;\"\n          (click)=\"$event.stopPropagation()\"\n        >\n          <ng-container *ngTemplateOutlet=\"inlineMode\"></ng-container>\n        </div>\n      </ng-template>\n    </div>\n  `, isInline: true, styles: [\":host.asa-datepicker ::ng-deep{display:block;max-width:fit-content}.date-picker-wrapper{position:relative;max-width:fit-content}input{font-family:inherit;max-width:300px;padding:6px 10px;border:1px solid #d9d9d9;border-radius:4px;font-size:14px;outline:none;transition:all .3s}input:hover{border-color:#40a9ff}input.focus{border-color:#40a9ff;box-shadow:0 0 0 2px #1890ff33;outline:none}.range-input-container{display:flex;align-items:center;border:1px solid #d9d9d9;border-radius:4px;overflow:hidden}.range-input-container input{border:none;flex:1;width:50%;padding:6px 10px;border-radius:0}.range-input-container input.focus{border-bottom:1px solid;border-color:#40a9ff;box-shadow:none!important}.range-separator{padding:0 8px;color:#999}.calendar-button{background:none;border:none;padding:4px 4px 0;cursor:pointer;font-size:16px}.range-input-labels{display:flex;justify-content:space-between;gap:10px;color:#444;padding:0 5px 5px}.end-label{width:49%}.disabled{opacity:.8;pointer-events:none}.disabled .range-input-container{background:#f3f3f3}.input-container .calendar-button{position:absolute;right:0;bottom:5px}.date-picker-rtl .input-container .calendar-button{right:auto;left:0}.input-container{display:flex;flex-direction:column;gap:3px;color:#444}.input-container.rtl{direction:rtl}// rtl :dir(rtl) .range-separator{rotate:180deg}\\n\"], dependencies: [{ kind: \"directive\", type: NgIf, selector: \"[ngIf]\", inputs: [\"ngIf\", \"ngIfThen\", \"ngIfElse\"] }, { kind: \"ngmodule\", type: FormsModule }, { kind: \"directive\", type: i1$1.DefaultValueAccessor, selector: \"input:not([type=checkbox])[formControlName],textarea[formControlName],input:not([type=checkbox])[formControl],textarea[formControl],input:not([type=checkbox])[ngModel],textarea[ngModel],[ngDefaultControl]\" }, { kind: \"directive\", type: i1$1.NgControlStatus, selector: \"[formControlName],[ngModel],[formControl]\" }, { kind: \"directive\", type: i1$1.NgControlStatusGroup, selector: \"[formGroupName],[formArrayName],[ngModelGroup],[formGroup],form:not([ngNoForm]),[ngForm]\" }, { kind: \"ngmodule\", type: ReactiveFormsModule }, { kind: \"directive\", type: i1$1.FormGroupDirective, selector: \"[formGroup]\", inputs: [\"formGroup\"], outputs: [\"ngSubmit\"], exportAs: [\"ngForm\"] }, { kind: \"directive\", type: i1$1.FormControlName, selector: \"[formControlName]\", inputs: [\"formControlName\", \"disabled\", \"ngModel\"], outputs: [\"ngModelChange\"] }, { kind: \"ngmodule\", type: OverlayModule }, { kind: \"directive\", type: i1.CdkConnectedOverlay, selector: \"[cdk-connected-overlay], [connected-overlay], [cdkConnectedOverlay]\", inputs: [\"cdkConnectedOverlayOrigin\", \"cdkConnectedOverlayPositions\", \"cdkConnectedOverlayPositionStrategy\", \"cdkConnectedOverlayOffsetX\", \"cdkConnectedOverlayOffsetY\", \"cdkConnectedOverlayWidth\", \"cdkConnectedOverlayHeight\", \"cdkConnectedOverlayMinWidth\", \"cdkConnectedOverlayMinHeight\", \"cdkConnectedOverlayBackdropClass\", \"cdkConnectedOverlayPanelClass\", \"cdkConnectedOverlayViewportMargin\", \"cdkConnectedOverlayScrollStrategy\", \"cdkConnectedOverlayOpen\", \"cdkConnectedOverlayDisableClose\", \"cdkConnectedOverlayTransformOriginOn\", \"cdkConnectedOverlayHasBackdrop\", \"cdkConnectedOverlayLockPosition\", \"cdkConnectedOverlayFlexibleDimensions\", \"cdkConnectedOverlayGrowAfterOpen\", \"cdkConnectedOverlayPush\"], outputs: [\"backdropClick\", \"positionChange\", \"attach\", \"detach\", \"overlayKeydown\", \"overlayOutsideClick\"], exportAs: [\"cdkConnectedOverlay\"] }, { kind: \"directive\", type: NgTemplateOutlet, selector: \"[ngTemplateOutlet]\", inputs: [\"ngTemplateOutletContext\", \"ngTemplateOutlet\", \"ngTemplateOutletInjector\"] }, { kind: \"directive\", type: NzConnectedOverlayDirective, selector: \"[cdkConnectedOverlay][nzConnectedOverlay]\", inputs: [\"nzArrowPointAtCenter\"], exportAs: [\"nzConnectedOverlay\"] }, { kind: \"directive\", type: DateMaskDirective, selector: \"[asa-dateMask]\", inputs: [\"asa-dateMask\", \"disableInputMask\"] }, { kind: \"component\", type: DatePickerPopupComponent, selector: \"asa-date-picker-popup\", inputs: [\"rtl\", \"selectedDate\", \"selectedStartDate\", \"selectedEndDate\", \"mode\", \"isRange\", \"customLabels\", \"calendarType\", \"minDate\", \"maxDate\", \"cssClass\", \"footerDescription\", \"activeInput\", \"showSidebar\", \"showToday\", \"showTimePicker\", \"timeDisplayFormat\", \"dateFormat\", \"disabledDates\", \"disabledDatesFilter\", \"disabledTimesFilter\", \"templates\"], outputs: [\"dateSelected\", \"dateRangeSelected\", \"closePicker\", \"clickInside\"] }], animations: [slideMotion], changeDetection: i0.ChangeDetectionStrategy.OnPush });\r\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"14.3.0\", ngImport: i0, type: AsaDatePickerComponent, decorators: [{\r\n            type: Component,\r\n            args: [{ selector: 'asa-date-picker', changeDetection: ChangeDetectionStrategy.OnPush, standalone: true, template: `\n    <div asaDatepickerStyles class=\"date-picker-wrapper\" [class.date-picker-rtl]=\"rtl\" [class.disabled]=\"disabled\" [formGroup]=\"form\">\n      <ng-container *ngIf=\"!isInline; else inlineMode\">\n        <ng-container *ngIf=\"!isRange; else rangeMode\">\n          <div class=\"input-container\" [class.rtl]>\n            <label for=\"dateInput\" *ngIf=\"inputLabel\">{{ inputLabel }}</label>\n            <input\n              #datePickerInput\n              type=\"text\"\n              formControlName=\"dateInput\"\n              [asa-dateMask]=\"format\"\n              [disableInputMask]=\"disableInputMask\"\n              (click)=\"toggleDatePicker(null,$event)\"\n              (focus)=\"onFocusInput(null,$event)\"\n              (blur)=\"onInputBlur(null,$event)\"\n              (keydown)=\"onInputKeydown($event)\"\n              [class.focus]=\"isOpen\"\n              [placeholder]=\"getPlaceholder()\"\n              [readonly]=\"readOnly || readOnlyInput\"\n              [attr.disabled]=\"disabled? 'disabled':null\"\n            >\n            <ng-container *ngTemplateOutlet=\"icon\"></ng-container>\n          </div>\n        </ng-container>\n        <ng-template #rangeMode>\n          <div *ngIf=\"rangeInputLabels\" class=\"range-input-labels\">\n            <div class=\"start-label\">\n              <label for=\"startDateInput\">{{ rangeInputLabels.start }}</label>\n            </div>\n            <div class=\"end-label\">\n              <label for=\"endDateInput\">{{ rangeInputLabels.end }}</label>\n            </div>\n          </div>\n          <div class=\"range-input-container\">\n            <input\n              #rangePickerInput\n              type=\"text\"\n              formControlName=\"startDateInput\"\n              [asa-dateMask]=\"format\"\n              [disableInputMask]=\"disableInputMask\"\n              (click)=\"toggleDatePicker('start',$event)\"\n              (focus)=\"onFocusInput('start',$event)\"\n              (focusout)=\"onFocusout($event)\"\n              (blur)=\"onInputBlur('start',$event)\"\n              (keydown)=\"onInputKeydown($event)\"\n              [class.focus]=\"isOpen && activeInput === 'start'\"\n              [placeholder]=\"getPlaceholder('start')\"\n              [readonly]=\"readOnly || readOnlyInput\"\n              [attr.disabled]=\"disabled? 'disabled':null\"\n            >\n            <span class=\"range-separator\">→</span>\n            <input\n              #rangePickerInput\n              type=\"text\"\n              formControlName=\"endDateInput\"\n              [asa-dateMask]=\"format\"\n              [disableInputMask]=\"disableInputMask\"\n              (click)=\"toggleDatePicker('end',$event)\"\n              (focus)=\"onFocusInput('end',$event)\"\n              (focusout)=\"onFocusout($event)\"\n              (blur)=\"onInputBlur('end',$event)\"\n              (keydown)=\"onInputKeydown($event)\"\n              [class.focus]=\"isOpen && activeInput === 'end'\"\n              [placeholder]=\"getPlaceholder('end')\"\n              [readonly]=\"readOnly || readOnlyInput\"\n              [attr.disabled]=\"disabled? 'disabled':null\"\n            >\n            <ng-container *ngTemplateOutlet=\"icon\"></ng-container>\n          </div>\n        </ng-template>\n        <ng-template #icon>\n            <button class=\"calendar-button\" (click)=\"toggleDatePicker(null, $event)\" tabindex=\"-1\">\n              <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"18px\" height=\"18px\" viewBox=\"0 0 24 24\" fill=\"#999\">\n                <path fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M6 2C6 1.44772 6.44772 1 7 1C7.55228 1 8 1.44772 8 2V3H16V2C16 1.44772 16.4477 1 17 1C17.5523 1 18 1.44772 18 2V3H19C20.6569 3 22 4.34315 22 6V20C22 21.6569 20.6569 23 19 23H5C3.34315 23 2 21.6569 2 20V6C2 4.34315 3.34315 3 5 3H6V2ZM16 5V6C16 6.55228 16.4477 7 17 7C17.5523 7 18 6.55228 18 6V5H19C19.5523 5 20 5.44772 20 6V9H4V6C4 5.44772 4.44772 5 5 5H6V6C6 6.55228 6.44772 7 7 7C7.55228 7 8 6.55228 8 6V5H16ZM4 11V20C4 20.5523 4.44772 21 5 21H19C19.5523 21 20 20.5523 20 20V11H4Z\" fill=\"#999\"/>\n              </svg>\n            </button>\n        </ng-template>\n      </ng-container>\n      <ng-template #inlineMode>\n        <div\n          class=\"dp-dropdown\"\n          [class.asa-picker-dropdown-rtl]=\"rtl\"\n          [class.asa-picker-dropdown-placement-bottomLeft]=\"currentPositionY === 'bottom' && currentPositionX === 'start'\"\n          [class.asa-picker-dropdown-placement-topLeft]=\"currentPositionY === 'top' && currentPositionX === 'start'\"\n          [class.asa-picker-dropdown-placement-bottomRight]=\"currentPositionY === 'bottom' && currentPositionX === 'end'\"\n          [class.asa-picker-dropdown-placement-topRight]=\"currentPositionY === 'top' && currentPositionX === 'end'\"\n          [class.asa-picker-dropdown-range]=\"isRange\"\n        >\n          <asa-date-picker-popup\n            [rtl]=\"rtl\"\n            [@slideMotion]=\"'enter'\"\n            [selectedDate]=\"selectedDate\"\n            [selectedStartDate]=\"selectedStartDate\"\n            [selectedEndDate]=\"selectedEndDate\"\n            [mode]=\"mode\"\n            [isRange]=\"isRange\"\n            [customLabels]=\"customLabels\"\n            [calendarType]=\"calendarType\"\n            [minDate]=\"minDate\"\n            [maxDate]=\"maxDate\"\n            [cssClass]=\"cssClass\"\n            [footerDescription]=\"footerDescription\"\n            [activeInput]=\"activeInput\"\n            [showSidebar]=\"showSidebar\"\n            [showToday]=\"showToday\"\n            [showTimePicker]=\"showTimePicker\"\n            [timeDisplayFormat]=\"timeDisplayFormat\"\n            [dateFormat]=\"extractDateFormat(format)\"\n            [disabledDates]=\"disabledDates\"\n            [disabledDatesFilter]=\"disabledDatesFilter\"\n            [disabledTimesFilter]=\"disabledTimesFilter\"\n            [templates]=\"templates\"\n            (dateSelected)=\"onDateSelected($event)\"\n            (dateRangeSelected)=\"onDateRangeSelected($event)\"\n            (closePicker)=\"close()\"\n            (clickInside)=\"focus()\"\n            tabindex=\"-1\"\n            [attr.disabled]=\"disabled? 'disabled':null\"\n          ></asa-date-picker-popup>\n        </div>\n      </ng-template>\n      <ng-template\n        cdkConnectedOverlay\n        nzConnectedOverlay\n        [cdkConnectedOverlayOrigin]=\"origin\"\n        [cdkConnectedOverlayOpen]=\"isOpen\"\n        [cdkConnectedOverlayPositions]=\"overlayPositions\"\n        [cdkConnectedOverlayTransformOriginOn]=\"'.asa-picker-wrapper'\"\n        [cdkConnectedOverlayHasBackdrop]=\"false\"\n        (positionChange)=\"onPositionChange($event)\"\n        (detach)=\"close()\"\n      >\n        <div\n          class=\"asa-picker-wrapper\"\n          [class.disabled]=\"disabled\"\n          [@slideMotion]=\"'enter'\"\n          style=\"position: relative;\"\n          (click)=\"$event.stopPropagation()\"\n        >\n          <ng-container *ngTemplateOutlet=\"inlineMode\"></ng-container>\n        </div>\n      </ng-template>\n    </div>\n  `, host: {\r\n                        \"[class.asa-datepicker]\": \"true\",\r\n                        \"[class.asa-datepicker-rtl]\": \"rtl\"\r\n                    }, imports: [\r\n                        NgIf,\r\n                        FormsModule,\r\n                        ReactiveFormsModule,\r\n                        OverlayModule,\r\n                        NgTemplateOutlet,\r\n                        NzConnectedOverlayDirective,\r\n                        DateMaskDirective,\r\n                        DatePickerPopupComponent\r\n                    ], providers: [\r\n                        DestroyService,\r\n                        AsaDatePickerService,\r\n                        {\r\n                            provide: NG_VALUE_ACCESSOR,\r\n                            useExisting: forwardRef(() => AsaDatePickerComponent),\r\n                            multi: true\r\n                        }\r\n                    ], animations: [slideMotion], styles: [\":host.asa-datepicker ::ng-deep{display:block;max-width:fit-content}.date-picker-wrapper{position:relative;max-width:fit-content}input{font-family:inherit;max-width:300px;padding:6px 10px;border:1px solid #d9d9d9;border-radius:4px;font-size:14px;outline:none;transition:all .3s}input:hover{border-color:#40a9ff}input.focus{border-color:#40a9ff;box-shadow:0 0 0 2px #1890ff33;outline:none}.range-input-container{display:flex;align-items:center;border:1px solid #d9d9d9;border-radius:4px;overflow:hidden}.range-input-container input{border:none;flex:1;width:50%;padding:6px 10px;border-radius:0}.range-input-container input.focus{border-bottom:1px solid;border-color:#40a9ff;box-shadow:none!important}.range-separator{padding:0 8px;color:#999}.calendar-button{background:none;border:none;padding:4px 4px 0;cursor:pointer;font-size:16px}.range-input-labels{display:flex;justify-content:space-between;gap:10px;color:#444;padding:0 5px 5px}.end-label{width:49%}.disabled{opacity:.8;pointer-events:none}.disabled .range-input-container{background:#f3f3f3}.input-container .calendar-button{position:absolute;right:0;bottom:5px}.date-picker-rtl .input-container .calendar-button{right:auto;left:0}.input-container{display:flex;flex-direction:column;gap:3px;color:#444}.input-container.rtl{direction:rtl}// rtl :dir(rtl) .range-separator{rotate:180deg}\\n\"] }]\r\n        }], ctorParameters: function () { return [{ type: i1$1.FormBuilder }, { type: i0.ElementRef }, { type: i0.Renderer2 }, { type: i0.ChangeDetectorRef }, { type: AsaDatePickerService }, { type: DestroyService }, { type: i0.NgZone }, { type: JalaliDateAdapter }, { type: GregorianDateAdapter }, { type: Document, decorators: [{\r\n                    type: Inject,\r\n                    args: [DOCUMENT]\r\n                }] }]; }, propDecorators: { rtl: [{\r\n                type: Input\r\n            }], mode: [{\r\n                type: Input\r\n            }], isRange: [{\r\n                type: Input\r\n            }], customLabels: [{\r\n                type: Input\r\n            }], calendarType: [{\r\n                type: Input\r\n            }], lang: [{\r\n                type: Input\r\n            }], cssClass: [{\r\n                type: Input\r\n            }], footerDescription: [{\r\n                type: Input\r\n            }], rangeInputLabels: [{\r\n                type: Input\r\n            }], inputLabel: [{\r\n                type: Input\r\n            }], placement: [{\r\n                type: Input\r\n            }], disabled: [{\r\n                type: Input\r\n            }], isInline: [{\r\n                type: Input\r\n            }], showSidebar: [{\r\n                type: Input\r\n            }], showToday: [{\r\n                type: Input\r\n            }], valueFormat: [{\r\n                type: Input\r\n            }], disableInputMask: [{\r\n                type: Input\r\n            }], disabledDates: [{\r\n                type: Input\r\n            }], disabledDatesFilter: [{\r\n                type: Input\r\n            }], disabledTimesFilter: [{\r\n                type: Input\r\n            }], allowEmpty: [{\r\n                type: Input\r\n            }], readOnly: [{\r\n                type: Input\r\n            }], readOnlyInput: [{\r\n                type: Input\r\n            }], minDate: [{\r\n                type: Input\r\n            }], maxDate: [{\r\n                type: Input\r\n            }], format: [{\r\n                type: Input\r\n            }], onFocus: [{\r\n                type: Output\r\n            }], onBlur: [{\r\n                type: Output\r\n            }], onChangeValue: [{\r\n                type: Output\r\n            }], onOpenChange: [{\r\n                type: Output\r\n            }], datePickerInput: [{\r\n                type: ViewChild,\r\n                args: ['datePickerInput']\r\n            }], rangePickerInputs: [{\r\n                type: ViewChildren,\r\n                args: ['rangePickerInput']\r\n            }], datePickerPopup: [{\r\n                type: ViewChild,\r\n                args: [DatePickerPopupComponent]\r\n            }], templates: [{\r\n                type: ContentChildren,\r\n                args: [CustomTemplate]\r\n            }] } });\n\nclass AsaDatePickerModule {\r\n}\r\nAsaDatePickerModule.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"14.3.0\", ngImport: i0, type: AsaDatePickerModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });\r\nAsaDatePickerModule.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: \"14.0.0\", version: \"14.3.0\", ngImport: i0, type: AsaDatePickerModule, imports: [AsaDatePickerComponent,\r\n        DatePickerPopupComponent,\r\n        DateMaskDirective,\r\n        NzConnectedOverlayDirective,\r\n        TimePickerComponent,\r\n        CustomTemplate], exports: [AsaDatePickerComponent,\r\n        TimePickerComponent,\r\n        DatePickerPopupComponent,\r\n        DateMaskDirective,\r\n        NzConnectedOverlayDirective,\r\n        CustomTemplate] });\r\nAsaDatePickerModule.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: \"12.0.0\", version: \"14.3.0\", ngImport: i0, type: AsaDatePickerModule, imports: [AsaDatePickerComponent,\r\n        DatePickerPopupComponent,\r\n        TimePickerComponent] });\r\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"14.3.0\", ngImport: i0, type: AsaDatePickerModule, decorators: [{\r\n            type: NgModule,\r\n            args: [{\r\n                    imports: [\r\n                        AsaDatePickerComponent,\r\n                        DatePickerPopupComponent,\r\n                        DateMaskDirective,\r\n                        NzConnectedOverlayDirective,\r\n                        TimePickerComponent,\r\n                        CustomTemplate\r\n                    ],\r\n                    exports: [\r\n                        AsaDatePickerComponent,\r\n                        TimePickerComponent,\r\n                        DatePickerPopupComponent,\r\n                        DateMaskDirective,\r\n                        NzConnectedOverlayDirective,\r\n                        CustomTemplate\r\n                    ]\r\n                }]\r\n        }] });\n\n/*\r\n * Public API Surface of asa-date-picker\r\n */\n\n/**\r\n * Generated bundle index. Do not edit.\r\n */\n\nexport { AsaDatePickerComponent, AsaDatePickerModule, AsaDatePickerService, CustomTemplate, DATE_PICKER_POSITION_MAP, DEFAULT_CASCADER_POSITIONS, DEFAULT_DATE_PICKER_POSITIONS, DEFAULT_MENTION_BOTTOM_POSITIONS, DEFAULT_MENTION_TOP_POSITIONS, DEFAULT_TOOLTIP_POSITIONS, DateMaskDirective, DatePickerPopupComponent, DestroyService, GregorianDateAdapter, InputBoolean, JalaliDateAdapter, NzConnectedOverlayDirective, POSITION_MAP, TimePickerComponent, getPlacementName, lang_En, lang_Fa, slideAlertMotion, slideMotion, toBoolean };\n//# sourceMappingURL=asa-date-picker.mjs.map\n","map":{"version":3,"file":"asa-date-picker.mjs","sources":["../../../projects/asa-date-picker/src/utils/animation/animation-consts.ts","../../../projects/asa-date-picker/src/utils/animation/slide.ts","../../../projects/asa-date-picker/src/utils/models.ts","../../../projects/asa-date-picker/src/asa-date-picker.service.ts","../../../projects/asa-date-picker/src/utils/overlay/overlay.ts","../../../projects/asa-date-picker/src/utils/input-mask.directive.ts","../../../projects/asa-date-picker/src/asa-date-adapter.ts","../../../projects/asa-date-picker/src/time-picker/time-picker.component.ts","../../../projects/asa-date-picker/src/date-picker-popup/date-picker-popup.component.ts","../../../projects/asa-date-picker/src/utils/template.directive.ts","../../../projects/asa-date-picker/src/asa-date-picker.component.ts","../../../projects/asa-date-picker/src/asa-date-picker.module.ts","../../../projects/asa-date-picker/src/public-api.ts","../../../projects/asa-date-picker/src/asa-date-picker.ts"],"sourcesContent":["/**\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/../blob/master/LICENSE\n */\n\nexport class AnimationDuration {\n  static SLOW = '0.3s'; // Modal\n  static BASE = '0.2s';\n  static FAST = '0.1s'; // Tooltip\n}\n\nexport class AnimationCurves {\n  static EASE_BASE_OUT = 'cubic-bezier(0.7, 0.3, 0.1, 1)';\n  static EASE_BASE_IN = 'cubic-bezier(0.9, 0, 0.3, 0.7)';\n  static EASE_OUT = 'cubic-bezier(0.215, 0.61, 0.355, 1)';\n  static EASE_IN = 'cubic-bezier(0.55, 0.055, 0.675, 0.19)';\n  static EASE_IN_OUT = 'cubic-bezier(0.645, 0.045, 0.355, 1)';\n  static EASE_OUT_BACK = 'cubic-bezier(0.12, 0.4, 0.29, 1.46)';\n  static EASE_IN_BACK = 'cubic-bezier(0.71, -0.46, 0.88, 0.6)';\n  static EASE_IN_OUT_BACK = 'cubic-bezier(0.71, -0.46, 0.29, 1.46)';\n  static EASE_OUT_CIRC = 'cubic-bezier(0.08, 0.82, 0.17, 1)';\n  static EASE_IN_CIRC = 'cubic-bezier(0.6, 0.04, 0.98, 0.34)';\n  static EASE_IN_OUT_CIRC = 'cubic-bezier(0.78, 0.14, 0.15, 0.86)';\n  static EASE_OUT_QUINT = 'cubic-bezier(0.23, 1, 0.32, 1)';\n  static EASE_IN_QUINT = 'cubic-bezier(0.755, 0.05, 0.855, 0.06)';\n  static EASE_IN_OUT_QUINT = 'cubic-bezier(0.86, 0, 0.07, 1)';\n}\n","/**\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/../blob/master/LICENSE\n */\n\nimport { animate, AnimationTriggerMetadata, state, style, transition, trigger } from '@angular/animations';\n\nimport { AnimationCurves, AnimationDuration } from './animation-consts';\n\nconst ANIMATION_TRANSITION_IN = `${AnimationDuration.BASE} ${AnimationCurves.EASE_OUT_QUINT}`;\nconst ANIMATION_TRANSITION_OUT = `${AnimationDuration.BASE} ${AnimationCurves.EASE_IN_QUINT}`;\n\nexport const slideMotion: AnimationTriggerMetadata = trigger('slideMotion', [\n  state(\n    'void',\n    style({\n      opacity: 0,\n      transform: 'scaleY(0.8)'\n    })\n  ),\n  state(\n    'enter',\n    style({\n      opacity: 1,\n      transform: 'scaleY(1)'\n    })\n  ),\n  transition('void => *', [animate(ANIMATION_TRANSITION_IN)]),\n  transition('* => void', [animate(ANIMATION_TRANSITION_OUT)])\n]);\n\nexport const slideAlertMotion: AnimationTriggerMetadata = trigger('slideAlertMotion', [\n  transition(':leave', [\n    style({ opacity: 1, transform: 'scaleY(1)', transformOrigin: '0% 0%' }),\n    animate(\n      `${AnimationDuration.SLOW} ${AnimationCurves.EASE_IN_OUT_CIRC}`,\n      style({\n        opacity: 0,\n        transform: 'scaleY(0)',\n        transformOrigin: '0% 0%'\n      })\n    )\n  ])\n]);\n","import { Injectable } from \"@angular/core\";\n\nexport interface CustomLabels {\n    label: string,\n    value: Array<Date> | 'custom',\n    arrow?: boolean\n}\n\nexport interface YearRange {\n    start: number,\n    end: number\n}\n\nexport interface DateRange {\n    start: Date | string,\n    end: Date | string\n}\n\nexport interface RangeInputLabels {\n    start: string,\n    end: string,\n}\n\nexport interface Lang_Locale {\n    today: string;\n    lastDay: string;\n    lastWeek: string;\n    lastMonth: string;\n    custom: string;\n    previousMonth: string;\n    nextMonth: string;\n    previousYear: string;\n    nextYear: string;\n    selectTime: string;\n    selectDate: string;\n    selectMonth: string;\n    selectYear: string;\n    selectDateRange: string;\n    startDate: string;\n    endDate: string;\n    pm: string;\n    am: string;\n    ok: string;\n    cancel: string;\n    now: string;\n}\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class lang_Fa implements Lang_Locale{\n    today:string = \"امروز\";\n    lastDay:string = \"آخرین روز\";\n    lastWeek:string = \"آخرین هفته\";\n    lastMonth:string = \"آخرین ماه\";\n    custom:string = \"دلخواه\";\n    previousMonth:string = \"ماه قبل\";\n    nextMonth:string = \"ماه بعد\";\n    previousYear:string = \"سال قبل\";\n    nextYear:string = \"سال بعد\";\n    selectTime:string = \"انتخاب زمان\";\n    selectDate:string = \"انتخاب تاریخ\";\n    selectMonth:string = \"انتخاب ماه\";\n    selectYear:string = \"انتخاب سال\";\n    selectDateRange:string = \"انتخاب محدوده تاریخ\";\n    startDate:string = \"از تاریخ\";\n    endDate:string = \"تا تاریخ\";\n    pm: string = \"ب.ظ\";\n    am: string = \"ق.ظ\";\n    ok: string = \"تایید\";\n    cancel: string = \"لغو\";\n    now: string = \"اکنون\";\n}\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class lang_En implements Lang_Locale{\n    today:string = \"Today\"\n    lastDay:string = \"Last Day\";\n    lastWeek:string = \"Last Week\";\n    lastMonth:string = \"Last Month\";\n    custom:string = \"Custom\";\n    previousMonth:string = \"Previous Month\";\n    nextMonth:string = \"Next Month\";\n    previousYear:string = \"Previous Year\";\n    nextYear:string = \"Next Year\";\n    selectTime:string = \"Select time\";\n    selectDate:string = \"Select date\";\n    selectMonth:string = \"Select month\";\n    selectYear:string = \"Select year\";\n    selectDateRange:string = \"Select date range\";\n    startDate:string = \"Start date\";\n    endDate:string = \"End date\";\n    pm: string = \"PM\";\n    am: string = \"AM\";\n    ok: string = \"Ok\";\n    cancel: string = \"Cancel\";\n    now: string = \"Now\";\n}","import { Injectable, OnDestroy } from \"@angular/core\";\nimport { BehaviorSubject, Subject } from \"rxjs\";\nimport { lang_En, lang_Fa, Lang_Locale } from \"./utils/models\";\n\nexport interface ValidTimeResult {\n  isValid: boolean;\n  normalizedTime: string;\n}\n\n@Injectable()\nexport class AsaDatePickerService {\n  activeInput$: BehaviorSubject<string> = new BehaviorSubject('');\n  locale: Lang_Locale;\n  /**\n   *\n   */\n  constructor(public locale_fa: lang_Fa, public locale_en: lang_En) {\n  }\n\n  getActiveInputValue() {\n    return this.activeInput$.getValue();\n  }\n}\n\n@Injectable()\nexport class DestroyService extends Subject<void> implements OnDestroy {\n  ngOnDestroy(): void {\n    this.next();\n    this.complete();\n  }\n}\n","/**\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/../blob/master/LICENSE\n */\n\nimport {\n    CdkConnectedOverlay,\n    CdkOverlayOrigin,\n    ConnectedOverlayPositionChange,\n    FlexibleConnectedPositionStrategyOrigin,\n    ConnectionPositionPair\n} from '@angular/cdk/overlay';\nimport { coerceBooleanProperty, _isNumberValue } from '@angular/cdk/coercion';\nimport { Directive, ElementRef, Input } from '@angular/core';\nimport { takeUntil } from 'rxjs/operators';\nimport { DestroyService } from '../../asa-date-picker.service';\n\nexport type SafeAny = any;\n\nfunction propDecoratorFactory<T, D>(\n    name: string,\n    fallback: (v: T) => D\n): (target: SafeAny, propName: string) => void {\n    function propDecorator(\n        target: SafeAny,\n        propName: string,\n        originalDescriptor?: TypedPropertyDescriptor<SafeAny>\n    ): SafeAny {\n        const privatePropName = `$$__zorroPropDecorator__${propName}`;\n\n        if (Object.prototype.hasOwnProperty.call(target, privatePropName)) {\n            console.warn(`The prop \"${privatePropName}\" is already exist, it will be overrided by ${name} decorator.`);\n        }\n\n        Object.defineProperty(target, privatePropName, {\n            configurable: true,\n            writable: true\n        });\n\n        return {\n            get(): string {\n                return originalDescriptor && originalDescriptor.get\n                    ? originalDescriptor.get.bind(this)()\n                    : this[privatePropName];\n            },\n            set(value: T): void {\n                if (originalDescriptor && originalDescriptor.set) {\n                    originalDescriptor.set.bind(this)(fallback(value));\n                }\n                this[privatePropName] = fallback(value);\n            }\n        };\n    }\n\n    return propDecorator;\n}\n\n/**\n * Input decorator that handle a prop to do get/set automatically with toBoolean\n *\n * Why not using @InputBoolean alone without @Input? AOT needs @Input to be visible\n *\n * @howToUse\n * ```\n * @Input() @InputBoolean() visible: boolean = false;\n *\n * // Act as below:\n * // @Input()\n * // get visible() { return this.__visible; }\n * // set visible(value) { this.__visible = value; }\n * // __visible = false;\n * ```\n */\nexport function InputBoolean(): any {\n    return propDecoratorFactory('InputBoolean', toBoolean);\n}\n\nexport function toBoolean(value: boolean | string): boolean {\n    return coerceBooleanProperty(value);\n}\n\n/** Equivalent of `ClientRect` without some of the properties we don't care about. */\ntype Dimensions = Omit<ClientRect, 'x' | 'y' | 'toJSON'>;\n\n@Directive({\n    selector: '[cdkConnectedOverlay][nzConnectedOverlay]',\n    exportAs: 'nzConnectedOverlay',\n    standalone: true,\n    providers: [DestroyService]\n})\nexport class NzConnectedOverlayDirective {\n    @Input() @InputBoolean() nzArrowPointAtCenter: boolean = false;\n\n    constructor(\n        private readonly cdkConnectedOverlay: CdkConnectedOverlay,\n        private readonly nzDestroyService: DestroyService\n    ) {\n        this.cdkConnectedOverlay.backdropClass = 'nz-overlay-transparent-backdrop';\n\n        this.cdkConnectedOverlay.positionChange\n            .pipe(takeUntil(this.nzDestroyService))\n            .subscribe((position: ConnectedOverlayPositionChange) => {\n                if (this.nzArrowPointAtCenter) {\n                    this.updateArrowPosition(position);\n                }\n            });\n    }\n\n    private updateArrowPosition(position: ConnectedOverlayPositionChange): void {\n        const originRect = this.getOriginRect();\n        const placement = getPlacementName(position);\n\n        let offsetX: number | undefined = 0;\n        let offsetY: number | undefined = 0;\n\n        if (placement === 'topLeft' || placement === 'bottomLeft') {\n            offsetX = originRect.width / 2 - 14;\n        } else if (placement === 'topRight' || placement === 'bottomRight') {\n            offsetX = -(originRect.width / 2 - 14);\n        } else if (placement === 'leftTop' || placement === 'rightTop') {\n            offsetY = originRect.height / 2 - 10;\n        } else if (placement === 'leftBottom' || placement === 'rightBottom') {\n            offsetY = -(originRect.height / 2 - 10);\n        }\n\n        if (this.cdkConnectedOverlay.offsetX !== offsetX || this.cdkConnectedOverlay.offsetY !== offsetY) {\n            this.cdkConnectedOverlay.offsetY = offsetY;\n            this.cdkConnectedOverlay.offsetX = offsetX;\n            this.cdkConnectedOverlay.overlayRef.updatePosition();\n        }\n    }\n\n    private getFlexibleConnectedPositionStrategyOrigin(): FlexibleConnectedPositionStrategyOrigin {\n        if (this.cdkConnectedOverlay.origin instanceof CdkOverlayOrigin) {\n            return this.cdkConnectedOverlay.origin.elementRef;\n        } else {\n            return this.cdkConnectedOverlay.origin;\n        }\n    }\n\n    private getOriginRect(): Dimensions {\n        const origin = this.getFlexibleConnectedPositionStrategyOrigin();\n\n        if (origin instanceof ElementRef) {\n            return origin.nativeElement.getBoundingClientRect();\n        }\n\n        // Check for Element so SVG elements are also supported.\n        if (origin instanceof Element) {\n            return origin.getBoundingClientRect();\n        }\n\n        const width = origin.width || 0;\n        const height = origin.height || 0;\n\n        // If the origin is a point, return a client rect as if it was a 0x0 element at the point.\n        return {\n            top: origin.y,\n            bottom: origin.y + height,\n            left: origin.x,\n            right: origin.x + width,\n            height,\n            width\n        };\n    }\n}\n\n//overlay-position.ts:\nexport const POSITION_MAP = {\n    top: new ConnectionPositionPair({ originX: 'center', originY: 'top' }, { overlayX: 'center', overlayY: 'bottom' }),\n    topCenter: new ConnectionPositionPair(\n      { originX: 'center', originY: 'top' },\n      { overlayX: 'center', overlayY: 'bottom' }\n    ),\n    topLeft: new ConnectionPositionPair({ originX: 'start', originY: 'top' }, { overlayX: 'start', overlayY: 'bottom' }),\n    topRight: new ConnectionPositionPair({ originX: 'end', originY: 'top' }, { overlayX: 'end', overlayY: 'bottom' }),\n    right: new ConnectionPositionPair({ originX: 'end', originY: 'center' }, { overlayX: 'start', overlayY: 'center' }),\n    rightTop: new ConnectionPositionPair({ originX: 'end', originY: 'top' }, { overlayX: 'start', overlayY: 'top' }),\n    rightBottom: new ConnectionPositionPair(\n      { originX: 'end', originY: 'bottom' },\n      { overlayX: 'start', overlayY: 'bottom' }\n    ),\n    bottom: new ConnectionPositionPair({ originX: 'center', originY: 'bottom' }, { overlayX: 'center', overlayY: 'top' }),\n    bottomCenter: new ConnectionPositionPair(\n      { originX: 'center', originY: 'bottom' },\n      { overlayX: 'center', overlayY: 'top' }\n    ),\n    bottomLeft: new ConnectionPositionPair(\n      { originX: 'start', originY: 'bottom' },\n      { overlayX: 'start', overlayY: 'top' }\n    ),\n    bottomRight: new ConnectionPositionPair({ originX: 'end', originY: 'bottom' }, { overlayX: 'end', overlayY: 'top' }),\n    left: new ConnectionPositionPair({ originX: 'start', originY: 'center' }, { overlayX: 'end', overlayY: 'center' }),\n    leftTop: new ConnectionPositionPair({ originX: 'start', originY: 'top' }, { overlayX: 'end', overlayY: 'top' }),\n    leftBottom: new ConnectionPositionPair(\n      { originX: 'start', originY: 'bottom' },\n      { overlayX: 'end', overlayY: 'bottom' }\n    )\n  };\nexport type POSITION_TYPE = keyof typeof POSITION_MAP;\nexport type POSITION_TYPE_HORIZONTAL = Extract<\n  POSITION_TYPE,\n  'bottomLeft' | 'bottomCenter' | 'bottomRight' | 'topLeft' | 'topCenter' | 'topRight'\n>;\n\nexport const DEFAULT_TOOLTIP_POSITIONS = [POSITION_MAP.top, POSITION_MAP.right, POSITION_MAP.bottom, POSITION_MAP.left];\n\nexport const DEFAULT_CASCADER_POSITIONS = [\n  POSITION_MAP.bottomLeft,\n  POSITION_MAP.bottomRight,\n  POSITION_MAP.topLeft,\n  POSITION_MAP.topRight,\n  POSITION_MAP.topCenter,\n  POSITION_MAP.bottomCenter\n];\n\nexport const DEFAULT_MENTION_TOP_POSITIONS = [\n  new ConnectionPositionPair({ originX: 'start', originY: 'bottom' }, { overlayX: 'start', overlayY: 'bottom' }),\n  new ConnectionPositionPair({ originX: 'start', originY: 'bottom' }, { overlayX: 'end', overlayY: 'bottom' })\n];\n\nexport const DEFAULT_MENTION_BOTTOM_POSITIONS = [\n  POSITION_MAP.bottomLeft,\n  new ConnectionPositionPair({ originX: 'start', originY: 'bottom' }, { overlayX: 'end', overlayY: 'top' })\n];\n\nexport function getPlacementName(position: ConnectedOverlayPositionChange): string | undefined {\n  for (const placement in POSITION_MAP) {\n    if (\n      position.connectionPair.originX === POSITION_MAP[placement as POSITION_TYPE].originX &&\n      position.connectionPair.originY === POSITION_MAP[placement as POSITION_TYPE].originY &&\n      position.connectionPair.overlayX === POSITION_MAP[placement as POSITION_TYPE].overlayX &&\n      position.connectionPair.overlayY === POSITION_MAP[placement as POSITION_TYPE].overlayY\n    ) {\n      return placement;\n    }\n  }\n  return undefined;\n}\n\nexport const DATE_PICKER_POSITION_MAP = {\n  bottomLeft: new ConnectionPositionPair(\n    { originX: 'start', originY: 'bottom' },\n    { overlayX: 'start', overlayY: 'top' },\n    undefined,\n    2\n  ),\n  topLeft: new ConnectionPositionPair(\n    { originX: 'start', originY: 'top' },\n    { overlayX: 'start', overlayY: 'bottom' },\n    undefined,\n    -2\n  ),\n  bottomRight: new ConnectionPositionPair(\n    { originX: 'end', originY: 'bottom' },\n    { overlayX: 'end', overlayY: 'top' },\n    undefined,\n    2\n  ),\n  topRight: new ConnectionPositionPair(\n    { originX: 'end', originY: 'top' },\n    { overlayX: 'end', overlayY: 'bottom' },\n    undefined,\n    -2\n  )\n};\n\nexport const DEFAULT_DATE_PICKER_POSITIONS = [\n  DATE_PICKER_POSITION_MAP.bottomLeft,\n  DATE_PICKER_POSITION_MAP.topLeft,\n  DATE_PICKER_POSITION_MAP.bottomRight,\n  DATE_PICKER_POSITION_MAP.topRight\n];\n","import { Directive, ElementRef, HostListener, Input } from '@angular/core';\n\n@Directive({\n  selector: '[asa-dateMask]',\n  standalone: true\n})\nexport class DateMaskDirective {\n  @Input('asa-dateMask') dateFormat: string = 'yyyy/MM/dd';\n  @Input() disableInputMask = false;\n\n  delimiters: string[] = [];\n  parts: string[] = [];\n  lastValue: string = '';\n\n  constructor(public el: ElementRef) {}\n\n  ngOnInit() {\n    this.parseFormat();\n  }\n\n  parseFormat() {\n    if (this.disableInputMask)\n      return;\n\n    this.parts = [];\n    this.delimiters = [];\n    let currentPart = '';\n\n    for (let i = 0; i < this.dateFormat.length; i++) {\n      const char = this.dateFormat[i];\n\n      if (this.isFormatChar(char)) {\n        currentPart += char;\n      } else {\n        if (currentPart) {\n          this.parts.push(currentPart);\n          currentPart = '';\n        }\n        this.delimiters.push(char);\n      }\n    }\n\n    if (currentPart) {\n      this.parts.push(currentPart);\n    }\n  }\n\n  isFormatChar(char: string): boolean {\n    return /[yMdHhmsa]/i.test(char);\n  }\n\n  @HostListener('input', ['$event'])\n  onInput(event: InputEvent) {\n    if (this.disableInputMask)\n      return;\n\n    const input = event.target as HTMLInputElement;\n    const cursorPosition = input.selectionStart || 0;\n    let value = input.value.replace(/[^0-9APMapm\\s:/\\-\\.]/g, '');\n\n    // Allow backspace/delete\n    if (value.length < this.lastValue.length) {\n      this.lastValue = value;\n      return;\n    }\n\n    let formattedParts: string[] = [];\n    let currentValue = value;\n    let shouldAddDelimiter = false;\n    let totalLength = 0;\n    let newCursorPosition = cursorPosition;\n\n    for (let i = 0; i < this.parts.length; i++) {\n      const part = this.extractPart(currentValue, this.parts[i]);\n      if (!part && part !== '0') break;\n\n      const expectedLength = this.getPartLength(this.parts[i]);\n      let formattedPart = part;\n\n      if (formattedPart.length >= expectedLength) {\n        formattedPart = this.validatePart(formattedPart.slice(0, expectedLength), this.parts[i]);\n        shouldAddDelimiter = true;\n      }\n\n      formattedParts.push(formattedPart);\n      totalLength += formattedPart.length;\n\n      if (shouldAddDelimiter && i < this.parts.length - 1) {\n        formattedParts.push(this.delimiters[i] || '');\n        totalLength += 1;\n        shouldAddDelimiter = false;\n\n        if (cursorPosition === totalLength - 1) {\n          newCursorPosition = totalLength;\n        }\n      }\n\n      currentValue = this.removeProcessedPart(currentValue, part);\n    }\n\n    const formattedValue = formattedParts.join('');\n    input.value = formattedValue;\n\n    // Set cursor position\n    newCursorPosition = Math.min(newCursorPosition, totalLength);\n    input.setSelectionRange(newCursorPosition, newCursorPosition);\n\n    this.lastValue = formattedValue;\n  }\n\n  extractPart(value: string, format: string): string {\n    if (!value) return '';\n\n    if (format[0].toLowerCase() === 'a') {\n      // Handle AM/PM\n      const match = value.match(/^[AaPp][Mm]?/);\n      return match ? match[0].toUpperCase() : '';\n    }\n\n    // Handle numeric parts\n    const match = value.match(/^\\d+/);\n    return match ? match[0] : '';\n  }\n\n  removeProcessedPart(value: string, part: string): string {\n    if (!part) return value;\n\n    // Remove part and following delimiter if exists\n    const remainingValue = value.slice(part.length);\n    return remainingValue.replace(/^[:/\\s-]/, '');\n  }\n\n  @HostListener('keydown', ['$event'])\n  onKeyDown(event: KeyboardEvent) {\n    if (this.disableInputMask)\n      return;\n\n    const input = event.target as HTMLInputElement;\n    const cursorPosition = input.selectionStart || 0;\n\n    // Allow control keys\n    if (event.key === 'Backspace' || event.key === 'Delete' ||\n        event.key === 'ArrowLeft' || event.key === 'ArrowRight' ||\n        event.key === 'Tab' || event.ctrlKey) {\n      return;\n    }\n\n    const currentPartIndex = this.getCurrentPartIndex(input.value, cursorPosition);\n    if (currentPartIndex === -1) return;\n\n    const currentFormat = this.parts[currentPartIndex];\n    const isTimeDelimiter = event.key === ':' && cursorPosition > 0 &&\n                           (this.parts[currentPartIndex - 1]?.includes('H') ||\n                            this.parts[currentPartIndex - 1]?.includes('h'));\n\n    // Allow time delimiter after hours\n    if (isTimeDelimiter) {\n      if (this.delimiters[currentPartIndex - 1] === ':') {\n        const parts = input.value.split(/[:/\\s-]/);\n        const currentPart = this.validatePart(parts[currentPartIndex - 1], this.parts[currentPartIndex - 1]);\n        parts[currentPartIndex - 1] = currentPart;\n\n        const newValue = parts.slice(0, currentPartIndex).join(this.delimiters[currentPartIndex - 1]) + ':';\n        input.value = newValue + parts.slice(currentPartIndex).join(this.delimiters[currentPartIndex]);\n\n        input.setSelectionRange(newValue.length, newValue.length);\n        event.preventDefault();\n      }\n      return;\n    }\n\n    // Handle AM/PM input\n    if (currentFormat[0].toLowerCase() === 'a') {\n      if (!/^[AaPpMm]$/.test(event.key)) {\n        event.preventDefault();\n      }\n      return;\n    }\n\n    // Allow only digits for other parts\n    if (!/^\\d$/.test(event.key)) {\n      event.preventDefault();\n    }\n  }\n\n  validatePart(value: string, format: string): string {\n    if (value === '') return '';\n\n    const type = format[0].toLowerCase();\n    if (type === 'a') {\n      const upperValue = value.toUpperCase();\n      if (value.length === 1) {\n        return upperValue === 'A' || upperValue === 'P' ? upperValue : '';\n      }\n      return ['AM', 'PM'].includes(upperValue) ? upperValue : upperValue[0];\n    }\n\n    const numValue = parseInt(value, 10);\n    switch (type) {\n      case 'h': // 12-hour format\n        if (format[0] == 'H')\n          return Math.min(Math.max(numValue, 0), 23).toString().padStart(2, '0');\n\n        return Math.min(Math.max(numValue, 1), 12).toString().padStart(2, '0');\n\n      case 'm': // month or minute\n        if (format === 'MM') {\n          return Math.min(Math.max(numValue, 1), 12).toString().padStart(2, '0');\n        }\n        return Math.min(Math.max(numValue, 0), 59).toString().padStart(2, '0');\n\n      case 's': // seconds\n        return Math.min(Math.max(numValue, 0), 59).toString().padStart(2, '0');\n\n      case 'd': // day\n        return Math.min(Math.max(numValue, 1), 31).toString().padStart(2, '0');\n\n      case 'y': // year\n        if (format.length === 2) return value.padStart(2, '0');\n        return value.padStart(4, '0');\n\n      default:\n        return value;\n    }\n  }\n\n  getPartLength(format: string): number {\n    const type = format[0].toLowerCase();\n    switch (type) {\n      case 'y': return format.length === 2 ? 2 : 4;\n      case 'a': return format.length === 1 ? 1 : 2;\n      default: return 2;\n    }\n  }\n\n  getCurrentPartIndex(value: string, cursorPosition: number): number {\n    const parts = value.split(/[:/\\s-]/);\n    let currentIndex = 0;\n    let totalLength = 0;\n\n    for (let i = 0; i < parts.length; i++) {\n      totalLength += parts[i].length;\n      if (cursorPosition <= totalLength + i) {\n        return i;\n      }\n      totalLength += 1; // Add delimiter length\n    }\n\n    return parts.length - 1;\n  }\n}\n","import {\n  format as formatJalali,\n  parse as parseJalali,\n  addDays as addDaysJalali,\n  addMonths as addMonthsJalali,\n  addYears as addYearsJalali,\n  addHours as addHoursJalali,\n  startOfWeek as startOfWeekJalali,\n  startOfMonth as startOfMonthJalali,\n  endOfMonth as endOfMonthJalali,\n  isSameDay as isSameDayJalali,\n  isSameMonth as isSameMonthJalali,\n  isSameYear as isSameYearJalali,\n  isAfter as isAfterJalali,\n  isBefore as isBeforeJalali,\n  isValid as isValidJalali,\n  max as maxJalali,\n  setYear as setYearJalali,\n  getDaysInMonth as getDaysInMonthJalali\n} from 'date-fns-jalali';\n\nimport {\n  format as formatGregorian,\n  parse as parseGregorian,\n  addDays as addDaysGregorian,\n  addMonths as addMonthsGregorian,\n  addYears as addYearsGregorian,\n  addHours as addHoursGregorian,\n  startOfWeek as startOfWeekGregorian,\n  startOfMonth as startOfMonthGregorian,\n  endOfMonth as endOfMonthGregorian,\n  isSameDay as isSameDayGregorian,\n  isSameMonth as isSameMonthGregorian,\n  isSameYear as isSameYearGregorian,\n  isAfter as isAfterGregorian,\n  isBefore as isBeforeGregorian,\n  isValid as isValidGregorian,\n  max as maxGregorian,\n  setYear as setYearGregorian,\n  getDaysInMonth as getDaysInMonthGregorian,\n  parseISO,\n  startOfDay,\n  isEqual,\n  addMinutes\n} from 'date-fns';\nimport { Injectable } from '@angular/core';\n\nexport interface AsaDateAdapter<D> {\n  today(): D;\n  parse(value: any, formatString: string): D | null;\n  format(date: D, formatString: string): string;\n  addDays(date: D, amount: number): D;\n  addMonths(date: D, amount: number): D;\n  addYears(date: D, amount: number): D;\n  addHours(date: D, amount: number): D;\n  getYear(date: D): number|null;\n  getMonth(date: D): number|null;\n  getDate(date: D): number|null;\n  getDayOfWeek(date: D): number;\n  getMonthNames(style: 'long' | 'short' | 'narrow'): string[];\n  getDateNames(): string[];\n  getDayOfWeekNames(style: 'long' | 'short' | 'narrow'): string[];\n  getFirstDayOfWeek(): number;\n  getNumDaysInMonth(date: D): number;\n  clone(date: D): D;\n  createDate(year: number, month: number, date: number): D;\n  isSameDay(date1: D, date2: D): boolean;\n  isSameMonth(date1: D, date2: D): boolean;\n  isSameYear(date1: D, date2: D): boolean;\n  isAfter(date1: D, date2: D): boolean;\n  isBefore(date1: D, date2: D): boolean;\n  isEqual(date1: D, date2: D): boolean;\n  startOfMonth(date: D): D;\n  endOfMonth(date: D): D;\n  startOfWeek(date: D): D;\n  isValidFormat(dateString: string, formatString: string): boolean;\n  max(dates: D[]): D;\n  setYear(date: D, year: number): D;\n  startOfDay (date: D): D;\n  getHours(date: D): number|null;\n  getMinutes(date: D): number|null;\n  getSeconds(date: D): number|null;\n  setHours(date: D, hours: number): D;\n  setMinutes(date: D, minutes: number): D;\n  setSeconds(date: D, seconds: number): D;\n  getDaysInMonth(date: D): number;\n  addMinutes(date: D, amount: number): D;\n}\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class JalaliDateAdapter implements AsaDateAdapter<Date> {\n  today(): Date {\n    return new Date();\n  }\n\n  parse(value: any, formatString: string): Date | null {\n    if (typeof value === 'string') {\n      // Check if it's in ISO 8601 format\n      if (value.includes('T')) {\n        const parsedDate = parseISO(value);\n        return isValidJalali(parsedDate) ? parsedDate : null;\n      }\n\n      try {\n        const parsedDate = parseJalali(value, formatString, new Date());\n        return isValidJalali(parsedDate) ? parsedDate : null;\n      } catch (error) {\n        console.error('Error parsing date:', error);\n        return null;\n      }\n    } else if (value instanceof Date) {\n      return isValidJalali(value) ? value : null;\n    }\n    return null;\n  }\n\n  format(date: Date, formatString: string): string {\n    return formatJalali(date, formatString);\n  }\n\n  addDays(date: Date, amount: number): Date {\n    return addDaysJalali(date, amount);\n  }\n\n  addMonths(date: Date, amount: number): Date {\n    return addMonthsJalali(date, amount);\n  }\n\n  addYears(date: Date, amount: number): Date {\n    return addYearsJalali(date, amount);\n  }\n\n  addHours(date: Date, amount: number): Date {\n    return addHoursJalali(date, amount);\n  }\n\n  getYear(date: Date): number|null {\n    return date? parseInt(formatJalali(date, 'yyyy')): null;\n  }\n\n  getMonth(date: Date): number|null {\n    // Jalali months are 1-indexed in date-fns-jalali\n    return date? parseInt(formatJalali(date, 'M')) - 1: null;\n  }\n\n  getDate(date: Date): number|null {\n    return date? parseInt(formatJalali(date, 'dd')): null;\n  }\n\n  getDayOfWeek(date: Date): number {\n    return parseInt(formatJalali(date, 'i')) - 1;\n  }\n\n  getMonthNames(style: 'long' | 'short' | 'narrow'): string[] {\n    const jalaliMonths = [\n      'فروردین', 'اردیبهشت', 'خرداد', 'تیر', 'مرداد', 'شهریور',\n      'مهر', 'آبان', 'آذر', 'دی', 'بهمن', 'اسفند'\n    ];\n\n    switch (style) {\n      case 'long':\n        return jalaliMonths;\n      case 'short':\n        return jalaliMonths.map(month => month.substring(0, 3));\n      case 'narrow':\n        return jalaliMonths.map(month => month.substring(0, 1));\n      default:\n        return jalaliMonths;\n    }\n  }\n\n  getDateNames(): string[] {\n    return Array.from({ length: 31 }, (_, i) => (i + 1).toString());\n  }\n\n  getDayOfWeekNames(style: 'long' | 'short' | 'narrow'): string[] {\n    const formats = {\n      long: 'EEEE',\n      short: 'EEEEE',\n      narrow: 'EEEEEE'\n    };\n    return Array.from({ length: 7 }, (_, i) =>\n      formatJalali(addDaysJalali(startOfWeekJalali(new Date()), i), formats[style])\n    );\n  }\n\n  getFirstDayOfWeek(): number {\n    return 6; // Saturday is the first day of the week in the Jalali calendar\n  }\n\n  getNumDaysInMonth(date: Date): number {\n    return parseInt(formatJalali(endOfMonthJalali(date), 'd'));\n  }\n\n  clone(date: Date): Date {\n    return new Date(date.getTime());\n  }\n\n  createDate(year: number, month: number, date: number): Date {\n    // Adjust for 0-indexed months in the interface vs 1-indexed months in date-fns-jalali\n    return parseJalali(`${year}/${month + 1}/${date}`, 'yyyy/M/d', new Date());\n  }\n\n  isSameDay(date1: Date, date2: Date): boolean {\n    return isSameDayJalali(date1, date2);\n  }\n\n  isSameMonth(date1: Date, date2: Date): boolean {\n    return isSameMonthJalali(date1, date2);\n  }\n\n  isSameYear(date1: Date, date2: Date): boolean {\n    return isSameYearJalali(date1, date2);\n  }\n\n  isAfter(date1: Date, date2: Date): boolean {\n    return isAfterJalali(date1, date2);\n  }\n\n  isBefore(date1: Date, date2: Date): boolean {\n    return isBeforeJalali(date1, date2);\n  }\n\n  isEqual(date1: Date, date2: Date): boolean {\n    return isEqual(date1, date2);\n  }\n\n  startOfMonth(date: Date): Date {\n    return startOfMonthJalali(date);\n  }\n\n  endOfMonth(date: Date): Date {\n    return endOfMonthJalali(date);\n  }\n\n  startOfWeek(date: Date): Date {\n    return startOfWeekJalali(date, { weekStartsOn: this.getFirstDayOfWeek() as 0 | 1 | 2 | 3 | 4 | 5 | 6 });\n  }\n\n  isValidFormat(dateString: string, formatString: string): boolean {\n    try {\n      const parsedDate = parseJalali(dateString, formatString, new Date());\n      if (!isValidJalali(parsedDate)) {\n        return false;\n      }\n      // Check if the formatted parsed date matches the original date string\n      const formattedDate = formatJalali(parsedDate, formatString);\n      return formattedDate === dateString;\n    } catch (error) {\n      return false;\n    }\n  }\n\n  max(dates: Date[]): Date {\n    return maxJalali(dates);\n  }\n\n  setYear(date: Date, year: number): Date {\n    return setYearJalali(date, year)\n  }\n\n  startOfDay(date: Date): Date {\n    return startOfDay(date);\n  }\n\n  getHours(date: Date): number|null {\n    return date? parseInt(formatJalali(date, 'HH')): null;\n  }\n\n  getMinutes(date: Date): number|null {\n    return date? parseInt(formatJalali(date, 'mm')): null;\n  }\n\n  getSeconds(date: Date): number|null {\n    return date? parseInt(formatJalali(date, 'ss')): null;\n  }\n\n  setHours(date: Date, hours: number): Date {\n    const newDate = this.clone(date);\n    newDate.setHours(hours);\n    return newDate;\n  }\n\n  setMinutes(date: Date, minutes: number): Date {\n    const newDate = this.clone(date);\n    newDate.setMinutes(minutes);\n    return newDate;\n  }\n\n  setSeconds(date: Date, seconds: number): Date {\n    const newDate = this.clone(date);\n    newDate.setSeconds(seconds);\n    return newDate;\n  }\n\n  getDaysInMonth(date: Date) {\n    return getDaysInMonthJalali(date);\n  }\n\n  addMinutes(date: Date, amount: number) {\n    return addMinutes(date, amount);\n  }\n}\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class GregorianDateAdapter implements AsaDateAdapter<Date> {\n  today(): Date {\n    return new Date();\n  }\n\n  parse(value: any, formatString: string): Date | null {\n    if (typeof value === 'string') {\n       // Check if it's in ISO 8601 format\n       if (value.includes('T')) {\n        const parsedDate = parseISO(value);\n        return isValidGregorian(parsedDate) ? parsedDate : null;\n      }\n\n      try {\n        let parsedDate: Date;\n        if (formatString === \"ISO\") {\n          parsedDate = parseISO(value);\n        } else {\n          parsedDate = parseGregorian(value, formatString, new Date());\n        }\n        return isValidGregorian(parsedDate) ? parsedDate : null;\n      } catch (error) {\n        console.error('Error parsing date:', error);\n        return null;\n      }\n    } else if (value instanceof Date) {\n      return isValidGregorian(value) ? value : null;\n    }\n    return null;\n  }\n\n  format(date: Date, formatString: string): string {\n    return formatGregorian(date, formatString);\n  }\n\n  addDays(date: Date, amount: number): Date {\n    return addDaysGregorian(date, amount);\n  }\n\n  addMonths(date: Date, amount: number): Date {\n    return addMonthsGregorian(date, amount);\n  }\n\n  addYears(date: Date, amount: number): Date {\n    return addYearsGregorian(date, amount);\n  }\n\n  addHours(date: Date, amount: number): Date {\n    return addHoursGregorian(date, amount);\n  }\n\n  getYear(date: Date): number {\n    return date.getFullYear();\n  }\n\n  getMonth(date: Date): number {\n    return date.getMonth();\n  }\n\n  getDate(date: Date): number {\n    return date.getDate();\n  }\n\n  getDayOfWeek(date: Date): number {\n    return date.getDay();\n  }\n\n  getMonthNames(style: 'long' | 'short' | 'narrow'): string[] {\n    const formats = {\n      long: 'MMMM',\n      short: 'MMM',\n      narrow: 'MMMMM'\n    };\n    return Array.from({ length: 12 }, (_, i) =>\n      formatGregorian(new Date(2000, i, 1), formats[style])\n    );\n  }\n\n  getDateNames(): string[] {\n    return Array.from({ length: 31 }, (_, i) => (i + 1).toString());\n  }\n\n  getDayOfWeekNames(style: 'long' | 'short' | 'narrow'): string[] {\n    const formats = {\n      long: 'EEEE',\n      short: 'EEE',\n      narrow: 'EEEEE'\n    };\n    return Array.from({ length: 7 }, (_, i) =>\n      formatGregorian(addDaysGregorian(startOfWeekGregorian(new Date()), i), formats[style])\n    );\n  }\n\n  getFirstDayOfWeek(): number {\n    return 0; // Sunday is the first day of the week in the Gregorian calendar\n  }\n\n  getNumDaysInMonth(date: Date): number {\n    return new Date(date.getFullYear(), date.getMonth() + 1, 0).getDate();\n  }\n\n  clone(date: Date): Date {\n    return new Date(date.getTime());\n  }\n\n  createDate(year: number, month: number, date: number): Date {\n    return new Date(year, month, date);\n  }\n\n  isSameDay(date1: Date, date2: Date): boolean {\n    return isSameDayGregorian(date1, date2);\n  }\n\n  isSameMonth(date1: Date, date2: Date): boolean {\n    return isSameMonthGregorian(date1, date2);\n  }\n\n  isSameYear(date1: Date, date2: Date): boolean {\n    return isSameYearGregorian(date1, date2);\n  }\n\n  isAfter(date1: Date, date2: Date): boolean {\n    return isAfterGregorian(date1, date2);\n  }\n\n  isBefore(date1: Date, date2: Date): boolean {\n    return isBeforeGregorian(date1, date2);\n  }\n\n  isEqual(date1: Date, date2: Date): boolean {\n    return isEqual(date1, date2);\n  }\n\n  startOfMonth(date: Date): Date {\n    return startOfMonthGregorian(date);\n  }\n\n  endOfMonth(date: Date): Date {\n    return endOfMonthGregorian(date);\n  }\n\n  startOfWeek(date: Date): Date {\n    return startOfWeekGregorian(date, { weekStartsOn: this.getFirstDayOfWeek() as 0 | 1 | 2 | 3 | 4 | 5 | 6 });\n  }\n\n  isValidFormat(dateString: string, formatString: string): boolean {\n    try {\n      const parsedDate = parseGregorian(dateString, formatString, new Date());\n      if (!isValidGregorian(parsedDate)) {\n        return false;\n      }\n      // Check if the formatted parsed date matches the original date string\n      const formattedDate = formatGregorian(parsedDate, formatString);\n      return formattedDate === dateString;\n    } catch (error) {\n      return false;\n    }\n  }\n\n  max(dates: Date[]): Date {\n    return maxGregorian(dates);\n  }\n\n  setYear(date: Date, year: number): Date {\n    return setYearGregorian(date, year);\n  }\n\n  startOfDay(date: Date): Date {\n    return startOfDay(date);\n  }\n\n  getHours(date: Date): number|null {\n    return date? date.getHours(): null;\n  }\n\n  getMinutes(date: Date): number|null {\n    return date? date.getMinutes(): null;\n  }\n\n  getSeconds(date: Date): number|null {\n    return date? date.getSeconds(): null;\n  }\n\n  setHours(date: Date, hours: number): Date {\n    const newDate = this.clone(date);\n    newDate.setHours(hours);\n    return newDate;\n  }\n\n  setMinutes(date: Date, minutes: number): Date {\n    const newDate = this.clone(date);\n    newDate.setMinutes(minutes);\n    return newDate;\n  }\n\n  setSeconds(date: Date, seconds: number): Date {\n    const newDate = this.clone(date);\n    newDate.setSeconds(seconds);\n    return newDate;\n  }\n\n  getDaysInMonth(date: Date) {\n    return getDaysInMonthGregorian(date);\n  }\n\n  addMinutes(date: Date, amount: number) {\n    return addMinutes(date, amount);\n  }\n}\n","/**\n * Time Picker Component\n * A customizable time picker that supports 12/24 hour formats, seconds, and multiple locales.\n *\n * Features:\n * - 12/24 hour format\n * - Optional seconds\n * - Localization support\n * - String or Date value types\n * - Min/Max time validation\n * - Custom styling\n */\nimport { Component, ElementRef, forwardRef, Input, OnInit, Output, EventEmitter, ViewChild, OnDestroy, HostListener, ChangeDetectorRef, OnChanges, SimpleChanges, ChangeDetectionStrategy } from '@angular/core';\nimport { ControlValueAccessor, NG_VALUE_ACCESSOR, FormBuilder, FormGroup, ReactiveFormsModule } from '@angular/forms';\nimport { CdkOverlayOrigin, ConnectedOverlayPositionChange, OverlayModule } from '@angular/cdk/overlay';\nimport { slideMotion } from '../utils/animation/slide';\nimport { Lang_Locale } from '../utils/models';\nimport { AsaDatePickerService } from '../asa-date-picker.service';\nimport { AsaDateAdapter, GregorianDateAdapter, JalaliDateAdapter } from '../asa-date-adapter';\nimport { TimeConfig, TimeFormat, TimeValueType } from '../utils/types';\nimport { DEFAULT_DATE_PICKER_POSITIONS, NzConnectedOverlayDirective } from \"../utils/overlay/overlay\"\nimport { NgFor, NgIf, NgTemplateOutlet } from '@angular/common';\nimport { DateMaskDirective } from '../utils/input-mask.directive';\n\n@Component({\n  selector: 'asa-time-picker',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  template: `\n    <div class=\"time-picker-wrapper\" [formGroup]=\"form\">\n      <!-- Regular input mode -->\n      <ng-container *ngIf=\"!inline\">\n        <div class=\"input-wrapper\" [class.focus]=\"isOpen\" [class.disabled]=\"disabled\">\n          <input\n            #timePickerInput\n            [asa-dateMask]=\"displayFormat\"\n            [disableInputMask]=\"disableInputMask\"\n            [class.disabled]=\"disabled\"\n            type=\"text\"\n            class=\"time-picker-input\"\n            [class.focus]=\"isOpen\"\n            formControlName=\"timeInput\"\n            (focus)=\"onFocusInput()\"\n            [placeholder]=\"placeholder\"\n            [readonly]=\"readOnly || readOnlyInput\"\n            [attr.disabled]=\"disabled? 'disabled':null\"\n          >\n          <button *ngIf=\"showIcon\" class=\"time-button\" (click)=\"toggleTimePicker($event)\" tabindex=\"-1\">\n            <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"20\" height=\"20\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"#999\" stroke-width=\"2\">\n              <circle cx=\"12\" cy=\"12\" r=\"10\"/>\n              <path d=\"M12 6v6l4 2\"/>\n            </svg>\n          </button>\n        </div>\n\n        <ng-template\n          cdkConnectedOverlay\n          nzConnectedOverlay\n          [cdkConnectedOverlayOrigin]=\"origin\"\n          [cdkConnectedOverlayOpen]=\"isOpen\"\n          [cdkConnectedOverlayPositions]=\"overlayPositions\"\n          [cdkConnectedOverlayTransformOriginOn]=\"'.time-picker-popup'\"\n          [cdkConnectedOverlayHasBackdrop]=\"false\"\n          (positionChange)=\"onPositionChange($event)\"\n          (detach)=\"close()\"\n        >\n          <ng-container *ngTemplateOutlet=\"timePickerContent\"></ng-container>\n        </ng-template>\n      </ng-container>\n\n      <!-- Inline mode -->\n      <ng-container *ngIf=\"inline\">\n        <ng-container *ngTemplateOutlet=\"timePickerContent\"></ng-container>\n      </ng-container>\n\n      <!-- Time Picker Content Template -->\n      <ng-template #timePickerContent>\n        <div\n          #popupWrapper\n          [class]=\"'time-picker-popup ' + cssClass\"\n          [@slideMotion]=\"'enter'\"\n          [class.inline]=\"inline\"\n          [class.disabled]=\"disabled\"\n          style=\"position: relative\"\n          (click)=\"$event.stopPropagation()\"\n        >\n          <div class=\"time-picker-content\">\n            <div class=\"time-columns\">\n              <!-- Hours -->\n              <div class=\"time-column\">\n                <div class=\"time-scroller\">\n                  <button\n                    *ngFor=\"let hour of hours\"\n                    [id]=\"'selector_h'+hour\"\n                    [class.selected]=\"selectedTime.hour === hour\"\n                    [class.disabled]=\"isHourDisabled(hour)\"\n                    (click)=\"selectHour(hour)\"\n                    type=\"button\"\n                  >\n                    {{ hour.toString().padStart(2, '0') }}\n                  </button>\n                </div>\n              </div>\n\n              <div class=\"time-separator\">:</div>\n\n              <!-- Minutes -->\n              <div class=\"time-column\">\n                <div class=\"time-scroller\">\n                  <button\n                    *ngFor=\"let minute of minutes\"\n                    [id]=\"'selector_m'+minute\"\n                    [class.selected]=\"selectedTime.minute === minute\"\n                    [class.disabled]=\"isMinuteDisabled(minute)\"\n                    (click)=\"selectMinute(minute)\"\n                    type=\"button\"\n                  >\n                    {{ minute.toString().padStart(2, '0') }}\n                  </button>\n                </div>\n              </div>\n\n              <!-- Seconds (if format includes seconds) -->\n              <ng-container *ngIf=\"showSeconds\">\n                <div class=\"time-separator\">:</div>\n                <div class=\"time-column\">\n                  <div class=\"time-scroller\">\n                    <button\n                      *ngFor=\"let second of seconds\"\n                      [id]=\"'selector_s'+second\"\n                      [class.selected]=\"selectedTime.second === second\"\n                      [class.disabled]=\"isSecondDisabled(second)\"\n                      (click)=\"selectSecond(second)\"\n                      type=\"button\"\n                    >\n                      {{ second.toString().padStart(2, '0') }}\n                    </button>\n                  </div>\n                </div>\n              </ng-container>\n\n              <!-- AM/PM (only in 12-hour format) -->\n              <ng-container *ngIf=\"timeFormat === '12'\">\n                <div class=\"time-column period\">\n                  <button\n                    *ngFor=\"let period of periods\"\n                    [class.selected]=\"selectedTime.period === period\"\n                    (click)=\"selectPeriod(period)\"\n                    type=\"button\"\n                  >\n                    {{ period }}\n                  </button>\n                </div>\n              </ng-container>\n            </div>\n          </div>\n\n          <div class=\"time-picker-footer\" *ngIf=\"!inline\">\n            <div class=\"footer-buttons\">\n              <button class=\"now-btn\" (click)=\"selectNow()\" type=\"button\">{{ lang.now }}</button>\n            </div>\n            <div class=\"footer-actions\">\n              <button class=\"save-btn\" (click)=\"save()\" type=\"button\">{{ lang.ok }}</button>\n            </div>\n          </div>\n        </div>\n      </ng-template>\n    </div>\n  `,\n  styleUrls: ['./time-picker.component.scss'],\n  standalone: true,\n  imports: [\n    NgIf,\n    NgFor,\n    ReactiveFormsModule,\n    NgTemplateOutlet,\n    DateMaskDirective,\n    OverlayModule,\n    NzConnectedOverlayDirective\n  ],\n  providers: [\n    AsaDatePickerService,\n    {\n      provide: NG_VALUE_ACCESSOR,\n      useExisting: forwardRef(() => TimePickerComponent),\n      multi: true\n    }\n  ],\n  host: {\n    '(click)': 'open()'\n  },\n  animations: [slideMotion]\n})\nexport class TimePickerComponent implements ControlValueAccessor, OnInit, OnDestroy, OnChanges {\n  @Input() placeholder?: string;\n  @Input() rtl = false;\n  @Input() placement: 'left' | 'right' = 'right';\n  @Input() minTime?: string;\n  @Input() maxTime?: string;\n  @Input() lang!: Lang_Locale;\n  @Input() valueType: TimeValueType = 'string';\n  @Input() cssClass = '';\n  @Input() showIcon = true;\n  @Input() dateAdapter: AsaDateAdapter<Date>;\n  @Input() inline = false;\n  @Input() disableInputMask = false;\n  @Input() disabled = false;\n  @Input() disabledTimesFilter: (date: Date) => boolean;\n  @Input() allowEmpty = true;\n  @Input() readOnly = false;\n  @Input() readOnlyInput = false;\n  @Input() set displayFormat(value: string) {\n    this._displayFormat = value;\n    this.showSeconds = value.toLowerCase().includes('s');\n    // Infer time format from display format\n    this.timeFormat = this.getTimeFormatFromDisplayFormat(value);\n    this.updateHourRange();\n    this.updateTimeDisplay();\n  }\n  get displayFormat(): string {\n    return this._displayFormat;\n  }\n  @Input() set selectedDate(date: Date){\n    if (date) {\n      this._selectedDate = date;\n    }\n  }\n  get selectedDate() : Date {\n    return this._selectedDate;\n  }\n\n\n  @Output() timeChange = new EventEmitter<Date | string>();\n  @Output() openChange = new EventEmitter<boolean>();\n\n  @ViewChild('timePickerInput') timePickerInput!: ElementRef<HTMLInputElement>;\n  @ViewChild('popupWrapper') popupWrapper!: ElementRef<HTMLDivElement>;\n\n  timeFormat: TimeFormat = '12';\n  private _displayFormat = 'hh:mm a';\n  private _value: string | Date | null = null;\n  private _selectedDate: Date = new Date();\n  private onChange: (value: any) => void = () => {};\n  private onTouched: () => void = () => {};\n  private timeoutId: number | null = null;\n\n  showSeconds = false;\n  hours: number[] = [];\n  minutes: number[] = Array.from({ length: 60 }, (_, i) => i);\n  seconds: number[] = Array.from({ length: 60 }, (_, i) => i);\n  periods: string[] = [];\n  selectedTime: TimeConfig = {\n    hour: 12,\n    minute: 0,\n    second: 0,\n    period: ''\n  };\n  isOpen = false;\n  form: FormGroup;\n  origin: CdkOverlayOrigin;\n  overlayPositions = [...DEFAULT_DATE_PICKER_POSITIONS];\n\n  constructor(\n    public fb: FormBuilder,\n    public elementRef: ElementRef,\n    public cdref: ChangeDetectorRef,\n    public datePickerService: AsaDatePickerService,\n    public jalaliAdapter: JalaliDateAdapter,\n    public gregorianAdapter: GregorianDateAdapter,\n  ) {\n    this.dateAdapter = this.gregorianAdapter;\n    this.initializeForm();\n    this.initializeLocale();\n  }\n\n  // Lifecycle hooks\n  ngOnInit(): void {\n    this.updateHourRange();\n    this.origin = new CdkOverlayOrigin(this.elementRef);\n    this.setupInputSubscription();\n    this.value = this.selectedDate;\n\n    // Only add document click listener for non-inline mode\n    if (!this.inline) {\n      document.addEventListener('click', this.handleDocumentClick);\n    }\n\n    // Auto-open for inline mode\n    if (this.inline) {\n      this.isOpen = true;\n      this.scrollToTime();\n    }\n  }\n\n  ngOnDestroy(): void {\n    this.cleanupTimeouts();\n    document.removeEventListener('click', this.handleDocumentClick);\n  }\n\n  ngOnChanges(changes: SimpleChanges): void {\n    if (changes['rtl'] || changes['lang']) {\n      this.updateLocale();\n    }\n    if (changes['rtl'] && !changes['dateAdapter']) {\n      this.dateAdapter = this.rtl? this.jalaliAdapter: this.gregorianAdapter;\n    }\n  }\n\n  // Initialization methods\n  initializeForm(): void {\n    this.form = this.fb.group({\n      timeInput: ['']\n    });\n  }\n\n  initializeLocale(): void {\n    this.lang = this.datePickerService.locale_en;\n    this.selectedTime.period = this.lang.am;\n    this.periods = [this.lang.am, this.lang.pm];\n  }\n\n  updateLocale(): void {\n    this.lang = this.rtl ? this.datePickerService.locale_fa : this.datePickerService.locale_en;\n    this.selectedTime.period = this.lang.am;\n    this.periods = [this.lang.am, this.lang.pm];\n    this.placeholder = this.lang.selectTime;\n  }\n\n  setupInputSubscription(): void {\n    this.form.get('timeInput')?.valueChanges.subscribe(value => {\n      if (!value) return;\n\n      if (!this.isOpen) {\n        this.validateAndUpdateTime(value);\n      } else {\n        this.parseTimeString(value);\n        this.scrollToTime();\n      }\n    });\n  }\n\n  // Time management\n  updateHourRange(): void {\n    const format = this.getTimeFormatFromDisplayFormat(this._displayFormat);\n    this.hours = format === '12'\n      ? Array.from({ length: 12 }, (_, i) => i + 1)\n      : Array.from({ length: 24 }, (_, i) => i);\n  }\n\n  formatTime(date?: Date): string {\n    if (!date && !this.dateAdapter) return '';\n\n    const currentDate = date || this.updateDateFromSelection();\n    return this.dateAdapter.format(currentDate, this._displayFormat);\n  }\n\n  parseTimeString(value: string | Date): void {\n    if (!this.dateAdapter) return;\n\n    const date = value instanceof Date ? value : this.dateAdapter.parse(value, this._displayFormat);\n    if (!date) return;\n\n    const hours = this.dateAdapter.getHours(date);\n    const minutes = this.dateAdapter.getMinutes(date);\n    const seconds = this.dateAdapter.getSeconds(date);\n\n    if (hours === null || minutes === null || seconds === null) return;\n\n    this.selectedTime = {\n      hour: hours,\n      minute: minutes,\n      second: seconds,\n      period: hours >= 12 ? this.lang.pm : this.lang.am\n    };\n\n    this.cdref.markForCheck();\n  }\n\n  // Value accessors and form control\n  get value(): Date | string | null {\n    return this._value;\n  }\n\n  set value(val: Date | string | null) {\n    this._value = val;\n    this.updateFromValue(val);\n  }\n\n  updateFromValue(value: Date | string | null): void {\n    if (!value) {\n      this.resetSelection();\n      return;\n    }\n\n    if (value instanceof Date) {\n      this.updateFromDate(value);\n    } else {\n      this.parseTimeString(value);\n    }\n  }\n\n  updateFromDate(date: Date | null): void {\n    if (date && !isNaN(date.getTime()) && this.dateAdapter) {\n      const hours = this.dateAdapter.getHours(date);\n      if (hours === null) return;\n\n      this.selectedTime = {\n        hour: hours,\n        minute: this.dateAdapter.getMinutes(date) ?? 0,\n        second: this.dateAdapter.getSeconds(date) ?? 0,\n        period: hours >= 12 ? this.lang.pm : this.lang.am\n      };\n    } else {\n      this.resetSelection();\n    }\n\n    this.cdref.markForCheck();\n  }\n\n  resetSelection(): void {\n    this.selectedTime = {\n      hour: 0,\n      minute: 0,\n      second: 0,\n      period: this.lang.am\n    };\n    this.cdref.markForCheck();\n  }\n\n  writeValue(value: Date | string | null): void {\n    if (!value) {\n      this.value = null;\n      return;\n    }\n\n    if (value instanceof Date) {\n      this.value = value;\n    } else if (value.trim()) {\n      const date = this.selectedDate;\n      this.value = !isNaN(date.getTime()) && this.valueType === 'date' ? date : value;\n      this.parseTimeString(value);\n    }\n\n    this.updateTimeDisplay();\n    this.save(false);\n  }\n\n  registerOnChange(fn: any): void {\n    this.onChange = fn;\n  }\n\n  registerOnTouched(fn: any): void {\n    this.onTouched = fn;\n  }\n\n  // UI Event handlers\n  @HostListener('keydown', ['$event'])\n  handleKeydown(event: KeyboardEvent): void {\n    if (event.key === 'Tab' || event.key === 'Enter') {\n      this.handleTimeInput();\n      if (event.key === 'Tab') this.close();\n    } else if (event.key === 'Escape') {\n      this.close();\n    }\n  }\n\n  handleTimeInput(): void {\n    const currentValue = this.form.get('timeInput')?.value;\n    if (currentValue || (!currentValue && !this.allowEmpty)) {\n      this.validateAndUpdateTime(currentValue);\n    }\n  }\n\n  handleDocumentClick = (event: MouseEvent): void => {\n    if (!this.elementRef.nativeElement.contains(event.target) && this.isOpen) {\n      this.close();\n      this.handleTimeInput();\n    }\n  }\n\n  onFocusInput(): void {\n    if (!this.isOpen) {\n      this.open();\n    }\n  }\n\n  toggleTimePicker(event: Event): void {\n    event.stopPropagation();\n    this.isOpen ? this.close() : this.open();\n  }\n\n  // Picker operations\n  open(): void {\n    if (this.inline || this.disabled || this.readOnly) return;\n\n    const wasOpen = this.isOpen;\n    this.isOpen = true;\n    this.openChange.emit(true);\n    this.scrollToTime();\n\n    if (!wasOpen) {\n      this.cdref.markForCheck();\n    }\n  }\n\n  close(): void {\n    if (this.inline) return;\n\n    this.cleanupTimeouts();\n    if (this.isOpen) {\n      this.isOpen = false;\n      this.openChange.emit(false);\n      this.cdref.markForCheck();\n    }\n  }\n\n  // Selection methods\n  selectHour(hour: number): void {\n    if (!this.isHourDisabled(hour)) {\n      this.selectedTime.hour = hour;\n      this.updateTimeDisplay();\n      this.scrollToSelectedItem(`h${hour}`);\n      if (this.inline) this.save();\n    }\n  }\n\n  selectMinute(minute: number): void {\n    if (!this.isMinuteDisabled(minute)) {\n      this.selectedTime.minute = minute;\n      this.updateTimeDisplay();\n      this.scrollToSelectedItem(`m${minute}`);\n      if (this.inline) this.save();\n    }\n  }\n\n  selectSecond(second: number): void {\n    if (!this.isSecondDisabled(second)) {\n      this.selectedTime.second = second;\n      this.updateTimeDisplay();\n      this.scrollToSelectedItem(`s${second}`);\n      if (this.inline) this.save();\n    }\n  }\n\n  selectPeriod(period: string): void {\n    this.selectedTime.period = period;\n    this.updateTimeDisplay();\n  }\n\n  selectNow(): void {\n    const now = this.selectedDate;\n    this.selectedTime = {\n      hour: now.getHours(),\n      minute: now.getMinutes(),\n      second: now.getSeconds(),\n      period: now.getHours() >= 12 ? this.lang.pm : this.lang.am\n    };\n\n    this.updateTimeDisplay();\n    this.scrollToTime();\n    this.save();\n  }\n\n  save(close = true): void {\n    const date = this.updateDateFromSelection();\n    const { isValid, normalizedDate } = this.validateAndNormalizeTime(date);\n\n    if (!isValid || !normalizedDate) return;\n\n    const outputValue = this.valueType === 'date'\n      ? normalizedDate\n      : this.formatTime(normalizedDate);\n\n    const valueChanged = JSON.stringify(this._value) !== JSON.stringify(outputValue);\n    if (valueChanged) {\n      this._value = outputValue;\n      this.form.get('timeInput')?.setValue(this.formatTime(normalizedDate), { emitEvent: false });\n\n      this.onChange(outputValue);\n      this.timeChange.emit(outputValue);\n      this.cdref.markForCheck();\n    }\n\n    if (close && !this.inline) {\n      this.close();\n    }\n  }\n\n  // Validation methods\n  validateAndUpdateTime(value: string): void {\n    if (!value || !this.dateAdapter) {\n      this.updateTimeDisplay();\n      return;\n    }\n\n    try {\n      const parsedDate = this.dateAdapter.parse(value, this._displayFormat);\n      if (!parsedDate) {\n        this.updateTimeDisplay();\n        return;\n      }\n\n      const { isValid, normalizedDate } = this.validateAndNormalizeTime(parsedDate);\n      const formattedTime = this.dateAdapter.format(normalizedDate, this._displayFormat);\n      this.form.get('timeInput')?.setValue(formattedTime, { emitEvent: false });\n      this.parseTimeString(normalizedDate);\n\n      const outputValue = this.valueType === 'date' ? normalizedDate : formattedTime;\n      this._value = outputValue;\n      this.onChange(outputValue);\n      this.timeChange.emit(outputValue);\n\n    } catch (error) {\n      console.error('Error normalizing time:', error);\n      this.updateTimeDisplay();\n    }\n  }\n\n  isHourDisabled(hour: number): boolean {\n    if (!this.dateAdapter) return false;\n    return this.isFullHourDisabled(hour);\n  }\n\n  isMinuteDisabled(minute: number): boolean {\n    if (!this.dateAdapter) return false;\n    return this.isFullMinuteDisabled(minute);\n  }\n\n  isSecondDisabled(second: number): boolean {\n    if (!this.dateAdapter) return false;\n    const testConfig = { ...this.selectedTime, second };\n    const testDate = this.createDateWithTime(testConfig);\n    return this.isTimeDisabled(testDate);\n  }\n\n  isTimeDisabled(testDate: Date): boolean {\n    if (!this.dateAdapter) return false;\n\n    if (this.minTime) {\n      const minDate = this.dateAdapter.parse(this.minTime, this._displayFormat);\n      if (minDate && this.dateAdapter.isBefore(testDate, minDate)) {\n        return true;\n      }\n    }\n\n    if (this.maxTime) {\n      const maxDate = this.dateAdapter.parse(this.maxTime, this._displayFormat);\n      if (maxDate && this.dateAdapter.isAfter(testDate, maxDate)) {\n        return true;\n      }\n    }\n\n    return this.disabledTimesFilter ? this.disabledTimesFilter(testDate) : false;\n  }\n\n  validateAndNormalizeTime(date: Date): { isValid: boolean; normalizedDate: Date | null } {\n    if (!this.dateAdapter) {\n      return { isValid: false, normalizedDate: null };\n    }\n\n    let isValid = true;\n    // Clone the date to avoid modifying the original\n    let normalizedDate = this.dateAdapter.clone(date);\n    if (this.isTimeDisabled(normalizedDate)) {\n      isValid = false;\n      // Try to find nearest valid time (check next and previous 48 intervals of 30 minutes)\n      for (let i = 1; i <= 48; i++) {\n        const nextTime = this.dateAdapter.addMinutes(date, i * 30);\n        const prevTime = this.dateAdapter.addMinutes(date, -i * 30);\n\n        if (!this.isTimeDisabled(nextTime)) {\n          normalizedDate = nextTime;\n          break;\n        }\n        if (!this.isTimeDisabled(prevTime)) {\n          normalizedDate = prevTime;\n          break;\n        }\n      }\n\n      // If still disabled after trying to find valid time\n      if (this.isTimeDisabled(normalizedDate)) {\n        return { isValid: false, normalizedDate: null };\n      }\n    }\n\n    return { isValid: isValid, normalizedDate };\n  }\n\n  private isFullHourDisabled(hour: number): boolean {\n    for (let minute = 0; minute < 60; minute++) {\n      const testConfig = {\n        ...this.selectedTime,\n        hour,\n        minute,\n        second: 0\n      };\n      const testDate = this.createDateWithTime(testConfig);\n\n      if (!this.isTimeDisabled(testDate)) {\n        return false; // If any minute is enabled, hour is not fully disabled\n      }\n    }\n    return true; // All minutes in hour are disabled\n  }\n\n  private isFullMinuteDisabled(minute: number): boolean {\n    if (!this.showSeconds) {\n      const testConfig = {\n        ...this.selectedTime,\n        minute,\n        second: 0\n      };\n      const testDate = this.createDateWithTime(testConfig);\n      return this.isTimeDisabled(testDate);\n    }\n\n    // If showing seconds, check each second\n    for (let second = 0; second < 60; second++) {\n      const testConfig = {\n        ...this.selectedTime,\n        minute,\n        second\n      };\n      const testDate = this.createDateWithTime(testConfig);\n\n      if (!this.isTimeDisabled(testDate)) {\n        return false; // If any second is enabled, minute is not fully disabled\n      }\n    }\n    return true; // All seconds in minute are disabled\n  }\n\n  // Helper methods\n  createDateWithTime(config: TimeConfig): Date {\n    if (!this.dateAdapter) return this.selectedDate;\n\n    let testHour = config.hour;\n    if (this.timeFormat === '12') {\n      if (config.period === this.lang.pm && testHour < 12) testHour += 12;\n      if (config.period === this.lang.am && testHour === 12) testHour = 0;\n    }\n\n    let date = this.selectedDate;\n    date = this.dateAdapter.setHours(date, testHour);\n    date = this.dateAdapter.setMinutes(date, config.minute);\n    date = this.dateAdapter.setSeconds(date, config.second);\n    return date;\n  }\n\n  updateDateFromSelection(): Date {\n    if (!this.dateAdapter) return this.selectedDate;\n\n    let hours = this.selectedTime.hour;\n    if (this.timeFormat === '12') {\n      if (this.selectedTime.period === this.lang.pm && hours < 12) hours += 12;\n      if (this.selectedTime.period === this.lang.am && hours === 12) hours = 0;\n    }\n\n    let date = this._value instanceof Date ?\n      this.dateAdapter.clone(this._value) :\n      this.selectedDate;\n\n    date = this.dateAdapter.setHours(date, hours);\n    date = this.dateAdapter.setMinutes(date, this.selectedTime.minute);\n    date = this.dateAdapter.setSeconds(date, this.selectedTime.second);\n\n    return date;\n  }\n\n  updateTimeDisplay(): void {\n    if (this.form) {\n      this.form.get('timeInput')?.setValue(this.formatTime(), { emitEvent: false });\n    }\n  }\n\n  getTimeFormatFromDisplayFormat(format: string): '12' | '24' {\n    // Check for 24-hour format indicators\n    const has24HourFormat = /\\bH{1,2}\\b/.test(format);\n    return has24HourFormat ? '24' : '12';\n  }\n\n  // UI Update methods\n  async scrollToTime(){\n    await this.scrollToSelectedItem(`h${this.selectedTime.hour}`, 'auto'),\n    await this.scrollToSelectedItem(`m${this.selectedTime.minute}`, 'auto'),\n    this.showSeconds ? await this.scrollToSelectedItem(`s${this.selectedTime.second}`, 'auto') : '';\n  }\n\n  scrollToSelectedItem(id: string, behavior: ScrollBehavior = 'smooth'): Promise<boolean> {\n    this.cleanupTimeouts();\n    return new Promise((resolve) => {\n      if (!id) {\n        resolve(false);\n        return;\n      }\n\n      this.timeoutId = window.setTimeout(() => {\n        const selectedElement = this.popupWrapper?.nativeElement.querySelector(`#selector_${id}`);\n        if (selectedElement) {\n          selectedElement.scrollIntoView({ behavior, block: 'center' });\n        }\n        resolve(true);\n      }, 0);\n    });\n  }\n\n  cleanupTimeouts(): void {\n    if (this.timeoutId !== null) {\n      window.clearTimeout(this.timeoutId);\n      this.timeoutId = null;\n    }\n  }\n\n  onPositionChange(position: ConnectedOverlayPositionChange): void {\n    this.cdref.detectChanges();\n  }\n}\n","import { Component, Input, Output, EventEmitter, OnInit, OnChanges, SimpleChanges, ElementRef, ViewChild, AfterViewInit, ChangeDetectorRef, HostListener, OnDestroy, ChangeDetectionStrategy, TemplateRef, QueryList } from '@angular/core';\nimport { AsaDateAdapter, GregorianDateAdapter, JalaliDateAdapter } from '../asa-date-adapter';\nimport { CustomLabels, DateRange, Lang_Locale, YearRange } from '../utils/models';\nimport { DestroyService, AsaDatePickerService } from '../asa-date-picker.service';\nimport { CalendarType, DatepickerMode } from '../utils/types';\nimport { TimePickerComponent } from '../time-picker/time-picker.component';\nimport { takeUntil } from 'rxjs';\nimport { NgFor, NgIf, NgTemplateOutlet } from '@angular/common';\nimport { CustomTemplate } from '../utils/template.directive';\n\n@Component({\n  selector: 'asa-date-picker-popup',\n  standalone: true,\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  imports: [\n    NgIf,\n    NgFor,\n    NgTemplateOutlet,\n    TimePickerComponent\n  ],\n  template: `\n    <div class=\"date-picker-popup\" [class.rtl]=\"rtl\" [class]=\"cssClass\" tabindex=\"-1\">\n      <div class=\"date-picker-content\">\n        <ng-container *ngIf=\"showSidebar\">\n          <div *ngIf=\"isRange\" class=\"period-selector\">\n            <button\n              *ngFor=\"let period of periods\"\n              tabindex=\"-1\"\n              [class.active]=\"isActivePeriod(period)\"\n              (click)=\"selectPeriod(period)\"\n            >\n              {{ period.label }}\n              <span *ngIf=\"period.arrow\" class=\"arrow\">→</span>\n            </button>\n          </div>\n          <div *ngIf=\"!isRange\" class=\"side-selector\" #itemSelector>\n            <ng-container *ngIf=\"viewMode == 'days'\">\n              <button\n                *ngFor=\"let month of monthListNum\"\n                tabindex=\"-1\"\n                [id]=\"'selector_'+month\"\n                [class.active]=\"isActiveMonth(month)\"\n                [disabled]=\"isMonthDisabled(month)\"\n                (click)=\"selectMonth(month, false)\">\n                {{ getMonthName(month) }}\n              </button>\n            </ng-container>\n            <ng-container *ngIf=\"viewMode == 'months'\">\n              <button\n                *ngFor=\"let year of yearList\"\n                tabindex=\"-1\"\n                [id]=\"'selector_'+year\"\n                [class.active]=\"isActiveYear(year)\"\n                [disabled]=\"isYearDisabled(year)\"\n                (click)=\"selectYear(year, true)\"\n              >\n                {{ year }}\n              </button>\n            </ng-container>\n            <ng-container *ngIf=\"viewMode == 'years'\">\n              <button\n                tabindex=\"-1\"\n                *ngFor=\"let yearRange of yearRanges\"\n                [id]=\"'selector_'+yearRange.start\"\n                [class.active]=\"isActiveYearRange(yearRange.start)\"\n                [disabled]=\"isYearRangeDisabled(yearRange)\"\n                (click)=\"selectYearRange(yearRange.start)\"\n              >\n                {{ yearRange.start }} - {{ yearRange.end }}\n              </button>\n            </ng-container>\n          </div>\n        </ng-container>\n        <div class=\"calendar\">\n          <div class=\"header\">\n            <button class=\"asa-calendar-nav-left\" (click)=\"goPrev()\" [disabled]=\"isPrevMonthDisabled()\" tabindex=\"-1\"></button>\n            <span class=\"month-year\">\n              <span *ngIf=\"mode != 'year'\" class=\"month-name\" (click)=\"showMonthSelector()\">{{ getCurrentMonthName() }}</span>\n              <span class=\"year\" (click)=\"showYearSelector()\">{{ getCurrentYear() }}</span>\n            </span>\n            <button class=\"asa-calendar-nav-right\" (click)=\"goNext()\" [disabled]=\"isNextMonthDisabled()\" tabindex=\"-1\"></button>\n          </div>\n          <div *ngIf=\"viewMode == 'days'\">\n            <div *ngIf=\"viewMode === 'days'\" class=\"weekdays\">\n              <span *ngFor=\"let day of getWeekDays()\">{{ day }}</span>\n            </div>\n            <div *ngIf=\"viewMode === 'days'\" class=\"days\">\n              <button\n                *ngFor=\"let day of days\"\n                tabindex=\"-1\"\n                [class.different-month]=\"!isSameMonth(day, currentDate)\"\n                [class.selected]=\"isSelected(day)\"\n                [class.in-range]=\"isInRange(day)\"\n                [class.range-start]=\"isRangeStart(day)\"\n                [class.range-end]=\"isRangeEnd(day)\"\n                [class.today]=\"isToday(day)\"\n                [class.disabled]=\"isDateDisabled(day)\"\n                [disabled]=\"isDateDisabled(day)\"\n                (click)=\"selectDate(day)\"\n                (mouseenter)=\"onMouseEnter(day,$event)\"\n              >\n                <ng-container *ngIf=\"dayTemplate; else dayDefTemplate\">\n                  <ng-container *ngTemplateOutlet=\"$any(dayTemplate); context: { $implicit: day }\"></ng-container>\n                </ng-container>\n                <ng-template #dayDefTemplate>\n                  {{ dateAdapter.getDate(day) }}\n                </ng-template>\n              </button>\n            </div>\n          </div>\n          <div *ngIf=\"viewMode === 'months'\" class=\"months\">\n            <button\n              *ngFor=\"let month of monthListNum\"\n              tabindex=\"-1\"\n              [class.selected]=\"month === dateAdapter.getMonth(currentDate) + 1\"\n              [disabled]=\"isMonthDisabled(month)\"\n              (click)=\"selectMonth(month,false)\"\n            >\n              <ng-container *ngIf=\"monthTemplate; else monthDefTemplate\">\n                <ng-container *ngTemplateOutlet=\"$any(monthTemplate); context: { $implicit: month }\"></ng-container>\n              </ng-container>\n              <ng-template #monthDefTemplate>\n                {{ getMonthName(month) }}\n              </ng-template>\n            </button>\n          </div>\n          <div *ngIf=\"viewMode === 'years' || mode == 'year'\" class=\"years\">\n            <button\n              *ngFor=\"let year of yearList\"\n              tabindex=\"-1\"\n              [class.selected]=\"year === dateAdapter.getYear(currentDate)\"\n              [disabled]=\"isYearDisabled(year)\"\n              (click)=\"selectYear(year)\"\n            >\n              <ng-container *ngIf=\"yearTemplate; else yearDefTemplate\">\n                <ng-container *ngTemplateOutlet=\"$any(yearTemplate); context: { $implicit: year }\"></ng-container>\n              </ng-container>\n              <ng-template #yearDefTemplate>\n                {{ year }}\n              </ng-template>\n            </button>\n          </div>\n        </div>\n\n        <!-- Time Picker Integration -->\n        <div *ngIf=\"showTimePicker\" class=\"time-picker-section\">\n          <asa-time-picker\n            #timePicker\n            [rtl]=\"rtl\"\n            [dateAdapter]=\"dateAdapter\"\n            [valueType]=\"'date'\"\n            [displayFormat]=\"timeDisplayFormat\"\n            [inline]=\"true\"\n            [disabledTimesFilter]=\"disabledTimesFilter\"\n            [cssClass]=\"'embedded-time-picker'\"\n            [selectedDate]=\"selectedDate\"\n            (timeChange)=\"onTimeChange($event)\"\n          ></asa-time-picker>\n        </div>\n      </div>\n      <div class=\"date-picker-footer\" *ngIf=\"footerDescription || showTimePicker || showToday\">\n        <div class=\"footer-description\" *ngIf=\"footerDescription\" [innerHtml]=\"footerDescription\">\n        </div>\n        <div class=\"footer-actions\">\n          <button *ngIf=\"showTimePicker\" class=\"footer-button ok\" (click)=\"onOkClick()\">{{ lang.ok }}</button>\n          <button *ngIf=\"showToday\" class=\"footer-button\" (click)=\"onTodayClick()\">{{ lang.today }}</button>\n        </div>\n      </div>\n    </div>\n  `,\n  styleUrls: ['./date-picker-popup.component.scss']\n})\nexport class DatePickerPopupComponent implements OnInit, OnChanges, AfterViewInit, OnDestroy {\n  // ========== Input Properties ==========\n  @Input() rtl = false;\n  @Input() selectedDate: Date | null = null;\n  @Input() selectedStartDate: Date | null = null;\n  @Input() selectedEndDate: Date | null = null;\n  @Input() mode: DatepickerMode = 'day';\n  @Input() isRange = false;\n  @Input() customLabels: Array<CustomLabels> = [];\n  @Input() calendarType: CalendarType = 'gregorian';\n  @Input() minDate: Date | null = null;\n  @Input() maxDate: Date | null = null;\n  @Input() cssClass = '';\n  @Input() footerDescription = '';\n  @Input() activeInput: 'start' | 'end' | '' = null;\n  @Input() showSidebar = true;\n  @Input() showToday: boolean;\n  @Input() showTimePicker = false;\n  @Input() timeDisplayFormat = 'HH:mm';\n  @Input() dateFormat: string;\n  @Input() disabledDates: Array<Date | string> = [];\n  @Input() disabledDatesFilter: (date: Date) => boolean;\n  @Input() disabledTimesFilter: (date: Date) => boolean;\n  @Input() templates: QueryList<CustomTemplate>;\n\n  // ========== Output Properties ==========\n  @Output() dateSelected = new EventEmitter<Date>();\n  @Output() dateRangeSelected = new EventEmitter<DateRange>();\n  @Output() closePicker = new EventEmitter<void>();\n  @Output() clickInside = new EventEmitter<boolean>();\n\n  // ========== ViewChild Properties ==========\n  @ViewChild('itemSelector') itemSelector: ElementRef;\n  @ViewChild(TimePickerComponent) timePicker: TimePickerComponent;\n\n  // ========== Class Properties ==========\n  dateAdapter: AsaDateAdapter<Date>;\n  weekDays: string[] = [];\n  periods: Array<CustomLabels> = [];\n  days: Date[] = [];\n  currentDate: Date;\n  selectedPeriod: any = '';\n  tempEndDate: Date | null = null;\n  monthListNum = Array.from({ length: 12 }, (_, i) => i + 1);\n  yearList: number[] = [];\n  yearRanges: Array<YearRange> = [];\n  viewMode: 'days' | 'months' | 'years' = 'days';\n  lang: Lang_Locale;\n  timeoutId: any = null;\n  dayTemplate: TemplateRef<any>;\n  monthTemplate: TemplateRef<any>;\n  quarterTemplate: TemplateRef<any>;\n  yearTemplate: TemplateRef<any>;\n\n  // ========== Getters ==========\n  public get getDate(): Date {\n    return this.selectedDate || this.selectedStartDate || this.selectedEndDate || new Date();\n  }\n\n  constructor(\n    public el: ElementRef,\n    public cdr: ChangeDetectorRef,\n    public dpService: AsaDatePickerService,\n    public jalali: JalaliDateAdapter,\n    public gregorian: GregorianDateAdapter,\n    public destroy$: DestroyService\n  ) {\n    cdr.markForCheck();\n  }\n\n  // ========== Lifecycle Hooks ==========\n  ngOnInit() {\n    this.initializeComponent();\n  }\n\n  ngOnChanges(changes: SimpleChanges) {\n    this.handleChanges(changes);\n  }\n\n  ngAfterViewInit() {\n    this.scrollToSelectedItem();\n    this.setTimePickerDate();\n    this.templates.forEach((item) => {\n      switch (item.getType()) {\n          case 'day':\n              this.dayTemplate = item.template;\n              break;\n\n          case 'month':\n              this.monthTemplate = item.template;\n              break;\n\n          case 'quarter':\n              this.quarterTemplate = item.template;\n              break;\n\n          case 'year':\n              this.yearTemplate = item.template;\n              break;\n      }\n    });\n    this.cdr.markForCheck();\n  }\n\n  ngOnDestroy(): void {\n    if (this.timeoutId != null) {\n      clearTimeout(this.timeoutId);\n    }\n  }\n  // ========== Initialization Methods ==========\n  initializeComponent(): void {\n    this.setDateAdapter();\n    this.setInitialDate();\n    this.generateCalendar();\n    this.weekDays = this.dateAdapter.getDayOfWeekNames('short');\n    if (this.mode === 'year') {\n      this.showYearSelector();\n    }\n    this.initLabels();\n  }\n\n  initLabels(): void {\n    const today = this.dateAdapter.today();\n    if (this.customLabels?.length) {\n      this.periods = this.customLabels;\n    } else if (this.isRange) {\n      this.generateDefaultPeriods(today);\n    }\n  }\n\n  generateDefaultPeriods(today: Date): void {\n    this.periods = [\n      {\n        label: this.lang.lastDay,\n        value: [this.dateAdapter.addDays(today, -1), today]\n      },\n      {\n        label: this.lang.lastWeek,\n        value: [this.dateAdapter.addDays(today, -7), today],\n        arrow: true\n      },\n      {\n        label: this.lang.lastMonth,\n        value: [this.dateAdapter.addMonths(today, -1), today]\n      },\n      {\n        label: this.lang.custom,\n        value: 'custom'\n      }\n    ];\n  }\n\n  // ========== Date Adapter Methods ==========\n  setDateAdapter(): void {\n    this.dateAdapter = this.calendarType === 'jalali' ? this.jalali : this.gregorian;\n    this.lang = this.dpService.locale;\n  }\n\n  // ========== Calendar Generation Methods ==========\n  generateCalendar(): void {\n    const firstDayOfMonth = this.dateAdapter.startOfMonth(this.currentDate);\n    const startDate = this.dateAdapter.startOfWeek(firstDayOfMonth);\n    this.days = Array.from({ length: 42 }, (_, i) => this.dateAdapter.addDays(startDate, i));\n  }\n\n  // ========== View Mode Management ==========\n  setViewMode(): void {\n    switch (this.mode) {\n      case 'day':\n        this.viewMode = 'days';\n        break;\n      case 'month':\n        this.viewMode = 'months';\n        this.generateYearList(15);\n        break;\n      case 'year':\n        this.viewMode = 'years';\n        break;\n    }\n  }\n\n  showMonthSelector(): void {\n    this.viewMode = 'months';\n    this.generateYearList(15);\n    this.scrollToSelectedItem(this.dateAdapter.getYear(this.getDate));\n    this.cdr.markForCheck();\n  }\n\n  showYearSelector(): void {\n    this.viewMode = 'years';\n    this.generateYearRanges();\n    this.generateYearList();\n    this.scrollToSelectedItem();\n    this.cdr.markForCheck();\n  }\n\n  // ========== Time Selection Methods ==========\n  onTimeChange(time: string | Date): void {\n    const timeDate = time instanceof Date ? time : new Date(time);\n\n    if (!this.isRange) {\n      this.updateSingleDateTime(timeDate);\n    } else {\n      this.updateRangeDateTime(timeDate);\n    }\n  }\n\n  updateSingleDateTime(timeDate: Date): void {\n    if (!this.selectedDate) {\n      this.selectedDate = this.dateAdapter.today();\n    }\n\n    const updatedDate = this.applyTimeToDate(this.selectedDate, timeDate);\n    this.selectedDate = updatedDate;\n  }\n\n  updateRangeDateTime(timeDate: Date): void {\n    if (this.activeInput === 'start' && this.selectedStartDate) {\n      const updatedDate = this.applyTimeToDate(this.selectedStartDate, timeDate);\n      this.selectedStartDate = updatedDate;\n      this.dateRangeSelected.emit({ start: this.selectedStartDate, end: null });\n    } else if (this.activeInput === 'end' && this.selectedEndDate) {\n      const updatedDate = this.applyTimeToDate(this.selectedEndDate, timeDate);\n      this.selectedEndDate = updatedDate;\n      clearTimeout(this.timeoutId);\n      this.timeoutId = setTimeout(() => {\n        this.dateRangeSelected.emit({ start: this.selectedStartDate, end: this.selectedEndDate });\n      }, 300);\n    }\n  }\n\n  private applyTimeToDate(date: Date, timeDate: Date): Date {\n    let updatedDate = this.dateAdapter.setHours(date, timeDate.getHours());\n    updatedDate = this.dateAdapter.setMinutes(updatedDate, timeDate.getMinutes());\n    updatedDate = this.dateAdapter.setSeconds(updatedDate, timeDate.getSeconds());\n    return updatedDate;\n  }\n\n  setTimePickerDate(date?: Date) {\n    if (this.showTimePicker) {\n      if (this.isRange) {\n        this.dpService.activeInput$.asObservable()\n          .pipe(\n            takeUntil(this.destroy$)\n          )\n          .subscribe(active => {\n            if (active == 'start') {\n              this.timePicker.updateFromDate(this.selectedStartDate);\n            } else {\n              this.timePicker.updateFromDate(this.selectedEndDate);\n            }\n            this.timePicker.scrollToTime();\n          });\n      } else {\n        this.timePicker.updateFromDate(date || this.selectedDate);\n        this.timePicker.scrollToTime();\n      }\n    }\n  }\n\n  // ========== Date Selection Methods ==========\n  selectDate(date: Date): void {\n    if (this.isDateDisabled(date)) return;\n\n    if (this.showTimePicker) {\n      const existingDate = this.isRange ?\n        (this.activeInput === 'start' ? this.selectedStartDate : this.selectedEndDate) :\n        this.selectedDate;\n\n      if (existingDate) {\n        date = this.applyTimeToDate(date, existingDate);\n      }\n    } else {\n      date = this.applyTimeToDate(date, new Date())\n    }\n\n    if (this.isRange) {\n      this.handleRangeSelection(date);\n    } else {\n      this.handleSingleSelection(date);\n    }\n    this.currentDate = date;\n    this.cdr.markForCheck();\n  }\n\n  handleRangeSelection(date: Date): void {\n    const prevStartDate = this.selectedStartDate;\n    const prevEndDate = this.selectedEndDate;\n\n    if (!this.selectedStartDate ||\n        (this.selectedStartDate && this.selectedEndDate) ||\n        this.dateAdapter.isBefore(date, this.selectedStartDate)) {\n      this.selectedStartDate = date;\n      this.selectedEndDate = null;\n      if (!this.showTimePicker) {\n        this.activeInput = 'end';\n        this.dpService.activeInput$.next('end');\n      }\n      this.dateRangeSelected.emit({ start: this.selectedStartDate, end: null });\n    } else {\n      if (this.showTimePicker) {\n        this.activeInput = 'end';\n        this.dpService.activeInput$.next('end');\n      }\n      this.selectedEndDate = date;\n      this.dateRangeSelected.emit({ start: this.selectedStartDate, end: this.selectedEndDate });\n    }\n\n    if (prevStartDate !== this.selectedStartDate || prevEndDate !== this.selectedEndDate)\n      this.cdr.markForCheck();\n  }\n\n  handleSingleSelection(date: Date): void {\n    this.selectedDate = date;\n    if (!this.showTimePicker)\n      this.dateSelected.emit(date);\n  }\n\n  selectMonth(month: number, closeAfterSelection: boolean = false): void {\n    if (this.isMonthDisabled(month)) return;\n\n    this.currentDate = this.dateAdapter.createDate(\n      this.dateAdapter.getYear(this.currentDate),\n      month - 1,\n      1\n    );\n\n    if (this.isRange && this.mode === 'month') {\n      this.handleRangeSelection(this.currentDate);\n      return;\n    }\n\n    if (this.mode === 'month' || closeAfterSelection) {\n      this.selectedDate = this.currentDate;\n      this.dateSelected.emit(this.currentDate);\n      this.closeDatePicker();\n    } else {\n      this.viewMode = 'days';\n      this.generateCalendar();\n      this.cdr.detectChanges();\n    }\n\n    this.scrollToSelectedItem(month);\n  }\n\n  selectYear(year: number, sideSelector = false): void {\n    if (this.isYearDisabled(year)) return;\n\n    this.currentDate = this.dateAdapter.createDate(\n      year,\n      this.dateAdapter.getMonth(this.currentDate),\n      1\n    );\n\n    if (this.isRange && this.mode === 'year') {\n      this.handleRangeSelection(this.currentDate);\n      return;\n    }\n\n    if (this.mode === 'year') {\n      this.selectedDate = this.currentDate;\n      this.dateSelected.emit(this.currentDate);\n      this.closeDatePicker();\n      return;\n    }\n\n    if (sideSelector) {\n      this.currentDate = this.dateAdapter.setYear(this.selectedDate, year);\n      this.scrollToSelectedItem(year);\n    } else {\n      this.viewMode = 'months';\n      this.cdr.detectChanges();\n    }\n  }\n\n  // ========== Navigation Methods ==========\n  goPrev(): void {\n    if (this.viewMode === 'days') {\n      this.prevMonth();\n      this.cdr.detectChanges();\n      return;\n    }\n\n    let id: number;\n    if (this.viewMode === 'months') {\n      this.currentDate = this.dateAdapter.addYears(this.currentDate, -1);\n      id = this.dateAdapter.getYear(this.currentDate);\n    }\n\n    if (this.viewMode === 'years') {\n      const yearStart = this.yearList[0] - 15;\n      this.yearList = Array.from({ length: 15 }, (_, i) => yearStart + i);\n      id = yearStart;\n    }\n\n    this.cdr.detectChanges();\n    this.scrollToSelectedItem(id);\n  }\n\n  goNext(): void {\n    if (this.viewMode === 'days') {\n      this.nextMonth();\n      this.cdr.detectChanges();\n      return;\n    }\n\n    let id: number;\n    if (this.viewMode === 'months') {\n      this.currentDate = this.dateAdapter.addYears(this.currentDate, 1);\n      id = this.dateAdapter.getYear(this.currentDate);\n    }\n\n    if (this.viewMode === 'years') {\n      const yearStart = this.yearList[14] + 1;\n      this.yearList = Array.from({ length: 15 }, (_, i) => yearStart + i);\n      id = yearStart;\n    }\n\n    this.cdr.detectChanges();\n    this.scrollToSelectedItem(id);\n  }\n\n  prevMonth(): void {\n    if (this.isPrevMonthDisabled()) return;\n    this.currentDate = this.dateAdapter.addMonths(this.currentDate, -1);\n    this.generateCalendar();\n    this.scrollToSelectedItem(this.dateAdapter.getMonth(this.currentDate) + 1);\n  }\n\n  nextMonth(): void {\n    if (this.isNextMonthDisabled()) return;\n    this.currentDate = this.dateAdapter.addMonths(this.currentDate, 1);\n    this.generateCalendar();\n    this.scrollToSelectedItem(this.dateAdapter.getMonth(this.currentDate) + 1);\n  }\n\n  // ========== State Check Methods ==========\n  isSelected(date: Date): boolean {\n    if (this.isRange) {\n      return this.isRangeStart(date) || this.isRangeEnd(date);\n    }\n    return this.selectedDate && this.dateAdapter.isSameDay(date, this.selectedDate);\n  }\n\n  isRangeStart(date: Date): boolean {\n    return this.isRange &&\n           this.selectedStartDate &&\n           this.dateAdapter.isSameDay(date, this.selectedStartDate);\n  }\n\n  isRangeEnd(date: Date): boolean {\n    return this.isRange &&\n           this.selectedEndDate &&\n           this.dateAdapter.isSameDay(date, this.selectedEndDate);\n  }\n\n  isInRange(date: Date): boolean {\n    return this.isRange &&\n           this.selectedStartDate &&\n           (this.selectedEndDate || this.tempEndDate) &&\n           this.dateAdapter.isAfter(date, this.selectedStartDate) &&\n           this.dateAdapter.isBefore(date, this.selectedEndDate || this.tempEndDate);\n  }\n\n  isToday(date: Date): boolean {\n    return this.dateAdapter.isSameDay(date, this.dateAdapter.today()) && this.showToday;\n  }\n\n  isActiveMonth(month: number): boolean {\n    return this.dateAdapter.getMonth(this.currentDate) === month - 1;\n  }\n\n  isActiveYear(year: number): boolean {\n    return year === this.dateAdapter.getYear(this.currentDate);\n  }\n\n  isActiveYearRange(startYear: number): boolean {\n    return startYear === this.yearList[0];\n  }\n\n  // ========== Disabled State Methods ==========\n  isDateDisabled(date: Date): boolean {\n    if (\n      (this.minDate && this.dateAdapter.isBefore(date, this.minDate)) ||\n      (this.maxDate && this.dateAdapter.isAfter(date, this.maxDate))\n    ) {\n      return true;\n    }\n\n    // Check if date is in disabled dates array\n    const parsedDisabledDates = this.parseDisabledDates();\n    const isDisabledDate = parsedDisabledDates.some(disabledDate =>\n      this.dateAdapter.isSameDay(date, disabledDate)\n    );\n\n    // Check custom filter function if provided\n    const isFilterDisabled = this.disabledDatesFilter ?\n      this.disabledDatesFilter(date) :\n      false;\n\n    return isDisabledDate || isFilterDisabled;\n  }\n\n  isMonthDisabled(month: number): boolean {\n    const year = this.dateAdapter.getYear(this.currentDate);\n    const startOfMonth = this.dateAdapter.createDate(year, month - 1, 1);\n\n    // Check if all days in month are disabled\n    const daysInMonth = this.dateAdapter.getDaysInMonth(startOfMonth);\n    let allDaysDisabled = true;\n\n    for (let day = 1; day <= daysInMonth; day++) {\n      const date = this.dateAdapter.createDate(year, month - 1, day);\n      if (!this.isDateDisabled(date)) {\n        allDaysDisabled = false;\n        break;\n      }\n    }\n\n    return allDaysDisabled;\n  }\n\n  isYearDisabled(year: number): boolean {\n\n    if (this.minDate && this.dateAdapter.getYear(this.minDate) > year) return true;\n    if (this.maxDate && this.dateAdapter.getYear(this.maxDate) < year) return true;\n\n    // Check if all months in year are disabled\n    const firstOfMonth = this.dateAdapter.createDate(year,0,1);\n    let day = 1;\n\n    for (\n      let date = firstOfMonth;\n      date.getFullYear() == firstOfMonth.getFullYear();\n      date = this.dateAdapter.addDays(firstOfMonth,day++)\n    ) {\n      if (!this.isDateDisabled(date)) {\n        return false;\n      }\n    }\n\n    return true;\n  }\n\n  isYearRangeDisabled(yearRange: YearRange): boolean {\n    if (this.minDate && this.dateAdapter.getYear(this.minDate) > yearRange.end) return true;\n    if (this.maxDate && this.dateAdapter.getYear(this.maxDate) < yearRange.start) return true;\n\n    // Check if all years in range are disabled\n    for (let year = yearRange.start; year <= yearRange.end; year++) {\n      if (!this.isYearDisabled(year)) {\n        return false;\n      }\n    }\n\n    return true;\n  }\n\n  isPrevMonthDisabled(): boolean {\n    if (!this.minDate) return false;\n\n    const minYear = this.dateAdapter.getYear(this.minDate);\n\n    switch (this.viewMode) {\n      case 'days':\n        const prevMonth = this.dateAdapter.getMonth(this.currentDate) - 1;\n        return this.dateAdapter.getMonth(this.minDate) > prevMonth;\n      case 'months':\n        const prevYear = this.dateAdapter.getYear(this.currentDate) - 1;\n        return minYear > prevYear;\n      case 'years':\n        return minYear > this.yearList[this.yearList.length - 1];\n      default:\n        return false;\n    }\n  }\n\n  isNextMonthDisabled(): boolean {\n    if (!this.maxDate) return false;\n\n    const maxYear = this.dateAdapter.getYear(this.maxDate);\n\n    switch (this.viewMode) {\n      case 'days':\n        const nextMonth = this.dateAdapter.getMonth(this.currentDate) + 1;\n        return this.dateAdapter.getMonth(this.maxDate) < nextMonth;\n      case 'months':\n        const nextYear = this.dateAdapter.getYear(this.currentDate) + 1;\n        return maxYear < nextYear;\n      case 'years':\n        return maxYear < this.yearList[0];\n      default:\n        return false;\n    }\n  }\n\n  parseDisabledDates(): Date[] {\n    return this.disabledDates.map(date => {\n      if (date instanceof Date) {\n        return this.dateAdapter.startOfDay(date);\n      }\n      const parsedDate = this.dateAdapter.parse(date, this.dateFormat);\n      return parsedDate || null;\n    }).filter(date => date !== null) as Date[];\n  }\n\n  // ========== Event Handlers ==========\n  onMouseEnter(date: Date, event: Event): void {\n    if (this.isRange && this.selectedStartDate && !this.selectedEndDate) {\n      this.tempEndDate = date;\n    }\n  }\n\n  @HostListener('click')\n  onClickInside(): void {\n    this.clickInside.emit(true);\n  }\n\n  // ========== Utility Methods ==========\n  getMonthName(month: number): string {\n    return this.dateAdapter.getMonthNames('long')[month - 1];\n  }\n\n  getCurrentMonthName(): string {\n    return this.dateAdapter.getMonthNames('long')[this.dateAdapter.getMonth(this.currentDate)];\n  }\n\n  getCurrentYear(): number {\n    return this.dateAdapter.getYear(this.currentDate);\n  }\n\n  getWeekDays(): string[] {\n    return this.weekDays;\n  }\n\n  isSameMonth(date1: Date, date2: Date): boolean {\n    return this.dateAdapter.isSameMonth(date1, date2);\n  }\n\n  closeDatePicker(): void {\n    this.closePicker.emit();\n  }\n\n  // ========== Year Management Methods ==========\n  generateYearRanges(length: number = 15): void {\n    const yearCount = 15;\n    const currentYear = this.dateAdapter.getYear(this.dateAdapter.today());\n    const startYear = currentYear - Math.floor(yearCount/2) - (yearCount * Math.floor(length/2));\n    this.yearRanges = [];\n\n    for (let i = 0; i < length; i++) {\n      const start = startYear + i * yearCount;\n      this.yearRanges.push({ start, end: start + 14 });\n    }\n  }\n\n  generateYearList(length: number = 15): void {\n    const date = this.selectedDate || this.selectedEndDate || this.selectedStartDate || new Date();\n    const currentYear = this.dateAdapter.getYear(date);\n\n    let start: number;\n    if (this.viewMode === 'years') {\n      const currentRange = this.yearRanges.find(range =>\n        range.start <= currentYear && range.end >= currentYear\n      );\n      start = currentRange ? currentRange.start : currentYear;\n    } else {\n      start = this.dateAdapter.getYear(date) - Math.round(length / 2);\n    }\n\n    this.yearList = Array.from({ length }, (_, i) => start + i);\n  }\n\n  selectYearRange(startYear: number): void {\n    this.yearList = Array.from({ length: 15 }, (_, i) => startYear + i);\n    this.viewMode = 'years';\n    this.cdr.detectChanges();\n    this.scrollToSelectedItem(startYear);\n  }\n\n  // ========== Period Selection Methods ==========\n  isActivePeriod(period: CustomLabels): boolean {\n    const sameStart = this.dateAdapter.isEqual(\n      this.dateAdapter.startOfDay(period.value[0] as Date),\n      this.dateAdapter.startOfDay(this.selectedStartDate)\n    );\n\n    const sameEnd = this.dateAdapter.isEqual(\n      this.dateAdapter.startOfDay(period.value[1] as Date),\n      this.dateAdapter.startOfDay(this.selectedEndDate)\n    );\n\n\n    if (period.value === 'custom') {\n      let isActiveOther = this.periods.find(p => p.arrow);\n      return !isActiveOther;\n    };\n\n    period.arrow = sameStart && sameEnd;\n    return sameStart && sameEnd;\n  }\n\n  selectPeriod(period: CustomLabels): void {\n    this.selectedPeriod = period.value;\n\n    if (period.value !== 'custom') {\n      const [start, end] = period.value as Date[];\n      this.dateRangeSelected.emit({ start, end });\n    }\n  }\n\n  onTodayClick() {\n    this.currentDate = this.selectedDate = new Date();\n    this.generateCalendar();\n    this.selectDate(this.currentDate);\n    this.setTimePickerDate(this.currentDate);\n    this.cdr.detectChanges();\n  }\n\n  onOkClick() {\n    if (this.isRange) {\n      this.dateRangeSelected.emit({ start: this.selectedStartDate, end: this.selectedEndDate });\n      this.closeDatePicker()\n    } else {\n      this.dateSelected.emit(this.selectedDate);\n    }\n  }\n\n  // ========== Scroll Management ==========\n  scrollToSelectedItem(id: number | null = null): void {\n    if (!this.showSidebar) return;\n\n    if (this.timeoutId != null) {\n      clearTimeout(this.timeoutId);\n    }\n\n    const itemId = this.determineScrollItemId(id);\n    if (!itemId || !this.itemSelector) return;\n\n    this.timeoutId = setTimeout(() => {\n      const selectedElement = this.itemSelector.nativeElement.querySelector(`#selector_${itemId}`);\n      if (selectedElement) {\n        selectedElement.scrollIntoView({ behavior: 'smooth', block: 'center' });\n      }\n    }, 0);\n  }\n\n  determineScrollItemId(id: number | null): number | null {\n    if (id != null) return id;\n    if (!this.getDate) return null;\n\n    switch (this.viewMode) {\n      case 'days':\n        return this.dateAdapter.getMonth(this.getDate) + 1;\n      case 'months':\n        return this.dateAdapter.getYear(this.getDate);\n      case 'years':\n        const currentYear = this.dateAdapter.getYear(this.getDate);\n        const currentRange = this.yearRanges.find(range =>\n          range.start <= currentYear && range.end >= currentYear\n        );\n        return currentRange?.start || null;\n      default:\n        return null;\n    }\n  }\n\n  // ========== State Management ==========\n  handleChanges(changes: SimpleChanges): void {\n    if (changes['calendarType']) {\n      this.setDateAdapter();\n      this.weekDays = this.dateAdapter.getDayOfWeekNames('short');\n    }\n\n    if (changes['selectedDate'] ||\n        changes['selectedStartDate'] ||\n        changes['selectedEndDate'] ||\n        changes['mode'] ||\n        changes['calendarType']) {\n      this.setInitialDate();\n      this.generateCalendar();\n    }\n\n    if (changes['minDate'] || changes['maxDate']) {\n      this.adjustCurrentDateToValidRange();\n    }\n  }\n\n  setInitialDate(): void {\n    this.currentDate = this.determineInitialDate();\n    this.setViewMode();\n    this.adjustCurrentDateToValidRange();\n  }\n\n  determineInitialDate(): Date {\n    if (this.isRange) {\n      if (this.activeInput === 'start') {\n        return this.selectedStartDate || this.dateAdapter.today();\n      }\n      return this.selectedEndDate || this.selectedStartDate || this.dateAdapter.today();\n    }\n\n    return this.selectedDate || this.dateAdapter.today();\n  }\n\n  adjustCurrentDateToValidRange(): void {\n    let adjustedDate = this.currentDate;\n\n    if (this.minDate && this.dateAdapter.isBefore(adjustedDate, this.minDate)) {\n      adjustedDate = this.minDate;\n    } else if (this.maxDate && this.dateAdapter.isAfter(adjustedDate, this.maxDate)) {\n      adjustedDate = this.maxDate;\n    }\n\n    if (!this.dateAdapter.isSameDay(this.currentDate, adjustedDate)) {\n      this.currentDate = adjustedDate;\n      this.generateCalendar();\n    }\n  }\n}\n","import { Directive, Input, TemplateRef } from \"@angular/core\";\n\n@Directive({\n    selector: '[Template]',\n    standalone: true,\n    host: {}\n})\nexport class CustomTemplate {\n    @Input() type: string | undefined;\n\n    @Input('Template') name: string | undefined;\n\n    constructor(public template: TemplateRef<any>) {}\n\n    getType(): string {\n        return this.name!;\n    }\n}","import { Component, ElementRef, forwardRef, Input, OnInit, OnChanges, SimpleChanges, ViewChild, Output, EventEmitter, Renderer2, ChangeDetectorRef, Inject, AfterViewInit, ViewChildren, QueryList, NgZone, OnDestroy, ChangeDetectionStrategy, TemplateRef, ContentChildren } from '@angular/core';\nimport { ControlValueAccessor, NG_VALUE_ACCESSOR, FormBuilder, FormGroup, AbstractControl, ValidationErrors, ReactiveFormsModule, FormsModule } from '@angular/forms';\nimport { slideMotion } from './utils/animation/slide';\nimport { AsaDateAdapter, JalaliDateAdapter, GregorianDateAdapter } from './asa-date-adapter';\nimport { CustomLabels, DateRange, Lang_Locale, RangeInputLabels } from './utils/models';\nimport { DatePickerPopupComponent } from './date-picker-popup/date-picker-popup.component';\nimport { CdkOverlayOrigin, ConnectedOverlayPositionChange, ConnectionPositionPair, HorizontalConnectionPos, OverlayModule, VerticalConnectionPos } from '@angular/cdk/overlay';\nimport { DATE_PICKER_POSITION_MAP, DEFAULT_DATE_PICKER_POSITIONS, NzConnectedOverlayDirective } from './utils/overlay/overlay';\nimport { DOCUMENT, NgIf, NgTemplateOutlet } from '@angular/common';\nimport { DestroyService, AsaDatePickerService } from './asa-date-picker.service';\nimport { fromEvent, takeUntil } from 'rxjs';\nimport { CalendarType, DatepickerMode, Placement, RangePartType, ValueFormat } from './utils/types';\nimport { DateMaskDirective } from './utils/input-mask.directive';\nimport { CustomTemplate } from './utils/template.directive';\n\n@Component({\n  selector: 'asa-date-picker',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  standalone: true,\n  template: `\n    <div asaDatepickerStyles class=\"date-picker-wrapper\" [class.date-picker-rtl]=\"rtl\" [class.disabled]=\"disabled\" [formGroup]=\"form\">\n      <ng-container *ngIf=\"!isInline; else inlineMode\">\n        <ng-container *ngIf=\"!isRange; else rangeMode\">\n          <div class=\"input-container\" [class.rtl]>\n            <label for=\"dateInput\" *ngIf=\"inputLabel\">{{ inputLabel }}</label>\n            <input\n              #datePickerInput\n              type=\"text\"\n              formControlName=\"dateInput\"\n              [asa-dateMask]=\"format\"\n              [disableInputMask]=\"disableInputMask\"\n              (click)=\"toggleDatePicker(null,$event)\"\n              (focus)=\"onFocusInput(null,$event)\"\n              (blur)=\"onInputBlur(null,$event)\"\n              (keydown)=\"onInputKeydown($event)\"\n              [class.focus]=\"isOpen\"\n              [placeholder]=\"getPlaceholder()\"\n              [readonly]=\"readOnly || readOnlyInput\"\n              [attr.disabled]=\"disabled? 'disabled':null\"\n            >\n            <ng-container *ngTemplateOutlet=\"icon\"></ng-container>\n          </div>\n        </ng-container>\n        <ng-template #rangeMode>\n          <div *ngIf=\"rangeInputLabels\" class=\"range-input-labels\">\n            <div class=\"start-label\">\n              <label for=\"startDateInput\">{{ rangeInputLabels.start }}</label>\n            </div>\n            <div class=\"end-label\">\n              <label for=\"endDateInput\">{{ rangeInputLabels.end }}</label>\n            </div>\n          </div>\n          <div class=\"range-input-container\">\n            <input\n              #rangePickerInput\n              type=\"text\"\n              formControlName=\"startDateInput\"\n              [asa-dateMask]=\"format\"\n              [disableInputMask]=\"disableInputMask\"\n              (click)=\"toggleDatePicker('start',$event)\"\n              (focus)=\"onFocusInput('start',$event)\"\n              (focusout)=\"onFocusout($event)\"\n              (blur)=\"onInputBlur('start',$event)\"\n              (keydown)=\"onInputKeydown($event)\"\n              [class.focus]=\"isOpen && activeInput === 'start'\"\n              [placeholder]=\"getPlaceholder('start')\"\n              [readonly]=\"readOnly || readOnlyInput\"\n              [attr.disabled]=\"disabled? 'disabled':null\"\n            >\n            <span class=\"range-separator\">→</span>\n            <input\n              #rangePickerInput\n              type=\"text\"\n              formControlName=\"endDateInput\"\n              [asa-dateMask]=\"format\"\n              [disableInputMask]=\"disableInputMask\"\n              (click)=\"toggleDatePicker('end',$event)\"\n              (focus)=\"onFocusInput('end',$event)\"\n              (focusout)=\"onFocusout($event)\"\n              (blur)=\"onInputBlur('end',$event)\"\n              (keydown)=\"onInputKeydown($event)\"\n              [class.focus]=\"isOpen && activeInput === 'end'\"\n              [placeholder]=\"getPlaceholder('end')\"\n              [readonly]=\"readOnly || readOnlyInput\"\n              [attr.disabled]=\"disabled? 'disabled':null\"\n            >\n            <ng-container *ngTemplateOutlet=\"icon\"></ng-container>\n          </div>\n        </ng-template>\n        <ng-template #icon>\n            <button class=\"calendar-button\" (click)=\"toggleDatePicker(null, $event)\" tabindex=\"-1\">\n              <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"18px\" height=\"18px\" viewBox=\"0 0 24 24\" fill=\"#999\">\n                <path fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M6 2C6 1.44772 6.44772 1 7 1C7.55228 1 8 1.44772 8 2V3H16V2C16 1.44772 16.4477 1 17 1C17.5523 1 18 1.44772 18 2V3H19C20.6569 3 22 4.34315 22 6V20C22 21.6569 20.6569 23 19 23H5C3.34315 23 2 21.6569 2 20V6C2 4.34315 3.34315 3 5 3H6V2ZM16 5V6C16 6.55228 16.4477 7 17 7C17.5523 7 18 6.55228 18 6V5H19C19.5523 5 20 5.44772 20 6V9H4V6C4 5.44772 4.44772 5 5 5H6V6C6 6.55228 6.44772 7 7 7C7.55228 7 8 6.55228 8 6V5H16ZM4 11V20C4 20.5523 4.44772 21 5 21H19C19.5523 21 20 20.5523 20 20V11H4Z\" fill=\"#999\"/>\n              </svg>\n            </button>\n        </ng-template>\n      </ng-container>\n      <ng-template #inlineMode>\n        <div\n          class=\"dp-dropdown\"\n          [class.asa-picker-dropdown-rtl]=\"rtl\"\n          [class.asa-picker-dropdown-placement-bottomLeft]=\"currentPositionY === 'bottom' && currentPositionX === 'start'\"\n          [class.asa-picker-dropdown-placement-topLeft]=\"currentPositionY === 'top' && currentPositionX === 'start'\"\n          [class.asa-picker-dropdown-placement-bottomRight]=\"currentPositionY === 'bottom' && currentPositionX === 'end'\"\n          [class.asa-picker-dropdown-placement-topRight]=\"currentPositionY === 'top' && currentPositionX === 'end'\"\n          [class.asa-picker-dropdown-range]=\"isRange\"\n        >\n          <asa-date-picker-popup\n            [rtl]=\"rtl\"\n            [@slideMotion]=\"'enter'\"\n            [selectedDate]=\"selectedDate\"\n            [selectedStartDate]=\"selectedStartDate\"\n            [selectedEndDate]=\"selectedEndDate\"\n            [mode]=\"mode\"\n            [isRange]=\"isRange\"\n            [customLabels]=\"customLabels\"\n            [calendarType]=\"calendarType\"\n            [minDate]=\"minDate\"\n            [maxDate]=\"maxDate\"\n            [cssClass]=\"cssClass\"\n            [footerDescription]=\"footerDescription\"\n            [activeInput]=\"activeInput\"\n            [showSidebar]=\"showSidebar\"\n            [showToday]=\"showToday\"\n            [showTimePicker]=\"showTimePicker\"\n            [timeDisplayFormat]=\"timeDisplayFormat\"\n            [dateFormat]=\"extractDateFormat(format)\"\n            [disabledDates]=\"disabledDates\"\n            [disabledDatesFilter]=\"disabledDatesFilter\"\n            [disabledTimesFilter]=\"disabledTimesFilter\"\n            [templates]=\"templates\"\n            (dateSelected)=\"onDateSelected($event)\"\n            (dateRangeSelected)=\"onDateRangeSelected($event)\"\n            (closePicker)=\"close()\"\n            (clickInside)=\"focus()\"\n            tabindex=\"-1\"\n            [attr.disabled]=\"disabled? 'disabled':null\"\n          ></asa-date-picker-popup>\n        </div>\n      </ng-template>\n      <ng-template\n        cdkConnectedOverlay\n        nzConnectedOverlay\n        [cdkConnectedOverlayOrigin]=\"origin\"\n        [cdkConnectedOverlayOpen]=\"isOpen\"\n        [cdkConnectedOverlayPositions]=\"overlayPositions\"\n        [cdkConnectedOverlayTransformOriginOn]=\"'.asa-picker-wrapper'\"\n        [cdkConnectedOverlayHasBackdrop]=\"false\"\n        (positionChange)=\"onPositionChange($event)\"\n        (detach)=\"close()\"\n      >\n        <div\n          class=\"asa-picker-wrapper\"\n          [class.disabled]=\"disabled\"\n          [@slideMotion]=\"'enter'\"\n          style=\"position: relative;\"\n          (click)=\"$event.stopPropagation()\"\n        >\n          <ng-container *ngTemplateOutlet=\"inlineMode\"></ng-container>\n        </div>\n      </ng-template>\n    </div>\n  `,\n  styles: [`\n    :host.asa-datepicker ::ng-deep {\n      display: block;\n      max-width: fit-content;\n    }\n    .date-picker-wrapper {\n      position: relative;\n      max-width: fit-content;\n    }\n    input {\n      font-family: inherit;\n      max-width: 300px;\n      padding: 6px 10px;\n      border: 1px solid #d9d9d9;\n      border-radius: 4px;\n      font-size: 14px;\n      outline: none;\n      transition: all 0.3s;\n    }\n    input:hover {\n      border-color: #40a9ff;\n    }\n    input.focus {\n      border-color: #40a9ff;\n      box-shadow: 0 0 0 2px rgba(24,144,255,0.2);\n      outline: none;\n    }\n    .range-input-container {\n      display: flex;\n      align-items: center;\n      border: 1px solid #d9d9d9;\n      border-radius: 4px;\n      overflow: hidden;\n    }\n    .range-input-container input {\n      border: none;\n      flex: 1;\n      width: 50%;\n      padding: 6px 10px;\n      border-radius: 0;\n    }\n    .range-input-container input.focus {\n      border-bottom: 1px solid;\n      border-color: #40a9ff;\n      box-shadow: none !important;\n    }\n    .range-separator {\n      padding: 0 8px;\n      color: #999;\n    }\n    .calendar-button {\n      background: none;\n      border: none;\n      padding: 4px 4px 0;\n      cursor: pointer;\n      font-size: 16px;\n    }\n    .range-input-labels {\n      display: flex;\n      justify-content: space-between;\n      gap: 10px;\n      color: #444;\n      padding: 0px 5px 5px;\n    }\n    .end-label {\n      width: 49%;\n    }\n    .disabled {\n      opacity: 0.8;\n      pointer-events: none;\n    }\n    .disabled .range-input-container {\n      background: #f3f3f3;\n    }\n    .input-container .calendar-button {\n      position: absolute;\n      right: 0;\n      bottom: 5px;\n    }\n    .date-picker-rtl .input-container .calendar-button {\n      right: auto;\n      left: 0;\n    }\n    .input-container {\n      display: flex;\n      flex-direction: column;\n      gap: 3px;\n      color: #444\n    }\n    .input-container.rtl {\n      direction: rtl;\n    }\n    // rtl\n    :dir(rtl) .range-separator{\n      rotate: 180deg;\n    }\n  `],\n  host: {\n    \"[class.asa-datepicker]\": \"true\",\n    \"[class.asa-datepicker-rtl]\": \"rtl\"\n  },\n  imports: [\n    NgIf,\n    FormsModule,\n    ReactiveFormsModule,\n    OverlayModule,\n    NgTemplateOutlet,\n    NzConnectedOverlayDirective,\n    DateMaskDirective,\n    DatePickerPopupComponent\n  ],\n  providers: [\n    DestroyService,\n    AsaDatePickerService,\n    {\n      provide: NG_VALUE_ACCESSOR,\n      useExisting: forwardRef(() => AsaDatePickerComponent),\n      multi: true\n    }\n  ],\n  animations: [slideMotion]\n})\nexport class AsaDatePickerComponent implements ControlValueAccessor, OnInit, OnChanges, AfterViewInit, OnDestroy {\n  // ========== Input Properties ==========\n  @Input() rtl = false;\n  @Input() mode: DatepickerMode = 'day';\n  @Input() isRange = false;\n  @Input() customLabels: Array<CustomLabels>;\n  @Input() calendarType: CalendarType = 'gregorian';\n  @Input() lang: Lang_Locale;\n  @Input() cssClass = '';\n  @Input() footerDescription = '';\n  @Input() rangeInputLabels: RangeInputLabels;\n  @Input() inputLabel: string;\n  @Input() placement: Placement = 'bottomRight';\n  @Input() disabled = false;\n  @Input() isInline = false;\n  @Input() showSidebar = true;\n  @Input() showToday = false;\n  @Input() valueFormat: ValueFormat = 'gregorian';\n  @Input() disableInputMask = false;\n  @Input() disabledDates: Array<Date | string> = [];\n  @Input() disabledDatesFilter: (date: Date) => boolean;\n  @Input() disabledTimesFilter: (date: Date) => boolean;\n  @Input() allowEmpty = false;\n  @Input() readOnly = false;\n  @Input() readOnlyInput = false;\n  @Input() set minDate(date: Date | string | null) {\n    if (date) {\n      this._minDate = date;\n    }\n  };\n  get minDate() : Date {\n    return this._minDate\n  }\n\n  @Input() set maxDate(date: Date | string | null) {\n    if (date) {\n      this._maxDate = date;\n    }\n  };\n  get maxDate() : Date {\n    return this._maxDate\n  }\n\n  @Input() set format(value: string) {\n    this._format = value;\n    this.showTimePicker = this.hasTimeComponent(value);\n    this.timeDisplayFormat = this.extractTimeFormat(value);\n  }\n  get format(): string {\n    return this._format;\n  }\n\n  // ========== Output Properties ==========\n  @Output() onFocus = new EventEmitter<any>();\n  @Output() onBlur = new EventEmitter<any>();\n  @Output() onChangeValue = new EventEmitter<any>();\n  @Output() onOpenChange = new EventEmitter<boolean>();\n\n  // ========== ViewChild/ViewChildren/ContentChildren Properties ==========\n  @ViewChild('datePickerInput') datePickerInput: ElementRef;\n  @ViewChildren('rangePickerInput') rangePickerInputs?: QueryList<ElementRef<HTMLInputElement>>;\n  @ViewChild(DatePickerPopupComponent) datePickerPopup: DatePickerPopupComponent;\n  @ContentChildren(CustomTemplate) templates!: QueryList<CustomTemplate>;\n\n  // ========== Class Properties ==========\n  origin: CdkOverlayOrigin;\n  overlayPositions: ConnectionPositionPair[] = [...DEFAULT_DATE_PICKER_POSITIONS];\n  currentPositionX: HorizontalConnectionPos = 'start';\n  currentPositionY: VerticalConnectionPos = 'bottom';\n  document: Document;\n\n  isOpen = false;\n  selectedDate: Date | null = null;\n  selectedStartDate: Date | null = null;\n  selectedEndDate: Date | null = null;\n  form: FormGroup;\n  dateAdapter: AsaDateAdapter<Date>;\n  activeInput: 'start' | 'end' | '' = '';\n  hideStateHelper = false;\n  isInternalChange = false;\n  lastEmittedValue: any = null;\n  showTimePicker = false;\n  timeDisplayFormat = 'HH:mm';\n\n  documentClickListener: (event: MouseEvent) => void;\n  private _minDate: any;\n  private _maxDate: any;\n  private _format = 'yyyy/MM/dd';\n\n  get valueAdapter() {\n    return this.valueFormat == 'jalali'? this.jalali: this.gregorian;\n  }\n\n  constructor(\n    public fb: FormBuilder,\n    public elementRef: ElementRef,\n    public renderer: Renderer2,\n    public cdref: ChangeDetectorRef,\n    public dpService: AsaDatePickerService,\n    public destroy$: DestroyService,\n    public ngZone: NgZone,\n    public jalali: JalaliDateAdapter,\n    public gregorian: GregorianDateAdapter,\n    @Inject(DOCUMENT) doc: Document,\n  ) {\n    this.initializeComponent(doc);\n  }\n\n  // ========== Lifecycle Hooks ==========\n  ngOnInit(): void {\n    this.initialize();\n    document.addEventListener('click', this.documentClickListener);\n  }\n\n  ngOnChanges(changes: SimpleChanges): void {\n    this.handleChanges(changes);\n  }\n\n  ngAfterViewInit(): void {\n    this.setupAfterViewInit();\n    this._minDate = this.valueAdapter?.parse(this._minDate,this.extractDateFormat(this.format));\n    this._maxDate = this.valueAdapter?.parse(this._maxDate,this.extractDateFormat(this.format));\n  }\n\n  ngOnDestroy(): void {\n    this.destroy$.next();\n    this.destroy$.complete();\n    document.removeEventListener('click', this.documentClickListener);\n  }\n\n  // ========== Initialization Methods ==========\n  initializeComponent(doc: Document): void {\n    this.origin = new CdkOverlayOrigin(this.elementRef);\n    this.document = doc;\n    this.form = this.fb.group({\n      dateInput: [''],\n      startDateInput: [''],\n      endDateInput: ['']\n    });\n    this.documentClickListener = this.handleDocumentClick.bind(this);\n    this.lang = this.calendarType === 'jalali' ? this.dpService.locale_fa  : this.dpService.locale_en;\n    this.dpService.locale = this.lang;\n  }\n\n  initialize(): void {\n    this.setDateAdapter();\n    this.setupFormControls();\n  }\n\n  setupAfterViewInit(): void {\n    this.setupActiveInputSubscription();\n    this.setupMouseDownEventHandler();\n  }\n\n  // ========== Date Adapter Methods ==========\n  setDateAdapter(): void {\n    this.dateAdapter = this.calendarType === 'jalali' ? this.jalali : this.gregorian;\n  }\n\n  // ========== Form Control Methods ==========\n  setupFormControls(): void {\n    if (this.isRange) {\n      this.form.get('startDateInput')?.valueChanges.pipe(takeUntil(this.destroy$)).subscribe(value => this.onInputChange(value, 'start'));\n      this.form.get('endDateInput')?.valueChanges.pipe(takeUntil(this.destroy$)).subscribe(value => this.onInputChange(value, 'end'));\n    } else {\n      this.form.get('dateInput')?.valueChanges.pipe(takeUntil(this.destroy$)).subscribe(value => this.onInputChange(value));\n    }\n  }\n\n  // ========== Event Handlers ==========\n  handleChanges(changes: SimpleChanges): void {\n    if (changes['calendarType']) {\n      this.setDateAdapter();\n      this.updateInputValue();\n      this.lang = this.calendarType === 'jalali' ? this.dpService.locale_fa : this.dpService.locale_en;\n      this.dpService.locale = this.lang;\n    }\n    if (changes['minDate'] || changes['maxDate']) {\n      this._minDate = this.valueAdapter?.parse(this._minDate,this.extractDateFormat(this.format));\n      this._maxDate = this.valueAdapter?.parse(this._maxDate,this.extractDateFormat(this.format));\n      this.form.updateValueAndValidity();\n    }\n    if (changes['mode'] || changes['isRange']) {\n      this.setupFormControls();\n    }\n    if (changes['placement']) {\n      this.setPlacement(this.placement);\n    }\n    if (changes['lang']) {\n      this.lang = changes['lang'].currentValue;\n      this.dpService.locale = this.lang;\n    }\n    if (changes['mode'] && !changes['format']) {\n      this.format = this.getFormatForMode();\n    }\n    if (changes['isRange'] && this.isRange ==  false) {\n      this.origin = new CdkOverlayOrigin(this.elementRef);\n    }\n    if (changes['valueFormat']) {\n      this.emitValueIfChanged();\n    }\n  }\n\n  handleDocumentClick(event: MouseEvent): void {\n    if (!this.elementRef.nativeElement.contains(event.target)) {\n      if (this.isOpen) {\n        this.close();\n        this.onInputBlur(this.activeInput as any, event as any);\n      }\n      this.hideStateHelper = false;\n    }\n  }\n\n  // ========== Input Handling Methods ==========\n  onInputChange(value: string, inputType?: 'start' | 'end'): void {\n    if (!this.isInternalChange) {\n      if (this.isRange) {\n        this.handleRangeInputChange(value, inputType);\n      } else {\n        this.handleSingleInputChange(value);\n      }\n      this.updateDatePickerPopup();\n    }\n  }\n\n  handleRangeInputChange(value: string, inputType?: 'start' | 'end'): void {\n    const date = this.dateAdapter.parse(value, this.format);\n    if (date) {\n      if (inputType === 'start') {\n        this.selectedStartDate = this.clampDate(date);\n      } else if (inputType === 'end') {\n        this.selectedEndDate = this.clampDate(date);\n      }\n      this.emitValueIfChanged();\n    }\n  }\n\n  handleSingleInputChange(value: string): void {\n    const date = this.dateAdapter.parse(value, this.format);\n    if (date) {\n      this.selectedDate = this.clampDate(date);\n      this.emitValueIfChanged();\n    }\n  }\n\n  // ========== Value Emission Methods ==========\n  emitValueIfChanged(): void {\n    const newValue = this.prepareValueForEmission();\n    if (newValue && JSON.stringify(newValue) !== JSON.stringify(this.lastEmittedValue)) {\n      this.lastEmittedValue = newValue;\n      this.onChange(newValue);\n      this.onChangeValue.emit(newValue);\n    }\n  }\n\n  prepareValueForEmission(): any {\n    if (this.isRange) {\n      if (this.selectedStartDate && this.selectedEndDate) {\n        return {\n          start: this.convertDateToFormat(this.selectedStartDate, this.calendarType),\n          end: this.convertDateToFormat(this.selectedEndDate, this.calendarType)\n        };\n      }\n    } else if (this.selectedDate) {\n      return this.convertDateToFormat(this.selectedDate, this.calendarType);\n    }\n    return null;\n  }\n\n  // ========== Date Selection Methods ==========\n  onDateSelected(date: Date): void {\n    const clampedDate = this.clampDate(date);\n    if (this.isRange) {\n      this.handleRangeDateSelection(clampedDate);\n    } else {\n      this.handleSingleDateSelection(clampedDate);\n    }\n    this.hideStateHelper = true;\n    this.updateDatePickerPopup();\n    this.focus();\n  }\n\n  handleRangeDateSelection(date: Date): void {\n    if (!this.selectedStartDate || (this.selectedStartDate && this.selectedEndDate) ||\n      this.dateAdapter.isBefore(date, this.selectedStartDate)) {\n      this.selectedStartDate = date;\n      this.selectedEndDate = null;\n      this.form.get('startDateInput')?.setValue(this.dateAdapter.format(date, this.format), { emitEvent: false });\n      this.form.get('endDateInput')?.setValue('', { emitEvent: false });\n    } else {\n      this.selectedEndDate = date;\n      this.form.get('endDateInput')?.setValue(this.dateAdapter.format(date, this.format), { emitEvent: false });\n      this.emitValueIfChanged();\n      this.close();\n    }\n  }\n\n  handleSingleDateSelection(date: Date): void {\n    this.selectedDate = date;\n    const formattedDate = this.dateAdapter.format(date, this.format);\n    this.form.get('dateInput')?.setValue(formattedDate, { emitEvent: false });\n    this.emitValueIfChanged();\n    this.close();\n  }\n\n  // ========== Date Range Methods ==========\n  onDateRangeSelected(dateRange: DateRange): void {\n    this.hideStateHelper = true;\n\n    this.selectedStartDate = this.clampDate(<Date>dateRange.start);\n    const startFormatted = this.dateAdapter.format(this.selectedStartDate, this.format);\n    this.form.get('startDateInput')?.setValue(startFormatted, { emitEvent: false });\n\n    if (dateRange.end) {\n      this.selectedEndDate = this.clampDate(<Date>dateRange.end);\n      const endFormatted = this.dateAdapter.format(this.selectedEndDate, this.format);\n      this.form.get('endDateInput')?.setValue(endFormatted, { emitEvent: false });\n      this.emitValueIfChanged();\n      if (!this.hasTimeComponent(this.format)) this.close();\n      this.updateDatePickerPopup();\n      this.focus();\n    }\n  }\n\n  // ========== UI State Methods ==========\n  close(): void {\n    if (this.isInline) {\n      return;\n    }\n    if (this.isOpen) {\n      this.isOpen = false;\n      this.onOpenChange.emit(false);\n      this.cdref.markForCheck();\n    }\n  }\n\n  open(): void {\n    if (this.isInline || this.isOpen || this.disabled || this.readOnly) {\n      return;\n    }\n    this.isOpen = true;\n    this.onOpenChange.emit(true);\n    this.focus();\n    this.cdref.markForCheck();\n  }\n\n  focus(): void {\n    const activeInputElement = this.getInput(this.activeInput);\n    if (this.document.activeElement !== activeInputElement) {\n      activeInputElement?.focus();\n      const length = activeInputElement?.value?.length;\n      activeInputElement?.setSelectionRange(length, length);\n    }\n  }\n\n  // ========== UI Helper Methods ==========\n  getInput(partType?: RangePartType): HTMLInputElement | undefined {\n    if (this.isInline) {\n      return undefined;\n    }\n    return this.isRange\n      ? partType === 'start'\n        ? this.rangePickerInputs?.first.nativeElement\n        : this.rangePickerInputs?.last.nativeElement\n      : this.datePickerInput?.nativeElement;\n  }\n\n  getPlaceholder(inputType: string = null): string {\n    if (inputType === 'start') return this.lang.startDate;\n    if (inputType === 'end') return this.lang.endDate;\n\n    switch (this.mode) {\n      case 'month': return this.lang.selectMonth;\n      case 'year': return this.lang.selectYear;\n      default: return this.lang.selectDate;\n    }\n  }\n\n  // ========== Date Validation Methods ==========\n  clampDate(date: Date): Date {\n    if (!date) return date;\n\n    let adjustedDate = this.dateAdapter.clone(date);\n\n    if (this.minDate && this.dateAdapter.isBefore(adjustedDate, this.minDate)) {\n      return this.minDate;\n    }\n    if (this.maxDate && this.dateAdapter.isAfter(adjustedDate, this.maxDate)) {\n      return this.maxDate;\n    }\n\n    if (this.isDateDisabled(adjustedDate)) {\n      // Find the nearest enabled date\n      adjustedDate = this.findNearestValidDate(adjustedDate);\n    }\n\n    // Preserve the original time if format includes time\n    adjustedDate = this.clampDateTime(adjustedDate, date);\n\n    return adjustedDate;\n  }\n\n  clampDateTime(adjustedDate: Date, date: Date) {\n    if (this.hasTimeComponent(this.format)) {\n      adjustedDate.setHours(date.getHours());\n      adjustedDate.setMinutes(date.getMinutes());\n      adjustedDate.setSeconds(date.getSeconds());\n      let { normalizedDate } = this.validateAndNormalizeTime(adjustedDate);\n      adjustedDate = normalizedDate;\n    }\n    return adjustedDate;\n  }\n\n  findNearestValidDate(date: Date) {\n    let nextDate = this.dateAdapter.addDays(date, 1);\n    let prevDate = this.dateAdapter.addDays(date, -1);\n\n    while (this.isDateDisabled(nextDate) && this.isDateDisabled(prevDate)) {\n      nextDate = this.dateAdapter.addDays(nextDate, 1);\n      prevDate = this.dateAdapter.addDays(prevDate, -1);\n    }\n\n    // Return the first non-disabled date found\n    if (!this.isDateDisabled(nextDate)) {\n      date = nextDate;\n    } else if (!this.isDateDisabled(prevDate)) {\n      date = prevDate;\n    }\n    return date;\n  }\n\n  validateAndNormalizeTime(date: Date): { isValid: boolean; normalizedDate: Date | null } {\n    if (!this.dateAdapter) {\n      return { isValid: false, normalizedDate: null };\n    }\n\n    let isValid = true;\n    let normalizedDate = this.dateAdapter.clone(date);\n\n    if (this.isTimeDisabled(normalizedDate)) {\n      isValid = false;\n\n      // Get start and end of the current day\n      const startOfDay = this.dateAdapter.clone(date);\n      startOfDay.setHours(0, 0, 0, 0);\n      const endOfDay = this.dateAdapter.clone(date);\n      endOfDay.setHours(23, 59, 59, 999);\n\n      // Try to find nearest valid time within the same day\n      const currentMinutes = date.getHours() * 60 + date.getMinutes();\n      const maxForwardMinutes = (24 * 60) - currentMinutes;\n      let validTimeFound = false;\n\n      // Check forward\n      for (let i = 1; i <= maxForwardMinutes; i++) {\n        const nextTime = this.dateAdapter.clone(date);\n        nextTime.setHours(Math.floor((currentMinutes + i) / 60), (currentMinutes + i) % 60, 0);\n        if (nextTime.getTime() <= endOfDay.getTime() && !this.isTimeDisabled(nextTime)) {\n          normalizedDate = nextTime;\n          validTimeFound = true;\n          break;\n        }\n      }\n\n      // Check backward\n      if (!validTimeFound)\n        for (let i = 1; i < currentMinutes; i++) {\n          const prevTime = this.dateAdapter.clone(date);\n          prevTime.setHours(Math.floor((currentMinutes - i) / 60), (currentMinutes - i) % 60, 0);\n          if (prevTime.getTime() >= startOfDay.getTime() && !this.isTimeDisabled(prevTime)) {\n            normalizedDate = prevTime;\n            break;\n          }\n        }\n\n      // If no valid time found in the current day, set to start of day\n      if (this.isTimeDisabled(normalizedDate)) {\n        normalizedDate = startOfDay;\n      }\n    }\n\n    return { isValid: isValid, normalizedDate };\n  }\n\n  parseDisabledDates(): Date[] {\n    return this.disabledDates.map(date => {\n      if (date instanceof Date) {\n        return this.dateAdapter.startOfDay(date);\n      }\n      const parsedDate = this.dateAdapter.parse(date, this.extractDateFormat(this.format));\n      return parsedDate || null;\n    }).filter(date => date !== null) as Date[];\n  }\n\n  isDateDisabled(date: Date): boolean {\n    if (!date) return false;\n\n    const dateToCheck = this.dateAdapter.startOfDay(date);\n    // Check if date is in disabled dates array\n    const parsedDisabledDates = this.parseDisabledDates();\n    const isDisabledDate = parsedDisabledDates.some(disabledDate =>\n      this.dateAdapter.isSameDay(dateToCheck, disabledDate)\n    );\n\n    // Check custom filter function if provided\n    const isFilterDisabled = this.disabledDatesFilter ?\n      this.disabledDatesFilter(dateToCheck) :\n      false;\n\n    return isDisabledDate || isFilterDisabled;\n  }\n\n  isTimeDisabled(date: Date) {\n    return this.disabledTimesFilter ? this.disabledTimesFilter(date) : false;\n  }\n\n  // ========== Date Validation Methods (continued) ==========\n  dateFormatValidator(control: AbstractControl): ValidationErrors | null {\n    const value = control.value;\n    if (!value) return null;\n\n    const format = this.getFormatForMode();\n    if (!this.dateAdapter.isValidFormat(value, format)) {\n      return { invalidFormat: true };\n    }\n    return null;\n  }\n\n  getFormatForMode(): string {\n    switch (this.mode) {\n      case 'year':\n        return 'yyyy';\n      case 'month':\n        return 'yyyy/MM';\n      default:\n        return this.format;\n    }\n  }\n\n  // ========== Overlay Position Methods ==========\n  setPlacement(placement: Placement): void {\n    const position: ConnectionPositionPair = DATE_PICKER_POSITION_MAP[placement];\n    this.overlayPositions = [position, ...DEFAULT_DATE_PICKER_POSITIONS];\n    this.currentPositionX = position.originX;\n    this.currentPositionY = position.originY;\n  }\n\n  onPositionChange(position: ConnectedOverlayPositionChange): void {\n    if (this.currentPositionX !== position.connectionPair.originX ||\n        this.currentPositionY !== position.connectionPair.originY)\n    {\n      this.currentPositionX = position.connectionPair.originX;\n      this.currentPositionY = position.connectionPair.originY;\n      this.cdref.markForCheck();\n    }\n  }\n\n  // ========== Input Event Handlers ==========\n  onFocusout(event: FocusEvent): void {\n    event.preventDefault();\n    this.onTouch();\n    if (\n      !this.elementRef.nativeElement.contains(event.relatedTarget as Node) &&\n      !this.datePickerPopup?.el.nativeElement.contains(event.relatedTarget as Node)\n    ) {\n      this.close();\n    }\n  }\n\n  onInputBlur(inputType: 'start' | 'end' | null, event: Event): void {\n    const inputValue = this.getInputValue(inputType);\n\n    if (typeof inputValue === 'string' && !this.isOpen) {\n      const correctedValue = this.validateAndCorrectInput(inputValue);\n      if (correctedValue !== inputValue) {\n        if (inputValue) {\n          this.handleCorrectedValue(inputType, correctedValue);\n        } else if (!this.allowEmpty) {\n          this.handleCorrectedValue(inputType, correctedValue);\n        } else {\n          this.selectedDate = null;\n          this.onChange(inputValue);\n        }\n      }\n      this.onBlur.emit({\n        input: inputType,\n        event,\n        value: correctedValue\n      });\n    }\n  }\n\n  getInputValue(inputType: 'start' | 'end' | null): string | undefined {\n    if (this.isRange) {\n      return inputType === 'start'\n        ? this.form.get('startDateInput')?.value\n        : this.form.get('endDateInput')?.value;\n    }\n    return this.form.get('dateInput')?.value;\n  }\n\n  validateAndCorrectInput(value: string): string {\n    let date = this.dateAdapter.parse(value, this.format);\n    if (!date) {\n      const today = this.dateAdapter.today();\n      date = this.clampDate(today);\n    } else {\n      date = this.clampDate(date);\n    }\n    return this.dateAdapter.format(date, this.format);\n  }\n\n  handleCorrectedValue(inputType: 'start' | 'end' | null, correctedValue: string): void {\n    this.isInternalChange = true;\n    if (this.isRange) {\n      this.handleRangeCorrectedValue(inputType, correctedValue);\n    } else {\n      this.handleSingleCorrectedValue(correctedValue);\n    }\n    this.isInternalChange = false;\n  }\n\n  handleRangeCorrectedValue(inputType: 'start' | 'end' | null, correctedValue: string): void {\n    if (inputType === 'start') {\n      this.form.get('startDateInput')?.setValue(correctedValue);\n      this.selectedStartDate = this.dateAdapter.parse(correctedValue, this.format);\n    } else {\n      this.form.get('endDateInput')?.setValue(correctedValue);\n      this.selectedEndDate = this.dateAdapter.parse(correctedValue, this.format);\n    }\n\n    if (this.selectedStartDate && this.selectedEndDate) {\n      this.onChange({\n        start: this.dateAdapter.format(this.selectedStartDate, this.format),\n        end: this.dateAdapter.format(this.selectedEndDate, this.format)\n      });\n    }\n\n    if (this.datePickerPopup) {\n      this.datePickerPopup.selectedStartDate = this.selectedStartDate;\n      this.datePickerPopup.selectedEndDate = this.selectedEndDate;\n      this.datePickerPopup.generateCalendar();\n    }\n  }\n\n  handleSingleCorrectedValue(correctedValue: string): void {\n    this.form.get('dateInput')?.setValue(correctedValue);\n    this.selectedDate = this.dateAdapter.parse(correctedValue, this.format);\n    this.onChange(this.selectedDate);\n\n    if (this.datePickerPopup) {\n      this.datePickerPopup.selectedDate = this.selectedDate;\n    }\n  }\n\n  onFocusInput(inputType: 'start' | 'end' | null, event: Event): void {\n    if (this.hideStateHelper == false){\n      this.toggleDatePicker(inputType, event);\n      this.hideStateHelper = true\n    } else {\n      this.hideStateHelper = false;\n    }\n  }\n\n  toggleDatePicker(inputType: 'start' | 'end' | null, event: Event): void {\n    this.onFocus.emit({\n      input: inputType,\n      event\n    });\n    this.activeInput = inputType;\n    this.dpService.activeInput$.next(this.activeInput);\n    this.open();\n    this.cdref.detectChanges();\n  }\n\n  onInputKeydown(event: KeyboardEvent): void {\n    if ((!event.shiftKey && event.key === 'Tab') || (!event.shiftKey && event.key === 'Enter')) {\n      if (this.isRange) {\n        return;\n      }\n      this.close();\n    }\n  }\n\n  // ========== Update Methods ==========\n  updateInputValue(): void {\n    if (this.isRange) {\n      if (this.selectedStartDate) {\n        this.form.get('startDateInput')?.setValue(\n          this.dateAdapter.format(this.selectedStartDate, this.format)\n        );\n      }\n      if (this.selectedEndDate) {\n        this.form.get('endDateInput')?.setValue(\n          this.dateAdapter.format(this.selectedEndDate, this.format)\n        );\n      }\n    } else if (this.selectedDate) {\n      this.form.get('dateInput')?.setValue(\n        this.dateAdapter.format(this.selectedDate, this.format)\n      );\n    }\n  }\n\n  updateDatePickerPopup(): void {\n    if (this.datePickerPopup) {\n      if (this.isRange) {\n        this.datePickerPopup.selectedStartDate = this.selectedStartDate;\n        this.datePickerPopup.selectedEndDate = this.selectedEndDate;\n        if (this.showTimePicker){\n          this.datePickerPopup.timePicker.updateFromDate(\n            this.activeInput == 'start'?\n            this.selectedStartDate:\n            this.selectedEndDate\n          );\n          this.datePickerPopup.timePicker.scrollToTime()\n        }\n      } else {\n        this.datePickerPopup.selectedDate = this.selectedDate;\n        if (this.showTimePicker){\n          this.datePickerPopup.timePicker.updateFromDate(this.selectedDate);\n          this.datePickerPopup.timePicker.scrollToTime();\n        }\n      }\n      this.datePickerPopup.generateCalendar();\n      this.cdref.detectChanges();\n    }\n  }\n\n  convertDateToFormat(date: Date, fromType: CalendarType): any {\n    if (!date) return null;\n\n    switch (this.valueFormat) {\n      case 'date':\n        return date;\n      case 'jalali':\n        return this.jalali.format(date, this.format);\n      case 'gregorian':\n        return this.gregorian.format(date, this.format);\n      default:\n        return this.dateAdapter.format(date, this.format);\n    }\n  }\n\n  // ========== ControlValueAccessor Implementation ==========\n  onChange: any = () => {};\n  onTouch: any = () => {};\n\n  writeValue(value: any): void {\n    if (value) {\n      this.isInternalChange = true;\n\n      if (this.isRange && typeof value === 'object') {\n        const startDate = this.parseIncomingValue(value.start);\n        const endDate = this.parseIncomingValue(value.end);\n\n        if (startDate) {\n          this.selectedStartDate = startDate;\n          this.form.get('startDateInput')?.setValue(\n            this.dateAdapter.format(startDate, this.format),\n            { emitEvent: false }\n          );\n        }\n\n        if (endDate) {\n          this.selectedEndDate = endDate;\n          this.form.get('endDateInput')?.setValue(\n            this.dateAdapter.format(endDate, this.format),\n            { emitEvent: false }\n          );\n        }\n      } else {\n        const parsedDate = this.parseIncomingValue(value);\n        if (parsedDate) {\n          this.selectedDate = parsedDate;\n          this.form.get('dateInput')?.setValue(\n            this.dateAdapter.format(parsedDate, this.format),\n            { emitEvent: false }\n          );\n        }\n      }\n\n      this.lastEmittedValue = value;\n      this.isInternalChange = false;\n      this.updateDatePickerPopup();\n\n      this.cdref.markForCheck();\n    } else {\n      this.resetValues();\n    }\n  }\n\n  resetValues(): void {\n    this.isInternalChange = true;\n    this.selectedDate = null;\n    this.selectedStartDate = null;\n    this.selectedEndDate = null;\n    this.form.get('dateInput')?.setValue('', { emitEvent: false });\n    this.form.get('startDateInput')?.setValue('', { emitEvent: false });\n    this.form.get('endDateInput')?.setValue('', { emitEvent: false });\n    this.lastEmittedValue = null;\n    this.isInternalChange = false;\n    this.updateDatePickerPopup();\n  }\n\n  registerOnChange(fn: any): void {\n    this.onChange = fn;\n  }\n\n  registerOnTouched(fn: any): void {\n    this.onTouch = fn;\n  }\n\n  // ========== Setup Methods ==========\n  setupActiveInputSubscription(): void {\n    this.dpService.activeInput$\n      .pipe(takeUntil(this.destroy$))\n      .subscribe((active: any) => {\n        this.activeInput = active;\n        if (active) {\n          if (!this.isOpen)\n            this.origin = new CdkOverlayOrigin(this.activeInput == 'start'? this.rangePickerInputs?.first: this.rangePickerInputs.last)\n          this.focus();\n        }\n      });\n  }\n\n  setupMouseDownEventHandler(): void {\n    this.ngZone.runOutsideAngular(() =>\n      fromEvent(this.elementRef.nativeElement, 'mousedown')\n        .pipe(takeUntil(this.destroy$))\n        .subscribe((event: any) => {\n          if ((event.target as HTMLInputElement).tagName.toLowerCase() !== 'input') {\n            event.preventDefault();\n          }\n        })\n    );\n  }\n\n  parseDateValue(value: any): Date | null {\n    if (value instanceof Date) {\n      return value;\n    }\n    return this.dateAdapter.parse(value, this.format);\n  }\n\n  parseValueFromFormat(value: string | Date, targetAdapter: AsaDateAdapter<Date>): Date | null {\n    if (!value) return null;\n    if (value instanceof Date) return value;\n\n    return targetAdapter.parse(value, this.format);\n  }\n\n  parseIncomingValue(value: any): Date | null {\n    if (!value) return null;\n    if (value instanceof Date) return value;\n    let parsedDate: Date | null = null;\n\n    // try with value adapter\n    parsedDate = this.valueAdapter.parse(value, this.format);\n    if (parsedDate) return parsedDate;\n\n    return null;\n  }\n\n  // ========== Time Methods ==========\n  hasTimeComponent(format: string): boolean {\n    return /[Hh]|[m]|[s]|[a]/g.test(format);\n  }\n\n  extractTimeFormat(format: string): string {\n    const timeMatch = format.match(/[Hh]{1,2}:mm(?::ss)?(?:\\s*[aA])?/);\n    return timeMatch ? timeMatch[0] : 'HH:mm';\n  }\n\n  extractDateFormat(format: string): string {\n    const dateFormatMatch = format.match(/[yMd\\/.-]+/);\n    return dateFormatMatch ? dateFormatMatch[0] : '';\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { AsaDatePickerComponent } from './asa-date-picker.component';\nimport { DatePickerPopupComponent } from './date-picker-popup/date-picker-popup.component';\nimport { DateMaskDirective } from './utils/input-mask.directive';\nimport { NzConnectedOverlayDirective } from './public-api';\nimport { TimePickerComponent } from './time-picker/time-picker.component';\nimport { CustomTemplate } from './utils/template.directive';\n\n@NgModule({\n  imports: [\n    AsaDatePickerComponent,\n    DatePickerPopupComponent,\n    DateMaskDirective,\n    NzConnectedOverlayDirective,\n    TimePickerComponent,\n    CustomTemplate\n  ],\n  exports: [\n    AsaDatePickerComponent,\n    TimePickerComponent,\n    DatePickerPopupComponent,\n    DateMaskDirective,\n    NzConnectedOverlayDirective,\n    CustomTemplate\n  ]\n})\nexport class AsaDatePickerModule { }\n","/*\n * Public API Surface of asa-date-picker\n */\n\n// Modules\nexport * from './asa-date-picker.module';\n\n// Components\nexport * from './asa-date-picker.component';\nexport * from './time-picker/time-picker.component';\nexport * from './date-picker-popup/date-picker-popup.component';\n\n// Models and Utils\nexport * from './utils/models';\nexport * from './utils/overlay/overlay';\nexport * from './utils/animation/slide';\nexport * from './utils/input-mask.directive';\nexport * from './utils/template.directive';\n\n// Services\nexport * from './asa-date-picker.service';\n\n// Adapters\nexport * from './asa-date-adapter';\n\n// Types\nexport * from './utils/types';\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './public-api';\n"],"names":["i1.lang_Fa","i1.lang_En","i2.DestroyService","isValidJalali","parseJalali","formatJalali","addDaysJalali","addMonthsJalali","addYearsJalali","addHoursJalali","startOfWeekJalali","endOfMonthJalali","isSameDayJalali","isSameMonthJalali","isSameYearJalali","isAfterJalali","isBeforeJalali","startOfMonthJalali","maxJalali","setYearJalali","getDaysInMonthJalali","isValidGregorian","parseGregorian","formatGregorian","addDaysGregorian","addMonthsGregorian","addYearsGregorian","addHoursGregorian","startOfWeekGregorian","isSameDayGregorian","isSameMonthGregorian","isSameYearGregorian","isAfterGregorian","isBeforeGregorian","startOfMonthGregorian","endOfMonthGregorian","maxGregorian","setYearGregorian","getDaysInMonthGregorian","i1","i2.AsaDatePickerService","i3.JalaliDateAdapter","i3.GregorianDateAdapter","i4","takeUntil","i1.AsaDatePickerService","i2.JalaliDateAdapter","i2.GregorianDateAdapter","i1.DestroyService"],"mappings":"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"}},"fesm2015":{"code":"import * as i0 from '@angular/core';\nimport { Injectable, ElementRef, Directive, Input, HostListener, EventEmitter, forwardRef, Component, ChangeDetectionStrategy, Output, ViewChild, Inject, ViewChildren, ContentChildren, NgModule } from '@angular/core';\nimport * as i1$1 from '@angular/forms';\nimport { NG_VALUE_ACCESSOR, ReactiveFormsModule, FormsModule } from '@angular/forms';\nimport { trigger, state, style, transition, animate } from '@angular/animations';\nimport { __decorate, __awaiter } from 'tslib';\nimport * as i1 from '@angular/cdk/overlay';\nimport { CdkOverlayOrigin, ConnectionPositionPair, OverlayModule } from '@angular/cdk/overlay';\nimport { BehaviorSubject, Subject, takeUntil as takeUntil$1, fromEvent } from 'rxjs';\nimport { coerceBooleanProperty } from '@angular/cdk/coercion';\nimport { takeUntil } from 'rxjs/operators';\nimport { NgIf, NgFor, NgTemplateOutlet, DOCUMENT } from '@angular/common';\nimport { isValid, parse, format, addDays, addMonths, addYears, addHours, startOfWeek, endOfMonth, isSameDay, isSameMonth, isSameYear, isAfter, isBefore, startOfMonth, max, setYear, getDaysInMonth } from 'date-fns-jalali';\nimport { parseISO, isEqual, startOfDay, addMinutes, isValid as isValid$1, parse as parse$1, format as format$1, addDays as addDays$1, addMonths as addMonths$1, addYears as addYears$1, addHours as addHours$1, startOfWeek as startOfWeek$1, isSameDay as isSameDay$1, isSameMonth as isSameMonth$1, isSameYear as isSameYear$1, isAfter as isAfter$1, isBefore as isBefore$1, startOfMonth as startOfMonth$1, endOfMonth as endOfMonth$1, max as max$1, setYear as setYear$1, getDaysInMonth as getDaysInMonth$1 } from 'date-fns';\n\n/**\r\n * Use of this source code is governed by an MIT-style license that can be\r\n * found in the LICENSE file at https://github.com/NG-ZORRO/../blob/master/LICENSE\r\n */\r\nclass AnimationDuration {\r\n}\r\nAnimationDuration.SLOW = '0.3s'; // Modal\r\nAnimationDuration.BASE = '0.2s';\r\nAnimationDuration.FAST = '0.1s'; // Tooltip\r\nclass AnimationCurves {\r\n}\r\nAnimationCurves.EASE_BASE_OUT = 'cubic-bezier(0.7, 0.3, 0.1, 1)';\r\nAnimationCurves.EASE_BASE_IN = 'cubic-bezier(0.9, 0, 0.3, 0.7)';\r\nAnimationCurves.EASE_OUT = 'cubic-bezier(0.215, 0.61, 0.355, 1)';\r\nAnimationCurves.EASE_IN = 'cubic-bezier(0.55, 0.055, 0.675, 0.19)';\r\nAnimationCurves.EASE_IN_OUT = 'cubic-bezier(0.645, 0.045, 0.355, 1)';\r\nAnimationCurves.EASE_OUT_BACK = 'cubic-bezier(0.12, 0.4, 0.29, 1.46)';\r\nAnimationCurves.EASE_IN_BACK = 'cubic-bezier(0.71, -0.46, 0.88, 0.6)';\r\nAnimationCurves.EASE_IN_OUT_BACK = 'cubic-bezier(0.71, -0.46, 0.29, 1.46)';\r\nAnimationCurves.EASE_OUT_CIRC = 'cubic-bezier(0.08, 0.82, 0.17, 1)';\r\nAnimationCurves.EASE_IN_CIRC = 'cubic-bezier(0.6, 0.04, 0.98, 0.34)';\r\nAnimationCurves.EASE_IN_OUT_CIRC = 'cubic-bezier(0.78, 0.14, 0.15, 0.86)';\r\nAnimationCurves.EASE_OUT_QUINT = 'cubic-bezier(0.23, 1, 0.32, 1)';\r\nAnimationCurves.EASE_IN_QUINT = 'cubic-bezier(0.755, 0.05, 0.855, 0.06)';\r\nAnimationCurves.EASE_IN_OUT_QUINT = 'cubic-bezier(0.86, 0, 0.07, 1)';\n\n/**\r\n * Use of this source code is governed by an MIT-style license that can be\r\n * found in the LICENSE file at https://github.com/NG-ZORRO/../blob/master/LICENSE\r\n */\r\nconst ANIMATION_TRANSITION_IN = `${AnimationDuration.BASE} ${AnimationCurves.EASE_OUT_QUINT}`;\r\nconst ANIMATION_TRANSITION_OUT = `${AnimationDuration.BASE} ${AnimationCurves.EASE_IN_QUINT}`;\r\nconst slideMotion = trigger('slideMotion', [\r\n    state('void', style({\r\n        opacity: 0,\r\n        transform: 'scaleY(0.8)'\r\n    })),\r\n    state('enter', style({\r\n        opacity: 1,\r\n        transform: 'scaleY(1)'\r\n    })),\r\n    transition('void => *', [animate(ANIMATION_TRANSITION_IN)]),\r\n    transition('* => void', [animate(ANIMATION_TRANSITION_OUT)])\r\n]);\r\nconst slideAlertMotion = trigger('slideAlertMotion', [\r\n    transition(':leave', [\r\n        style({ opacity: 1, transform: 'scaleY(1)', transformOrigin: '0% 0%' }),\r\n        animate(`${AnimationDuration.SLOW} ${AnimationCurves.EASE_IN_OUT_CIRC}`, style({\r\n            opacity: 0,\r\n            transform: 'scaleY(0)',\r\n            transformOrigin: '0% 0%'\r\n        }))\r\n    ])\r\n]);\n\nclass lang_Fa {\r\n    constructor() {\r\n        this.today = \"امروز\";\r\n        this.lastDay = \"آخرین روز\";\r\n        this.lastWeek = \"آخرین هفته\";\r\n        this.lastMonth = \"آخرین ماه\";\r\n        this.custom = \"دلخواه\";\r\n        this.previousMonth = \"ماه قبل\";\r\n        this.nextMonth = \"ماه بعد\";\r\n        this.previousYear = \"سال قبل\";\r\n        this.nextYear = \"سال بعد\";\r\n        this.selectTime = \"انتخاب زمان\";\r\n        this.selectDate = \"انتخاب تاریخ\";\r\n        this.selectMonth = \"انتخاب ماه\";\r\n        this.selectYear = \"انتخاب سال\";\r\n        this.selectDateRange = \"انتخاب محدوده تاریخ\";\r\n        this.startDate = \"از تاریخ\";\r\n        this.endDate = \"تا تاریخ\";\r\n        this.pm = \"ب.ظ\";\r\n        this.am = \"ق.ظ\";\r\n        this.ok = \"تایید\";\r\n        this.cancel = \"لغو\";\r\n        this.now = \"اکنون\";\r\n    }\r\n}\r\nlang_Fa.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"14.3.0\", ngImport: i0, type: lang_Fa, deps: [], target: i0.ɵɵFactoryTarget.Injectable });\r\nlang_Fa.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"14.3.0\", ngImport: i0, type: lang_Fa, providedIn: 'root' });\r\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"14.3.0\", ngImport: i0, type: lang_Fa, decorators: [{\r\n            type: Injectable,\r\n            args: [{\r\n                    providedIn: 'root'\r\n                }]\r\n        }] });\r\nclass lang_En {\r\n    constructor() {\r\n        this.today = \"Today\";\r\n        this.lastDay = \"Last Day\";\r\n        this.lastWeek = \"Last Week\";\r\n        this.lastMonth = \"Last Month\";\r\n        this.custom = \"Custom\";\r\n        this.previousMonth = \"Previous Month\";\r\n        this.nextMonth = \"Next Month\";\r\n        this.previousYear = \"Previous Year\";\r\n        this.nextYear = \"Next Year\";\r\n        this.selectTime = \"Select time\";\r\n        this.selectDate = \"Select date\";\r\n        this.selectMonth = \"Select month\";\r\n        this.selectYear = \"Select year\";\r\n        this.selectDateRange = \"Select date range\";\r\n        this.startDate = \"Start date\";\r\n        this.endDate = \"End date\";\r\n        this.pm = \"PM\";\r\n        this.am = \"AM\";\r\n        this.ok = \"Ok\";\r\n        this.cancel = \"Cancel\";\r\n        this.now = \"Now\";\r\n    }\r\n}\r\nlang_En.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"14.3.0\", ngImport: i0, type: lang_En, deps: [], target: i0.ɵɵFactoryTarget.Injectable });\r\nlang_En.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"14.3.0\", ngImport: i0, type: lang_En, providedIn: 'root' });\r\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"14.3.0\", ngImport: i0, type: lang_En, decorators: [{\r\n            type: Injectable,\r\n            args: [{\r\n                    providedIn: 'root'\r\n                }]\r\n        }] });\n\nclass AsaDatePickerService {\r\n    /**\r\n     *\r\n     */\r\n    constructor(locale_fa, locale_en) {\r\n        this.locale_fa = locale_fa;\r\n        this.locale_en = locale_en;\r\n        this.activeInput$ = new BehaviorSubject('');\r\n    }\r\n    getActiveInputValue() {\r\n        return this.activeInput$.getValue();\r\n    }\r\n}\r\nAsaDatePickerService.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"14.3.0\", ngImport: i0, type: AsaDatePickerService, deps: [{ token: lang_Fa }, { token: lang_En }], target: i0.ɵɵFactoryTarget.Injectable });\r\nAsaDatePickerService.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"14.3.0\", ngImport: i0, type: AsaDatePickerService });\r\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"14.3.0\", ngImport: i0, type: AsaDatePickerService, decorators: [{\r\n            type: Injectable\r\n        }], ctorParameters: function () { return [{ type: lang_Fa }, { type: lang_En }]; } });\r\nclass DestroyService extends Subject {\r\n    ngOnDestroy() {\r\n        this.next();\r\n        this.complete();\r\n    }\r\n}\r\nDestroyService.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"14.3.0\", ngImport: i0, type: DestroyService, deps: null, target: i0.ɵɵFactoryTarget.Injectable });\r\nDestroyService.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"14.3.0\", ngImport: i0, type: DestroyService });\r\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"14.3.0\", ngImport: i0, type: DestroyService, decorators: [{\r\n            type: Injectable\r\n        }] });\n\nfunction propDecoratorFactory(name, fallback) {\r\n    function propDecorator(target, propName, originalDescriptor) {\r\n        const privatePropName = `$$__zorroPropDecorator__${propName}`;\r\n        if (Object.prototype.hasOwnProperty.call(target, privatePropName)) {\r\n            console.warn(`The prop \"${privatePropName}\" is already exist, it will be overrided by ${name} decorator.`);\r\n        }\r\n        Object.defineProperty(target, privatePropName, {\r\n            configurable: true,\r\n            writable: true\r\n        });\r\n        return {\r\n            get() {\r\n                return originalDescriptor && originalDescriptor.get\r\n                    ? originalDescriptor.get.bind(this)()\r\n                    : this[privatePropName];\r\n            },\r\n            set(value) {\r\n                if (originalDescriptor && originalDescriptor.set) {\r\n                    originalDescriptor.set.bind(this)(fallback(value));\r\n                }\r\n                this[privatePropName] = fallback(value);\r\n            }\r\n        };\r\n    }\r\n    return propDecorator;\r\n}\r\n/**\r\n * Input decorator that handle a prop to do get/set automatically with toBoolean\r\n *\r\n * Why not using @InputBoolean alone without @Input? AOT needs @Input to be visible\r\n *\r\n * @howToUse\r\n * ```\r\n * @Input() @InputBoolean() visible: boolean = false;\r\n *\r\n * // Act as below:\r\n * // @Input()\r\n * // get visible() { return this.__visible; }\r\n * // set visible(value) { this.__visible = value; }\r\n * // __visible = false;\r\n * ```\r\n */\r\nfunction InputBoolean() {\r\n    return propDecoratorFactory('InputBoolean', toBoolean);\r\n}\r\nfunction toBoolean(value) {\r\n    return coerceBooleanProperty(value);\r\n}\r\nclass NzConnectedOverlayDirective {\r\n    constructor(cdkConnectedOverlay, nzDestroyService) {\r\n        this.cdkConnectedOverlay = cdkConnectedOverlay;\r\n        this.nzDestroyService = nzDestroyService;\r\n        this.nzArrowPointAtCenter = false;\r\n        this.cdkConnectedOverlay.backdropClass = 'nz-overlay-transparent-backdrop';\r\n        this.cdkConnectedOverlay.positionChange\r\n            .pipe(takeUntil(this.nzDestroyService))\r\n            .subscribe((position) => {\r\n            if (this.nzArrowPointAtCenter) {\r\n                this.updateArrowPosition(position);\r\n            }\r\n        });\r\n    }\r\n    updateArrowPosition(position) {\r\n        const originRect = this.getOriginRect();\r\n        const placement = getPlacementName(position);\r\n        let offsetX = 0;\r\n        let offsetY = 0;\r\n        if (placement === 'topLeft' || placement === 'bottomLeft') {\r\n            offsetX = originRect.width / 2 - 14;\r\n        }\r\n        else if (placement === 'topRight' || placement === 'bottomRight') {\r\n            offsetX = -(originRect.width / 2 - 14);\r\n        }\r\n        else if (placement === 'leftTop' || placement === 'rightTop') {\r\n            offsetY = originRect.height / 2 - 10;\r\n        }\r\n        else if (placement === 'leftBottom' || placement === 'rightBottom') {\r\n            offsetY = -(originRect.height / 2 - 10);\r\n        }\r\n        if (this.cdkConnectedOverlay.offsetX !== offsetX || this.cdkConnectedOverlay.offsetY !== offsetY) {\r\n            this.cdkConnectedOverlay.offsetY = offsetY;\r\n            this.cdkConnectedOverlay.offsetX = offsetX;\r\n            this.cdkConnectedOverlay.overlayRef.updatePosition();\r\n        }\r\n    }\r\n    getFlexibleConnectedPositionStrategyOrigin() {\r\n        if (this.cdkConnectedOverlay.origin instanceof CdkOverlayOrigin) {\r\n            return this.cdkConnectedOverlay.origin.elementRef;\r\n        }\r\n        else {\r\n            return this.cdkConnectedOverlay.origin;\r\n        }\r\n    }\r\n    getOriginRect() {\r\n        const origin = this.getFlexibleConnectedPositionStrategyOrigin();\r\n        if (origin instanceof ElementRef) {\r\n            return origin.nativeElement.getBoundingClientRect();\r\n        }\r\n        // Check for Element so SVG elements are also supported.\r\n        if (origin instanceof Element) {\r\n            return origin.getBoundingClientRect();\r\n        }\r\n        const width = origin.width || 0;\r\n        const height = origin.height || 0;\r\n        // If the origin is a point, return a client rect as if it was a 0x0 element at the point.\r\n        return {\r\n            top: origin.y,\r\n            bottom: origin.y + height,\r\n            left: origin.x,\r\n            right: origin.x + width,\r\n            height,\r\n            width\r\n        };\r\n    }\r\n}\r\nNzConnectedOverlayDirective.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"14.3.0\", ngImport: i0, type: NzConnectedOverlayDirective, deps: [{ token: i1.CdkConnectedOverlay }, { token: DestroyService }], target: i0.ɵɵFactoryTarget.Directive });\r\nNzConnectedOverlayDirective.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"14.0.0\", version: \"14.3.0\", type: NzConnectedOverlayDirective, isStandalone: true, selector: \"[cdkConnectedOverlay][nzConnectedOverlay]\", inputs: { nzArrowPointAtCenter: \"nzArrowPointAtCenter\" }, providers: [DestroyService], exportAs: [\"nzConnectedOverlay\"], ngImport: i0 });\r\n__decorate([\r\n    InputBoolean()\r\n], NzConnectedOverlayDirective.prototype, \"nzArrowPointAtCenter\", void 0);\r\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"14.3.0\", ngImport: i0, type: NzConnectedOverlayDirective, decorators: [{\r\n            type: Directive,\r\n            args: [{\r\n                    selector: '[cdkConnectedOverlay][nzConnectedOverlay]',\r\n                    exportAs: 'nzConnectedOverlay',\r\n                    standalone: true,\r\n                    providers: [DestroyService]\r\n                }]\r\n        }], ctorParameters: function () { return [{ type: i1.CdkConnectedOverlay }, { type: DestroyService }]; }, propDecorators: { nzArrowPointAtCenter: [{\r\n                type: Input\r\n            }] } });\r\n//overlay-position.ts:\r\nconst POSITION_MAP = {\r\n    top: new ConnectionPositionPair({ originX: 'center', originY: 'top' }, { overlayX: 'center', overlayY: 'bottom' }),\r\n    topCenter: new ConnectionPositionPair({ originX: 'center', originY: 'top' }, { overlayX: 'center', overlayY: 'bottom' }),\r\n    topLeft: new ConnectionPositionPair({ originX: 'start', originY: 'top' }, { overlayX: 'start', overlayY: 'bottom' }),\r\n    topRight: new ConnectionPositionPair({ originX: 'end', originY: 'top' }, { overlayX: 'end', overlayY: 'bottom' }),\r\n    right: new ConnectionPositionPair({ originX: 'end', originY: 'center' }, { overlayX: 'start', overlayY: 'center' }),\r\n    rightTop: new ConnectionPositionPair({ originX: 'end', originY: 'top' }, { overlayX: 'start', overlayY: 'top' }),\r\n    rightBottom: new ConnectionPositionPair({ originX: 'end', originY: 'bottom' }, { overlayX: 'start', overlayY: 'bottom' }),\r\n    bottom: new ConnectionPositionPair({ originX: 'center', originY: 'bottom' }, { overlayX: 'center', overlayY: 'top' }),\r\n    bottomCenter: new ConnectionPositionPair({ originX: 'center', originY: 'bottom' }, { overlayX: 'center', overlayY: 'top' }),\r\n    bottomLeft: new ConnectionPositionPair({ originX: 'start', originY: 'bottom' }, { overlayX: 'start', overlayY: 'top' }),\r\n    bottomRight: new ConnectionPositionPair({ originX: 'end', originY: 'bottom' }, { overlayX: 'end', overlayY: 'top' }),\r\n    left: new ConnectionPositionPair({ originX: 'start', originY: 'center' }, { overlayX: 'end', overlayY: 'center' }),\r\n    leftTop: new ConnectionPositionPair({ originX: 'start', originY: 'top' }, { overlayX: 'end', overlayY: 'top' }),\r\n    leftBottom: new ConnectionPositionPair({ originX: 'start', originY: 'bottom' }, { overlayX: 'end', overlayY: 'bottom' })\r\n};\r\nconst DEFAULT_TOOLTIP_POSITIONS = [POSITION_MAP.top, POSITION_MAP.right, POSITION_MAP.bottom, POSITION_MAP.left];\r\nconst DEFAULT_CASCADER_POSITIONS = [\r\n    POSITION_MAP.bottomLeft,\r\n    POSITION_MAP.bottomRight,\r\n    POSITION_MAP.topLeft,\r\n    POSITION_MAP.topRight,\r\n    POSITION_MAP.topCenter,\r\n    POSITION_MAP.bottomCenter\r\n];\r\nconst DEFAULT_MENTION_TOP_POSITIONS = [\r\n    new ConnectionPositionPair({ originX: 'start', originY: 'bottom' }, { overlayX: 'start', overlayY: 'bottom' }),\r\n    new ConnectionPositionPair({ originX: 'start', originY: 'bottom' }, { overlayX: 'end', overlayY: 'bottom' })\r\n];\r\nconst DEFAULT_MENTION_BOTTOM_POSITIONS = [\r\n    POSITION_MAP.bottomLeft,\r\n    new ConnectionPositionPair({ originX: 'start', originY: 'bottom' }, { overlayX: 'end', overlayY: 'top' })\r\n];\r\nfunction getPlacementName(position) {\r\n    for (const placement in POSITION_MAP) {\r\n        if (position.connectionPair.originX === POSITION_MAP[placement].originX &&\r\n            position.connectionPair.originY === POSITION_MAP[placement].originY &&\r\n            position.connectionPair.overlayX === POSITION_MAP[placement].overlayX &&\r\n            position.connectionPair.overlayY === POSITION_MAP[placement].overlayY) {\r\n            return placement;\r\n        }\r\n    }\r\n    return undefined;\r\n}\r\nconst DATE_PICKER_POSITION_MAP = {\r\n    bottomLeft: new ConnectionPositionPair({ originX: 'start', originY: 'bottom' }, { overlayX: 'start', overlayY: 'top' }, undefined, 2),\r\n    topLeft: new ConnectionPositionPair({ originX: 'start', originY: 'top' }, { overlayX: 'start', overlayY: 'bottom' }, undefined, -2),\r\n    bottomRight: new ConnectionPositionPair({ originX: 'end', originY: 'bottom' }, { overlayX: 'end', overlayY: 'top' }, undefined, 2),\r\n    topRight: new ConnectionPositionPair({ originX: 'end', originY: 'top' }, { overlayX: 'end', overlayY: 'bottom' }, undefined, -2)\r\n};\r\nconst DEFAULT_DATE_PICKER_POSITIONS = [\r\n    DATE_PICKER_POSITION_MAP.bottomLeft,\r\n    DATE_PICKER_POSITION_MAP.topLeft,\r\n    DATE_PICKER_POSITION_MAP.bottomRight,\r\n    DATE_PICKER_POSITION_MAP.topRight\r\n];\n\nclass DateMaskDirective {\r\n    constructor(el) {\r\n        this.el = el;\r\n        this.dateFormat = 'yyyy/MM/dd';\r\n        this.disableInputMask = false;\r\n        this.delimiters = [];\r\n        this.parts = [];\r\n        this.lastValue = '';\r\n    }\r\n    ngOnInit() {\r\n        this.parseFormat();\r\n    }\r\n    parseFormat() {\r\n        if (this.disableInputMask)\r\n            return;\r\n        this.parts = [];\r\n        this.delimiters = [];\r\n        let currentPart = '';\r\n        for (let i = 0; i < this.dateFormat.length; i++) {\r\n            const char = this.dateFormat[i];\r\n            if (this.isFormatChar(char)) {\r\n                currentPart += char;\r\n            }\r\n            else {\r\n                if (currentPart) {\r\n                    this.parts.push(currentPart);\r\n                    currentPart = '';\r\n                }\r\n                this.delimiters.push(char);\r\n            }\r\n        }\r\n        if (currentPart) {\r\n            this.parts.push(currentPart);\r\n        }\r\n    }\r\n    isFormatChar(char) {\r\n        return /[yMdHhmsa]/i.test(char);\r\n    }\r\n    onInput(event) {\r\n        if (this.disableInputMask)\r\n            return;\r\n        const input = event.target;\r\n        const cursorPosition = input.selectionStart || 0;\r\n        let value = input.value.replace(/[^0-9APMapm\\s:/\\-\\.]/g, '');\r\n        // Allow backspace/delete\r\n        if (value.length < this.lastValue.length) {\r\n            this.lastValue = value;\r\n            return;\r\n        }\r\n        let formattedParts = [];\r\n        let currentValue = value;\r\n        let shouldAddDelimiter = false;\r\n        let totalLength = 0;\r\n        let newCursorPosition = cursorPosition;\r\n        for (let i = 0; i < this.parts.length; i++) {\r\n            const part = this.extractPart(currentValue, this.parts[i]);\r\n            if (!part && part !== '0')\r\n                break;\r\n            const expectedLength = this.getPartLength(this.parts[i]);\r\n            let formattedPart = part;\r\n            if (formattedPart.length >= expectedLength) {\r\n                formattedPart = this.validatePart(formattedPart.slice(0, expectedLength), this.parts[i]);\r\n                shouldAddDelimiter = true;\r\n            }\r\n            formattedParts.push(formattedPart);\r\n            totalLength += formattedPart.length;\r\n            if (shouldAddDelimiter && i < this.parts.length - 1) {\r\n                formattedParts.push(this.delimiters[i] || '');\r\n                totalLength += 1;\r\n                shouldAddDelimiter = false;\r\n                if (cursorPosition === totalLength - 1) {\r\n                    newCursorPosition = totalLength;\r\n                }\r\n            }\r\n            currentValue = this.removeProcessedPart(currentValue, part);\r\n        }\r\n        const formattedValue = formattedParts.join('');\r\n        input.value = formattedValue;\r\n        // Set cursor position\r\n        newCursorPosition = Math.min(newCursorPosition, totalLength);\r\n        input.setSelectionRange(newCursorPosition, newCursorPosition);\r\n        this.lastValue = formattedValue;\r\n    }\r\n    extractPart(value, format) {\r\n        if (!value)\r\n            return '';\r\n        if (format[0].toLowerCase() === 'a') {\r\n            // Handle AM/PM\r\n            const match = value.match(/^[AaPp][Mm]?/);\r\n            return match ? match[0].toUpperCase() : '';\r\n        }\r\n        // Handle numeric parts\r\n        const match = value.match(/^\\d+/);\r\n        return match ? match[0] : '';\r\n    }\r\n    removeProcessedPart(value, part) {\r\n        if (!part)\r\n            return value;\r\n        // Remove part and following delimiter if exists\r\n        const remainingValue = value.slice(part.length);\r\n        return remainingValue.replace(/^[:/\\s-]/, '');\r\n    }\r\n    onKeyDown(event) {\r\n        var _a, _b;\r\n        if (this.disableInputMask)\r\n            return;\r\n        const input = event.target;\r\n        const cursorPosition = input.selectionStart || 0;\r\n        // Allow control keys\r\n        if (event.key === 'Backspace' || event.key === 'Delete' ||\r\n            event.key === 'ArrowLeft' || event.key === 'ArrowRight' ||\r\n            event.key === 'Tab' || event.ctrlKey) {\r\n            return;\r\n        }\r\n        const currentPartIndex = this.getCurrentPartIndex(input.value, cursorPosition);\r\n        if (currentPartIndex === -1)\r\n            return;\r\n        const currentFormat = this.parts[currentPartIndex];\r\n        const isTimeDelimiter = event.key === ':' && cursorPosition > 0 &&\r\n            (((_a = this.parts[currentPartIndex - 1]) === null || _a === void 0 ? void 0 : _a.includes('H')) ||\r\n                ((_b = this.parts[currentPartIndex - 1]) === null || _b === void 0 ? void 0 : _b.includes('h')));\r\n        // Allow time delimiter after hours\r\n        if (isTimeDelimiter) {\r\n            if (this.delimiters[currentPartIndex - 1] === ':') {\r\n                const parts = input.value.split(/[:/\\s-]/);\r\n                const currentPart = this.validatePart(parts[currentPartIndex - 1], this.parts[currentPartIndex - 1]);\r\n                parts[currentPartIndex - 1] = currentPart;\r\n                const newValue = parts.slice(0, currentPartIndex).join(this.delimiters[currentPartIndex - 1]) + ':';\r\n                input.value = newValue + parts.slice(currentPartIndex).join(this.delimiters[currentPartIndex]);\r\n                input.setSelectionRange(newValue.length, newValue.length);\r\n                event.preventDefault();\r\n            }\r\n            return;\r\n        }\r\n        // Handle AM/PM input\r\n        if (currentFormat[0].toLowerCase() === 'a') {\r\n            if (!/^[AaPpMm]$/.test(event.key)) {\r\n                event.preventDefault();\r\n            }\r\n            return;\r\n        }\r\n        // Allow only digits for other parts\r\n        if (!/^\\d$/.test(event.key)) {\r\n            event.preventDefault();\r\n        }\r\n    }\r\n    validatePart(value, format) {\r\n        if (value === '')\r\n            return '';\r\n        const type = format[0].toLowerCase();\r\n        if (type === 'a') {\r\n            const upperValue = value.toUpperCase();\r\n            if (value.length === 1) {\r\n                return upperValue === 'A' || upperValue === 'P' ? upperValue : '';\r\n            }\r\n            return ['AM', 'PM'].includes(upperValue) ? upperValue : upperValue[0];\r\n        }\r\n        const numValue = parseInt(value, 10);\r\n        switch (type) {\r\n            case 'h': // 12-hour format\r\n                if (format[0] == 'H')\r\n                    return Math.min(Math.max(numValue, 0), 23).toString().padStart(2, '0');\r\n                return Math.min(Math.max(numValue, 1), 12).toString().padStart(2, '0');\r\n            case 'm': // month or minute\r\n                if (format === 'MM') {\r\n                    return Math.min(Math.max(numValue, 1), 12).toString().padStart(2, '0');\r\n                }\r\n                return Math.min(Math.max(numValue, 0), 59).toString().padStart(2, '0');\r\n            case 's': // seconds\r\n                return Math.min(Math.max(numValue, 0), 59).toString().padStart(2, '0');\r\n            case 'd': // day\r\n                return Math.min(Math.max(numValue, 1), 31).toString().padStart(2, '0');\r\n            case 'y': // year\r\n                if (format.length === 2)\r\n                    return value.padStart(2, '0');\r\n                return value.padStart(4, '0');\r\n            default:\r\n                return value;\r\n        }\r\n    }\r\n    getPartLength(format) {\r\n        const type = format[0].toLowerCase();\r\n        switch (type) {\r\n            case 'y': return format.length === 2 ? 2 : 4;\r\n            case 'a': return format.length === 1 ? 1 : 2;\r\n            default: return 2;\r\n        }\r\n    }\r\n    getCurrentPartIndex(value, cursorPosition) {\r\n        const parts = value.split(/[:/\\s-]/);\r\n        let currentIndex = 0;\r\n        let totalLength = 0;\r\n        for (let i = 0; i < parts.length; i++) {\r\n            totalLength += parts[i].length;\r\n            if (cursorPosition <= totalLength + i) {\r\n                return i;\r\n            }\r\n            totalLength += 1; // Add delimiter length\r\n        }\r\n        return parts.length - 1;\r\n    }\r\n}\r\nDateMaskDirective.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"14.3.0\", ngImport: i0, type: DateMaskDirective, deps: [{ token: i0.ElementRef }], target: i0.ɵɵFactoryTarget.Directive });\r\nDateMaskDirective.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"14.0.0\", version: \"14.3.0\", type: DateMaskDirective, isStandalone: true, selector: \"[asa-dateMask]\", inputs: { dateFormat: [\"asa-dateMask\", \"dateFormat\"], disableInputMask: \"disableInputMask\" }, host: { listeners: { \"input\": \"onInput($event)\", \"keydown\": \"onKeyDown($event)\" } }, ngImport: i0 });\r\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"14.3.0\", ngImport: i0, type: DateMaskDirective, decorators: [{\r\n            type: Directive,\r\n            args: [{\r\n                    selector: '[asa-dateMask]',\r\n                    standalone: true\r\n                }]\r\n        }], ctorParameters: function () { return [{ type: i0.ElementRef }]; }, propDecorators: { dateFormat: [{\r\n                type: Input,\r\n                args: ['asa-dateMask']\r\n            }], disableInputMask: [{\r\n                type: Input\r\n            }], onInput: [{\r\n                type: HostListener,\r\n                args: ['input', ['$event']]\r\n            }], onKeyDown: [{\r\n                type: HostListener,\r\n                args: ['keydown', ['$event']]\r\n            }] } });\n\nclass JalaliDateAdapter {\r\n    today() {\r\n        return new Date();\r\n    }\r\n    parse(value, formatString) {\r\n        if (typeof value === 'string') {\r\n            // Check if it's in ISO 8601 format\r\n            if (value.includes('T')) {\r\n                const parsedDate = parseISO(value);\r\n                return isValid(parsedDate) ? parsedDate : null;\r\n            }\r\n            try {\r\n                const parsedDate = parse(value, formatString, new Date());\r\n                return isValid(parsedDate) ? parsedDate : null;\r\n            }\r\n            catch (error) {\r\n                console.error('Error parsing date:', error);\r\n                return null;\r\n            }\r\n        }\r\n        else if (value instanceof Date) {\r\n            return isValid(value) ? value : null;\r\n        }\r\n        return null;\r\n    }\r\n    format(date, formatString) {\r\n        return format(date, formatString);\r\n    }\r\n    addDays(date, amount) {\r\n        return addDays(date, amount);\r\n    }\r\n    addMonths(date, amount) {\r\n        return addMonths(date, amount);\r\n    }\r\n    addYears(date, amount) {\r\n        return addYears(date, amount);\r\n    }\r\n    addHours(date, amount) {\r\n        return addHours(date, amount);\r\n    }\r\n    getYear(date) {\r\n        return date ? parseInt(format(date, 'yyyy')) : null;\r\n    }\r\n    getMonth(date) {\r\n        // Jalali months are 1-indexed in date-fns-jalali\r\n        return date ? parseInt(format(date, 'M')) - 1 : null;\r\n    }\r\n    getDate(date) {\r\n        return date ? parseInt(format(date, 'dd')) : null;\r\n    }\r\n    getDayOfWeek(date) {\r\n        return parseInt(format(date, 'i')) - 1;\r\n    }\r\n    getMonthNames(style) {\r\n        const jalaliMonths = [\r\n            'فروردین', 'اردیبهشت', 'خرداد', 'تیر', 'مرداد', 'شهریور',\r\n            'مهر', 'آبان', 'آذر', 'دی', 'بهمن', 'اسفند'\r\n        ];\r\n        switch (style) {\r\n            case 'long':\r\n                return jalaliMonths;\r\n            case 'short':\r\n                return jalaliMonths.map(month => month.substring(0, 3));\r\n            case 'narrow':\r\n                return jalaliMonths.map(month => month.substring(0, 1));\r\n            default:\r\n                return jalaliMonths;\r\n        }\r\n    }\r\n    getDateNames() {\r\n        return Array.from({ length: 31 }, (_, i) => (i + 1).toString());\r\n    }\r\n    getDayOfWeekNames(style) {\r\n        const formats = {\r\n            long: 'EEEE',\r\n            short: 'EEEEE',\r\n            narrow: 'EEEEEE'\r\n        };\r\n        return Array.from({ length: 7 }, (_, i) => format(addDays(startOfWeek(new Date()), i), formats[style]));\r\n    }\r\n    getFirstDayOfWeek() {\r\n        return 6; // Saturday is the first day of the week in the Jalali calendar\r\n    }\r\n    getNumDaysInMonth(date) {\r\n        return parseInt(format(endOfMonth(date), 'd'));\r\n    }\r\n    clone(date) {\r\n        return new Date(date.getTime());\r\n    }\r\n    createDate(year, month, date) {\r\n        // Adjust for 0-indexed months in the interface vs 1-indexed months in date-fns-jalali\r\n        return parse(`${year}/${month + 1}/${date}`, 'yyyy/M/d', new Date());\r\n    }\r\n    isSameDay(date1, date2) {\r\n        return isSameDay(date1, date2);\r\n    }\r\n    isSameMonth(date1, date2) {\r\n        return isSameMonth(date1, date2);\r\n    }\r\n    isSameYear(date1, date2) {\r\n        return isSameYear(date1, date2);\r\n    }\r\n    isAfter(date1, date2) {\r\n        return isAfter(date1, date2);\r\n    }\r\n    isBefore(date1, date2) {\r\n        return isBefore(date1, date2);\r\n    }\r\n    isEqual(date1, date2) {\r\n        return isEqual(date1, date2);\r\n    }\r\n    startOfMonth(date) {\r\n        return startOfMonth(date);\r\n    }\r\n    endOfMonth(date) {\r\n        return endOfMonth(date);\r\n    }\r\n    startOfWeek(date) {\r\n        return startOfWeek(date, { weekStartsOn: this.getFirstDayOfWeek() });\r\n    }\r\n    isValidFormat(dateString, formatString) {\r\n        try {\r\n            const parsedDate = parse(dateString, formatString, new Date());\r\n            if (!isValid(parsedDate)) {\r\n                return false;\r\n            }\r\n            // Check if the formatted parsed date matches the original date string\r\n            const formattedDate = format(parsedDate, formatString);\r\n            return formattedDate === dateString;\r\n        }\r\n        catch (error) {\r\n            return false;\r\n        }\r\n    }\r\n    max(dates) {\r\n        return max(dates);\r\n    }\r\n    setYear(date, year) {\r\n        return setYear(date, year);\r\n    }\r\n    startOfDay(date) {\r\n        return startOfDay(date);\r\n    }\r\n    getHours(date) {\r\n        return date ? parseInt(format(date, 'HH')) : null;\r\n    }\r\n    getMinutes(date) {\r\n        return date ? parseInt(format(date, 'mm')) : null;\r\n    }\r\n    getSeconds(date) {\r\n        return date ? parseInt(format(date, 'ss')) : null;\r\n    }\r\n    setHours(date, hours) {\r\n        const newDate = this.clone(date);\r\n        newDate.setHours(hours);\r\n        return newDate;\r\n    }\r\n    setMinutes(date, minutes) {\r\n        const newDate = this.clone(date);\r\n        newDate.setMinutes(minutes);\r\n        return newDate;\r\n    }\r\n    setSeconds(date, seconds) {\r\n        const newDate = this.clone(date);\r\n        newDate.setSeconds(seconds);\r\n        return newDate;\r\n    }\r\n    getDaysInMonth(date) {\r\n        return getDaysInMonth(date);\r\n    }\r\n    addMinutes(date, amount) {\r\n        return addMinutes(date, amount);\r\n    }\r\n}\r\nJalaliDateAdapter.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"14.3.0\", ngImport: i0, type: JalaliDateAdapter, deps: [], target: i0.ɵɵFactoryTarget.Injectable });\r\nJalaliDateAdapter.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"14.3.0\", ngImport: i0, type: JalaliDateAdapter, providedIn: 'root' });\r\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"14.3.0\", ngImport: i0, type: JalaliDateAdapter, decorators: [{\r\n            type: Injectable,\r\n            args: [{\r\n                    providedIn: 'root'\r\n                }]\r\n        }] });\r\nclass GregorianDateAdapter {\r\n    today() {\r\n        return new Date();\r\n    }\r\n    parse(value, formatString) {\r\n        if (typeof value === 'string') {\r\n            // Check if it's in ISO 8601 format\r\n            if (value.includes('T')) {\r\n                const parsedDate = parseISO(value);\r\n                return isValid$1(parsedDate) ? parsedDate : null;\r\n            }\r\n            try {\r\n                let parsedDate;\r\n                if (formatString === \"ISO\") {\r\n                    parsedDate = parseISO(value);\r\n                }\r\n                else {\r\n                    parsedDate = parse$1(value, formatString, new Date());\r\n                }\r\n                return isValid$1(parsedDate) ? parsedDate : null;\r\n            }\r\n            catch (error) {\r\n                console.error('Error parsing date:', error);\r\n                return null;\r\n            }\r\n        }\r\n        else if (value instanceof Date) {\r\n            return isValid$1(value) ? value : null;\r\n        }\r\n        return null;\r\n    }\r\n    format(date, formatString) {\r\n        return format$1(date, formatString);\r\n    }\r\n    addDays(date, amount) {\r\n        return addDays$1(date, amount);\r\n    }\r\n    addMonths(date, amount) {\r\n        return addMonths$1(date, amount);\r\n    }\r\n    addYears(date, amount) {\r\n        return addYears$1(date, amount);\r\n    }\r\n    addHours(date, amount) {\r\n        return addHours$1(date, amount);\r\n    }\r\n    getYear(date) {\r\n        return date.getFullYear();\r\n    }\r\n    getMonth(date) {\r\n        return date.getMonth();\r\n    }\r\n    getDate(date) {\r\n        return date.getDate();\r\n    }\r\n    getDayOfWeek(date) {\r\n        return date.getDay();\r\n    }\r\n    getMonthNames(style) {\r\n        const formats = {\r\n            long: 'MMMM',\r\n            short: 'MMM',\r\n            narrow: 'MMMMM'\r\n        };\r\n        return Array.from({ length: 12 }, (_, i) => format$1(new Date(2000, i, 1), formats[style]));\r\n    }\r\n    getDateNames() {\r\n        return Array.from({ length: 31 }, (_, i) => (i + 1).toString());\r\n    }\r\n    getDayOfWeekNames(style) {\r\n        const formats = {\r\n            long: 'EEEE',\r\n            short: 'EEE',\r\n            narrow: 'EEEEE'\r\n        };\r\n        return Array.from({ length: 7 }, (_, i) => format$1(addDays$1(startOfWeek$1(new Date()), i), formats[style]));\r\n    }\r\n    getFirstDayOfWeek() {\r\n        return 0; // Sunday is the first day of the week in the Gregorian calendar\r\n    }\r\n    getNumDaysInMonth(date) {\r\n        return new Date(date.getFullYear(), date.getMonth() + 1, 0).getDate();\r\n    }\r\n    clone(date) {\r\n        return new Date(date.getTime());\r\n    }\r\n    createDate(year, month, date) {\r\n        return new Date(year, month, date);\r\n    }\r\n    isSameDay(date1, date2) {\r\n        return isSameDay$1(date1, date2);\r\n    }\r\n    isSameMonth(date1, date2) {\r\n        return isSameMonth$1(date1, date2);\r\n    }\r\n    isSameYear(date1, date2) {\r\n        return isSameYear$1(date1, date2);\r\n    }\r\n    isAfter(date1, date2) {\r\n        return isAfter$1(date1, date2);\r\n    }\r\n    isBefore(date1, date2) {\r\n        return isBefore$1(date1, date2);\r\n    }\r\n    isEqual(date1, date2) {\r\n        return isEqual(date1, date2);\r\n    }\r\n    startOfMonth(date) {\r\n        return startOfMonth$1(date);\r\n    }\r\n    endOfMonth(date) {\r\n        return endOfMonth$1(date);\r\n    }\r\n    startOfWeek(date) {\r\n        return startOfWeek$1(date, { weekStartsOn: this.getFirstDayOfWeek() });\r\n    }\r\n    isValidFormat(dateString, formatString) {\r\n        try {\r\n            const parsedDate = parse$1(dateString, formatString, new Date());\r\n            if (!isValid$1(parsedDate)) {\r\n                return false;\r\n            }\r\n            // Check if the formatted parsed date matches the original date string\r\n            const formattedDate = format$1(parsedDate, formatString);\r\n            return formattedDate === dateString;\r\n        }\r\n        catch (error) {\r\n            return false;\r\n        }\r\n    }\r\n    max(dates) {\r\n        return max$1(dates);\r\n    }\r\n    setYear(date, year) {\r\n        return setYear$1(date, year);\r\n    }\r\n    startOfDay(date) {\r\n        return startOfDay(date);\r\n    }\r\n    getHours(date) {\r\n        return date ? date.getHours() : null;\r\n    }\r\n    getMinutes(date) {\r\n        return date ? date.getMinutes() : null;\r\n    }\r\n    getSeconds(date) {\r\n        return date ? date.getSeconds() : null;\r\n    }\r\n    setHours(date, hours) {\r\n        const newDate = this.clone(date);\r\n        newDate.setHours(hours);\r\n        return newDate;\r\n    }\r\n    setMinutes(date, minutes) {\r\n        const newDate = this.clone(date);\r\n        newDate.setMinutes(minutes);\r\n        return newDate;\r\n    }\r\n    setSeconds(date, seconds) {\r\n        const newDate = this.clone(date);\r\n        newDate.setSeconds(seconds);\r\n        return newDate;\r\n    }\r\n    getDaysInMonth(date) {\r\n        return getDaysInMonth$1(date);\r\n    }\r\n    addMinutes(date, amount) {\r\n        return addMinutes(date, amount);\r\n    }\r\n}\r\nGregorianDateAdapter.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"14.3.0\", ngImport: i0, type: GregorianDateAdapter, deps: [], target: i0.ɵɵFactoryTarget.Injectable });\r\nGregorianDateAdapter.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"14.3.0\", ngImport: i0, type: GregorianDateAdapter, providedIn: 'root' });\r\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"14.3.0\", ngImport: i0, type: GregorianDateAdapter, decorators: [{\r\n            type: Injectable,\r\n            args: [{\r\n                    providedIn: 'root'\r\n                }]\r\n        }] });\n\nclass TimePickerComponent {\r\n    constructor(fb, elementRef, cdref, datePickerService, jalaliAdapter, gregorianAdapter) {\r\n        this.fb = fb;\r\n        this.elementRef = elementRef;\r\n        this.cdref = cdref;\r\n        this.datePickerService = datePickerService;\r\n        this.jalaliAdapter = jalaliAdapter;\r\n        this.gregorianAdapter = gregorianAdapter;\r\n        this.rtl = false;\r\n        this.placement = 'right';\r\n        this.valueType = 'string';\r\n        this.cssClass = '';\r\n        this.showIcon = true;\r\n        this.inline = false;\r\n        this.disableInputMask = false;\r\n        this.disabled = false;\r\n        this.allowEmpty = true;\r\n        this.readOnly = false;\r\n        this.readOnlyInput = false;\r\n        this.timeChange = new EventEmitter();\r\n        this.openChange = new EventEmitter();\r\n        this.timeFormat = '12';\r\n        this._displayFormat = 'hh:mm a';\r\n        this._value = null;\r\n        this._selectedDate = new Date();\r\n        this.onChange = () => { };\r\n        this.onTouched = () => { };\r\n        this.timeoutId = null;\r\n        this.showSeconds = false;\r\n        this.hours = [];\r\n        this.minutes = Array.from({ length: 60 }, (_, i) => i);\r\n        this.seconds = Array.from({ length: 60 }, (_, i) => i);\r\n        this.periods = [];\r\n        this.selectedTime = {\r\n            hour: 12,\r\n            minute: 0,\r\n            second: 0,\r\n            period: ''\r\n        };\r\n        this.isOpen = false;\r\n        this.overlayPositions = [...DEFAULT_DATE_PICKER_POSITIONS];\r\n        this.handleDocumentClick = (event) => {\r\n            if (!this.elementRef.nativeElement.contains(event.target) && this.isOpen) {\r\n                this.close();\r\n                this.handleTimeInput();\r\n            }\r\n        };\r\n        this.dateAdapter = this.gregorianAdapter;\r\n        this.initializeForm();\r\n        this.initializeLocale();\r\n    }\r\n    set displayFormat(value) {\r\n        this._displayFormat = value;\r\n        this.showSeconds = value.toLowerCase().includes('s');\r\n        // Infer time format from display format\r\n        this.timeFormat = this.getTimeFormatFromDisplayFormat(value);\r\n        this.updateHourRange();\r\n        this.updateTimeDisplay();\r\n    }\r\n    get displayFormat() {\r\n        return this._displayFormat;\r\n    }\r\n    set selectedDate(date) {\r\n        if (date) {\r\n            this._selectedDate = date;\r\n        }\r\n    }\r\n    get selectedDate() {\r\n        return this._selectedDate;\r\n    }\r\n    // Lifecycle hooks\r\n    ngOnInit() {\r\n        this.updateHourRange();\r\n        this.origin = new CdkOverlayOrigin(this.elementRef);\r\n        this.setupInputSubscription();\r\n        this.value = this.selectedDate;\r\n        // Only add document click listener for non-inline mode\r\n        if (!this.inline) {\r\n            document.addEventListener('click', this.handleDocumentClick);\r\n        }\r\n        // Auto-open for inline mode\r\n        if (this.inline) {\r\n            this.isOpen = true;\r\n            this.scrollToTime();\r\n        }\r\n    }\r\n    ngOnDestroy() {\r\n        this.cleanupTimeouts();\r\n        document.removeEventListener('click', this.handleDocumentClick);\r\n    }\r\n    ngOnChanges(changes) {\r\n        if (changes['rtl'] || changes['lang']) {\r\n            this.updateLocale();\r\n        }\r\n        if (changes['rtl'] && !changes['dateAdapter']) {\r\n            this.dateAdapter = this.rtl ? this.jalaliAdapter : this.gregorianAdapter;\r\n        }\r\n    }\r\n    // Initialization methods\r\n    initializeForm() {\r\n        this.form = this.fb.group({\r\n            timeInput: ['']\r\n        });\r\n    }\r\n    initializeLocale() {\r\n        this.lang = this.datePickerService.locale_en;\r\n        this.selectedTime.period = this.lang.am;\r\n        this.periods = [this.lang.am, this.lang.pm];\r\n    }\r\n    updateLocale() {\r\n        this.lang = this.rtl ? this.datePickerService.locale_fa : this.datePickerService.locale_en;\r\n        this.selectedTime.period = this.lang.am;\r\n        this.periods = [this.lang.am, this.lang.pm];\r\n        this.placeholder = this.lang.selectTime;\r\n    }\r\n    setupInputSubscription() {\r\n        var _a;\r\n        (_a = this.form.get('timeInput')) === null || _a === void 0 ? void 0 : _a.valueChanges.subscribe(value => {\r\n            if (!value)\r\n                return;\r\n            if (!this.isOpen) {\r\n                this.validateAndUpdateTime(value);\r\n            }\r\n            else {\r\n                this.parseTimeString(value);\r\n                this.scrollToTime();\r\n            }\r\n        });\r\n    }\r\n    // Time management\r\n    updateHourRange() {\r\n        const format = this.getTimeFormatFromDisplayFormat(this._displayFormat);\r\n        this.hours = format === '12'\r\n            ? Array.from({ length: 12 }, (_, i) => i + 1)\r\n            : Array.from({ length: 24 }, (_, i) => i);\r\n    }\r\n    formatTime(date) {\r\n        if (!date && !this.dateAdapter)\r\n            return '';\r\n        const currentDate = date || this.updateDateFromSelection();\r\n        return this.dateAdapter.format(currentDate, this._displayFormat);\r\n    }\r\n    parseTimeString(value) {\r\n        if (!this.dateAdapter)\r\n            return;\r\n        const date = value instanceof Date ? value : this.dateAdapter.parse(value, this._displayFormat);\r\n        if (!date)\r\n            return;\r\n        const hours = this.dateAdapter.getHours(date);\r\n        const minutes = this.dateAdapter.getMinutes(date);\r\n        const seconds = this.dateAdapter.getSeconds(date);\r\n        if (hours === null || minutes === null || seconds === null)\r\n            return;\r\n        this.selectedTime = {\r\n            hour: hours,\r\n            minute: minutes,\r\n            second: seconds,\r\n            period: hours >= 12 ? this.lang.pm : this.lang.am\r\n        };\r\n        this.cdref.markForCheck();\r\n    }\r\n    // Value accessors and form control\r\n    get value() {\r\n        return this._value;\r\n    }\r\n    set value(val) {\r\n        this._value = val;\r\n        this.updateFromValue(val);\r\n    }\r\n    updateFromValue(value) {\r\n        if (!value) {\r\n            this.resetSelection();\r\n            return;\r\n        }\r\n        if (value instanceof Date) {\r\n            this.updateFromDate(value);\r\n        }\r\n        else {\r\n            this.parseTimeString(value);\r\n        }\r\n    }\r\n    updateFromDate(date) {\r\n        var _a, _b;\r\n        if (date && !isNaN(date.getTime()) && this.dateAdapter) {\r\n            const hours = this.dateAdapter.getHours(date);\r\n            if (hours === null)\r\n                return;\r\n            this.selectedTime = {\r\n                hour: hours,\r\n                minute: (_a = this.dateAdapter.getMinutes(date)) !== null && _a !== void 0 ? _a : 0,\r\n                second: (_b = this.dateAdapter.getSeconds(date)) !== null && _b !== void 0 ? _b : 0,\r\n                period: hours >= 12 ? this.lang.pm : this.lang.am\r\n            };\r\n        }\r\n        else {\r\n            this.resetSelection();\r\n        }\r\n        this.cdref.markForCheck();\r\n    }\r\n    resetSelection() {\r\n        this.selectedTime = {\r\n            hour: 0,\r\n            minute: 0,\r\n            second: 0,\r\n            period: this.lang.am\r\n        };\r\n        this.cdref.markForCheck();\r\n    }\r\n    writeValue(value) {\r\n        if (!value) {\r\n            this.value = null;\r\n            return;\r\n        }\r\n        if (value instanceof Date) {\r\n            this.value = value;\r\n        }\r\n        else if (value.trim()) {\r\n            const date = this.selectedDate;\r\n            this.value = !isNaN(date.getTime()) && this.valueType === 'date' ? date : value;\r\n            this.parseTimeString(value);\r\n        }\r\n        this.updateTimeDisplay();\r\n        this.save(false);\r\n    }\r\n    registerOnChange(fn) {\r\n        this.onChange = fn;\r\n    }\r\n    registerOnTouched(fn) {\r\n        this.onTouched = fn;\r\n    }\r\n    // UI Event handlers\r\n    handleKeydown(event) {\r\n        if (event.key === 'Tab' || event.key === 'Enter') {\r\n            this.handleTimeInput();\r\n            if (event.key === 'Tab')\r\n                this.close();\r\n        }\r\n        else if (event.key === 'Escape') {\r\n            this.close();\r\n        }\r\n    }\r\n    handleTimeInput() {\r\n        var _a;\r\n        const currentValue = (_a = this.form.get('timeInput')) === null || _a === void 0 ? void 0 : _a.value;\r\n        if (currentValue || (!currentValue && !this.allowEmpty)) {\r\n            this.validateAndUpdateTime(currentValue);\r\n        }\r\n    }\r\n    onFocusInput() {\r\n        if (!this.isOpen) {\r\n            this.open();\r\n        }\r\n    }\r\n    toggleTimePicker(event) {\r\n        event.stopPropagation();\r\n        this.isOpen ? this.close() : this.open();\r\n    }\r\n    // Picker operations\r\n    open() {\r\n        if (this.inline || this.disabled || this.readOnly)\r\n            return;\r\n        const wasOpen = this.isOpen;\r\n        this.isOpen = true;\r\n        this.openChange.emit(true);\r\n        this.scrollToTime();\r\n        if (!wasOpen) {\r\n            this.cdref.markForCheck();\r\n        }\r\n    }\r\n    close() {\r\n        if (this.inline)\r\n            return;\r\n        this.cleanupTimeouts();\r\n        if (this.isOpen) {\r\n            this.isOpen = false;\r\n            this.openChange.emit(false);\r\n            this.cdref.markForCheck();\r\n        }\r\n    }\r\n    // Selection methods\r\n    selectHour(hour) {\r\n        if (!this.isHourDisabled(hour)) {\r\n            this.selectedTime.hour = hour;\r\n            this.updateTimeDisplay();\r\n            this.scrollToSelectedItem(`h${hour}`);\r\n            if (this.inline)\r\n                this.save();\r\n        }\r\n    }\r\n    selectMinute(minute) {\r\n        if (!this.isMinuteDisabled(minute)) {\r\n            this.selectedTime.minute = minute;\r\n            this.updateTimeDisplay();\r\n            this.scrollToSelectedItem(`m${minute}`);\r\n            if (this.inline)\r\n                this.save();\r\n        }\r\n    }\r\n    selectSecond(second) {\r\n        if (!this.isSecondDisabled(second)) {\r\n            this.selectedTime.second = second;\r\n            this.updateTimeDisplay();\r\n            this.scrollToSelectedItem(`s${second}`);\r\n            if (this.inline)\r\n                this.save();\r\n        }\r\n    }\r\n    selectPeriod(period) {\r\n        this.selectedTime.period = period;\r\n        this.updateTimeDisplay();\r\n    }\r\n    selectNow() {\r\n        const now = this.selectedDate;\r\n        this.selectedTime = {\r\n            hour: now.getHours(),\r\n            minute: now.getMinutes(),\r\n            second: now.getSeconds(),\r\n            period: now.getHours() >= 12 ? this.lang.pm : this.lang.am\r\n        };\r\n        this.updateTimeDisplay();\r\n        this.scrollToTime();\r\n        this.save();\r\n    }\r\n    save(close = true) {\r\n        var _a;\r\n        const date = this.updateDateFromSelection();\r\n        const { isValid, normalizedDate } = this.validateAndNormalizeTime(date);\r\n        if (!isValid || !normalizedDate)\r\n            return;\r\n        const outputValue = this.valueType === 'date'\r\n            ? normalizedDate\r\n            : this.formatTime(normalizedDate);\r\n        const valueChanged = JSON.stringify(this._value) !== JSON.stringify(outputValue);\r\n        if (valueChanged) {\r\n            this._value = outputValue;\r\n            (_a = this.form.get('timeInput')) === null || _a === void 0 ? void 0 : _a.setValue(this.formatTime(normalizedDate), { emitEvent: false });\r\n            this.onChange(outputValue);\r\n            this.timeChange.emit(outputValue);\r\n            this.cdref.markForCheck();\r\n        }\r\n        if (close && !this.inline) {\r\n            this.close();\r\n        }\r\n    }\r\n    // Validation methods\r\n    validateAndUpdateTime(value) {\r\n        var _a;\r\n        if (!value || !this.dateAdapter) {\r\n            this.updateTimeDisplay();\r\n            return;\r\n        }\r\n        try {\r\n            const parsedDate = this.dateAdapter.parse(value, this._displayFormat);\r\n            if (!parsedDate) {\r\n                this.updateTimeDisplay();\r\n                return;\r\n            }\r\n            const { isValid, normalizedDate } = this.validateAndNormalizeTime(parsedDate);\r\n            const formattedTime = this.dateAdapter.format(normalizedDate, this._displayFormat);\r\n            (_a = this.form.get('timeInput')) === null || _a === void 0 ? void 0 : _a.setValue(formattedTime, { emitEvent: false });\r\n            this.parseTimeString(normalizedDate);\r\n            const outputValue = this.valueType === 'date' ? normalizedDate : formattedTime;\r\n            this._value = outputValue;\r\n            this.onChange(outputValue);\r\n            this.timeChange.emit(outputValue);\r\n        }\r\n        catch (error) {\r\n            console.error('Error normalizing time:', error);\r\n            this.updateTimeDisplay();\r\n        }\r\n    }\r\n    isHourDisabled(hour) {\r\n        if (!this.dateAdapter)\r\n            return false;\r\n        return this.isFullHourDisabled(hour);\r\n    }\r\n    isMinuteDisabled(minute) {\r\n        if (!this.dateAdapter)\r\n            return false;\r\n        return this.isFullMinuteDisabled(minute);\r\n    }\r\n    isSecondDisabled(second) {\r\n        if (!this.dateAdapter)\r\n            return false;\r\n        const testConfig = Object.assign(Object.assign({}, this.selectedTime), { second });\r\n        const testDate = this.createDateWithTime(testConfig);\r\n        return this.isTimeDisabled(testDate);\r\n    }\r\n    isTimeDisabled(testDate) {\r\n        if (!this.dateAdapter)\r\n            return false;\r\n        if (this.minTime) {\r\n            const minDate = this.dateAdapter.parse(this.minTime, this._displayFormat);\r\n            if (minDate && this.dateAdapter.isBefore(testDate, minDate)) {\r\n                return true;\r\n            }\r\n        }\r\n        if (this.maxTime) {\r\n            const maxDate = this.dateAdapter.parse(this.maxTime, this._displayFormat);\r\n            if (maxDate && this.dateAdapter.isAfter(testDate, maxDate)) {\r\n                return true;\r\n            }\r\n        }\r\n        return this.disabledTimesFilter ? this.disabledTimesFilter(testDate) : false;\r\n    }\r\n    validateAndNormalizeTime(date) {\r\n        if (!this.dateAdapter) {\r\n            return { isValid: false, normalizedDate: null };\r\n        }\r\n        let isValid = true;\r\n        // Clone the date to avoid modifying the original\r\n        let normalizedDate = this.dateAdapter.clone(date);\r\n        if (this.isTimeDisabled(normalizedDate)) {\r\n            isValid = false;\r\n            // Try to find nearest valid time (check next and previous 48 intervals of 30 minutes)\r\n            for (let i = 1; i <= 48; i++) {\r\n                const nextTime = this.dateAdapter.addMinutes(date, i * 30);\r\n                const prevTime = this.dateAdapter.addMinutes(date, -i * 30);\r\n                if (!this.isTimeDisabled(nextTime)) {\r\n                    normalizedDate = nextTime;\r\n                    break;\r\n                }\r\n                if (!this.isTimeDisabled(prevTime)) {\r\n                    normalizedDate = prevTime;\r\n                    break;\r\n                }\r\n            }\r\n            // If still disabled after trying to find valid time\r\n            if (this.isTimeDisabled(normalizedDate)) {\r\n                return { isValid: false, normalizedDate: null };\r\n            }\r\n        }\r\n        return { isValid: isValid, normalizedDate };\r\n    }\r\n    isFullHourDisabled(hour) {\r\n        for (let minute = 0; minute < 60; minute++) {\r\n            const testConfig = Object.assign(Object.assign({}, this.selectedTime), { hour,\r\n                minute, second: 0 });\r\n            const testDate = this.createDateWithTime(testConfig);\r\n            if (!this.isTimeDisabled(testDate)) {\r\n                return false; // If any minute is enabled, hour is not fully disabled\r\n            }\r\n        }\r\n        return true; // All minutes in hour are disabled\r\n    }\r\n    isFullMinuteDisabled(minute) {\r\n        if (!this.showSeconds) {\r\n            const testConfig = Object.assign(Object.assign({}, this.selectedTime), { minute, second: 0 });\r\n            const testDate = this.createDateWithTime(testConfig);\r\n            return this.isTimeDisabled(testDate);\r\n        }\r\n        // If showing seconds, check each second\r\n        for (let second = 0; second < 60; second++) {\r\n            const testConfig = Object.assign(Object.assign({}, this.selectedTime), { minute,\r\n                second });\r\n            const testDate = this.createDateWithTime(testConfig);\r\n            if (!this.isTimeDisabled(testDate)) {\r\n                return false; // If any second is enabled, minute is not fully disabled\r\n            }\r\n        }\r\n        return true; // All seconds in minute are disabled\r\n    }\r\n    // Helper methods\r\n    createDateWithTime(config) {\r\n        if (!this.dateAdapter)\r\n            return this.selectedDate;\r\n        let testHour = config.hour;\r\n        if (this.timeFormat === '12') {\r\n            if (config.period === this.lang.pm && testHour < 12)\r\n                testHour += 12;\r\n            if (config.period === this.lang.am && testHour === 12)\r\n                testHour = 0;\r\n        }\r\n        let date = this.selectedDate;\r\n        date = this.dateAdapter.setHours(date, testHour);\r\n        date = this.dateAdapter.setMinutes(date, config.minute);\r\n        date = this.dateAdapter.setSeconds(date, config.second);\r\n        return date;\r\n    }\r\n    updateDateFromSelection() {\r\n        if (!this.dateAdapter)\r\n            return this.selectedDate;\r\n        let hours = this.selectedTime.hour;\r\n        if (this.timeFormat === '12') {\r\n            if (this.selectedTime.period === this.lang.pm && hours < 12)\r\n                hours += 12;\r\n            if (this.selectedTime.period === this.lang.am && hours === 12)\r\n                hours = 0;\r\n        }\r\n        let date = this._value instanceof Date ?\r\n            this.dateAdapter.clone(this._value) :\r\n            this.selectedDate;\r\n        date = this.dateAdapter.setHours(date, hours);\r\n        date = this.dateAdapter.setMinutes(date, this.selectedTime.minute);\r\n        date = this.dateAdapter.setSeconds(date, this.selectedTime.second);\r\n        return date;\r\n    }\r\n    updateTimeDisplay() {\r\n        var _a;\r\n        if (this.form) {\r\n            (_a = this.form.get('timeInput')) === null || _a === void 0 ? void 0 : _a.setValue(this.formatTime(), { emitEvent: false });\r\n        }\r\n    }\r\n    getTimeFormatFromDisplayFormat(format) {\r\n        // Check for 24-hour format indicators\r\n        const has24HourFormat = /\\bH{1,2}\\b/.test(format);\r\n        return has24HourFormat ? '24' : '12';\r\n    }\r\n    // UI Update methods\r\n    scrollToTime() {\r\n        return __awaiter(this, void 0, void 0, function* () {\r\n            yield this.scrollToSelectedItem(`h${this.selectedTime.hour}`, 'auto'),\r\n                yield this.scrollToSelectedItem(`m${this.selectedTime.minute}`, 'auto'),\r\n                this.showSeconds ? yield this.scrollToSelectedItem(`s${this.selectedTime.second}`, 'auto') : '';\r\n        });\r\n    }\r\n    scrollToSelectedItem(id, behavior = 'smooth') {\r\n        this.cleanupTimeouts();\r\n        return new Promise((resolve) => {\r\n            if (!id) {\r\n                resolve(false);\r\n                return;\r\n            }\r\n            this.timeoutId = window.setTimeout(() => {\r\n                var _a;\r\n                const selectedElement = (_a = this.popupWrapper) === null || _a === void 0 ? void 0 : _a.nativeElement.querySelector(`#selector_${id}`);\r\n                if (selectedElement) {\r\n                    selectedElement.scrollIntoView({ behavior, block: 'center' });\r\n                }\r\n                resolve(true);\r\n            }, 0);\r\n        });\r\n    }\r\n    cleanupTimeouts() {\r\n        if (this.timeoutId !== null) {\r\n            window.clearTimeout(this.timeoutId);\r\n            this.timeoutId = null;\r\n        }\r\n    }\r\n    onPositionChange(position) {\r\n        this.cdref.detectChanges();\r\n    }\r\n}\r\nTimePickerComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"14.3.0\", ngImport: i0, type: TimePickerComponent, deps: [{ token: i1$1.FormBuilder }, { token: i0.ElementRef }, { token: i0.ChangeDetectorRef }, { token: AsaDatePickerService }, { token: JalaliDateAdapter }, { token: GregorianDateAdapter }], target: i0.ɵɵFactoryTarget.Component });\r\nTimePickerComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"14.0.0\", version: \"14.3.0\", type: TimePickerComponent, isStandalone: true, selector: \"asa-time-picker\", inputs: { placeholder: \"placeholder\", rtl: \"rtl\", placement: \"placement\", minTime: \"minTime\", maxTime: \"maxTime\", lang: \"lang\", valueType: \"valueType\", cssClass: \"cssClass\", showIcon: \"showIcon\", dateAdapter: \"dateAdapter\", inline: \"inline\", disableInputMask: \"disableInputMask\", disabled: \"disabled\", disabledTimesFilter: \"disabledTimesFilter\", allowEmpty: \"allowEmpty\", readOnly: \"readOnly\", readOnlyInput: \"readOnlyInput\", displayFormat: \"displayFormat\", selectedDate: \"selectedDate\" }, outputs: { timeChange: \"timeChange\", openChange: \"openChange\" }, host: { listeners: { \"click\": \"open()\", \"keydown\": \"handleKeydown($event)\" } }, providers: [\r\n        AsaDatePickerService,\r\n        {\r\n            provide: NG_VALUE_ACCESSOR,\r\n            useExisting: forwardRef(() => TimePickerComponent),\r\n            multi: true\r\n        }\r\n    ], viewQueries: [{ propertyName: \"timePickerInput\", first: true, predicate: [\"timePickerInput\"], descendants: true }, { propertyName: \"popupWrapper\", first: true, predicate: [\"popupWrapper\"], descendants: true }], usesOnChanges: true, ngImport: i0, template: `\n    <div class=\"time-picker-wrapper\" [formGroup]=\"form\">\n      <!-- Regular input mode -->\n      <ng-container *ngIf=\"!inline\">\n        <div class=\"input-wrapper\" [class.focus]=\"isOpen\" [class.disabled]=\"disabled\">\n          <input\n            #timePickerInput\n            [asa-dateMask]=\"displayFormat\"\n            [disableInputMask]=\"disableInputMask\"\n            [class.disabled]=\"disabled\"\n            type=\"text\"\n            class=\"time-picker-input\"\n            [class.focus]=\"isOpen\"\n            formControlName=\"timeInput\"\n            (focus)=\"onFocusInput()\"\n            [placeholder]=\"placeholder\"\n            [readonly]=\"readOnly || readOnlyInput\"\n            [attr.disabled]=\"disabled? 'disabled':null\"\n          >\n          <button *ngIf=\"showIcon\" class=\"time-button\" (click)=\"toggleTimePicker($event)\" tabindex=\"-1\">\n            <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"20\" height=\"20\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"#999\" stroke-width=\"2\">\n              <circle cx=\"12\" cy=\"12\" r=\"10\"/>\n              <path d=\"M12 6v6l4 2\"/>\n            </svg>\n          </button>\n        </div>\n\n        <ng-template\n          cdkConnectedOverlay\n          nzConnectedOverlay\n          [cdkConnectedOverlayOrigin]=\"origin\"\n          [cdkConnectedOverlayOpen]=\"isOpen\"\n          [cdkConnectedOverlayPositions]=\"overlayPositions\"\n          [cdkConnectedOverlayTransformOriginOn]=\"'.time-picker-popup'\"\n          [cdkConnectedOverlayHasBackdrop]=\"false\"\n          (positionChange)=\"onPositionChange($event)\"\n          (detach)=\"close()\"\n        >\n          <ng-container *ngTemplateOutlet=\"timePickerContent\"></ng-container>\n        </ng-template>\n      </ng-container>\n\n      <!-- Inline mode -->\n      <ng-container *ngIf=\"inline\">\n        <ng-container *ngTemplateOutlet=\"timePickerContent\"></ng-container>\n      </ng-container>\n\n      <!-- Time Picker Content Template -->\n      <ng-template #timePickerContent>\n        <div\n          #popupWrapper\n          [class]=\"'time-picker-popup ' + cssClass\"\n          [@slideMotion]=\"'enter'\"\n          [class.inline]=\"inline\"\n          [class.disabled]=\"disabled\"\n          style=\"position: relative\"\n          (click)=\"$event.stopPropagation()\"\n        >\n          <div class=\"time-picker-content\">\n            <div class=\"time-columns\">\n              <!-- Hours -->\n              <div class=\"time-column\">\n                <div class=\"time-scroller\">\n                  <button\n                    *ngFor=\"let hour of hours\"\n                    [id]=\"'selector_h'+hour\"\n                    [class.selected]=\"selectedTime.hour === hour\"\n                    [class.disabled]=\"isHourDisabled(hour)\"\n                    (click)=\"selectHour(hour)\"\n                    type=\"button\"\n                  >\n                    {{ hour.toString().padStart(2, '0') }}\n                  </button>\n                </div>\n              </div>\n\n              <div class=\"time-separator\">:</div>\n\n              <!-- Minutes -->\n              <div class=\"time-column\">\n                <div class=\"time-scroller\">\n                  <button\n                    *ngFor=\"let minute of minutes\"\n                    [id]=\"'selector_m'+minute\"\n                    [class.selected]=\"selectedTime.minute === minute\"\n                    [class.disabled]=\"isMinuteDisabled(minute)\"\n                    (click)=\"selectMinute(minute)\"\n                    type=\"button\"\n                  >\n                    {{ minute.toString().padStart(2, '0') }}\n                  </button>\n                </div>\n              </div>\n\n              <!-- Seconds (if format includes seconds) -->\n              <ng-container *ngIf=\"showSeconds\">\n                <div class=\"time-separator\">:</div>\n                <div class=\"time-column\">\n                  <div class=\"time-scroller\">\n                    <button\n                      *ngFor=\"let second of seconds\"\n                      [id]=\"'selector_s'+second\"\n                      [class.selected]=\"selectedTime.second === second\"\n                      [class.disabled]=\"isSecondDisabled(second)\"\n                      (click)=\"selectSecond(second)\"\n                      type=\"button\"\n                    >\n                      {{ second.toString().padStart(2, '0') }}\n                    </button>\n                  </div>\n                </div>\n              </ng-container>\n\n              <!-- AM/PM (only in 12-hour format) -->\n              <ng-container *ngIf=\"timeFormat === '12'\">\n                <div class=\"time-column period\">\n                  <button\n                    *ngFor=\"let period of periods\"\n                    [class.selected]=\"selectedTime.period === period\"\n                    (click)=\"selectPeriod(period)\"\n                    type=\"button\"\n                  >\n                    {{ period }}\n                  </button>\n                </div>\n              </ng-container>\n            </div>\n          </div>\n\n          <div class=\"time-picker-footer\" *ngIf=\"!inline\">\n            <div class=\"footer-buttons\">\n              <button class=\"now-btn\" (click)=\"selectNow()\" type=\"button\">{{ lang.now }}</button>\n            </div>\n            <div class=\"footer-actions\">\n              <button class=\"save-btn\" (click)=\"save()\" type=\"button\">{{ lang.ok }}</button>\n            </div>\n          </div>\n        </div>\n      </ng-template>\n    </div>\n  `, isInline: true, styles: [\":host *{font-family:inherit;font-weight:400;box-sizing:border-box;padding:0;margin:0}.time-picker-wrapper{display:inline-block}.input-wrapper{position:relative;display:inline-flex;align-items:center;border:1px solid #d9d9d9;border-radius:4px}.input-wrapper.focus{border-color:#40a9ff;box-shadow:0 0 0 2px #1890ff33;outline:none}.input-wrapper.disabled{background:#fafafa}input:focus{outline:none}input:hover{border-color:#40a9ff}input.time-picker-input{font-family:inherit;width:100%;padding:6px;border:none;border-radius:4px;font-size:14px;transition:all .3s}.time-button{background:none;border:none;cursor:pointer;padding:4px 4px 0}.time-picker-popup{background:white;border-radius:8px;box-shadow:0 6px 16px #00000014;width:fit-content;min-width:200px;overflow:hidden;margin-block:3px;height:40vh;max-height:280px}.time-picker-popup.inline{box-shadow:none;margin:0;border:1px solid #d9d9d9}.time-picker-popup.inline .time-picker-content{padding:4px;height:100%}.time-picker-popup.inline .time-columns{padding:4px}.time-picker-popup.inline .time-column::-webkit-scrollbar{width:6px}.time-picker-popup.inline .time-column::-webkit-scrollbar-thumb{background:#d9d9d9;border-radius:3px}.time-picker-popup.inline .time-column::-webkit-scrollbar-track{background:#f5f5f5}.time-picker-header{padding:16px;font-size:16px;font-weight:500;border-bottom:1px solid #f0f0f0}.time-picker-content{padding:8px;height:calc(100% - 59px)}.time-columns{display:flex;align-items:center;justify-content:center;padding:8px;gap:8px;height:100%}.time-column{flex:1;height:100%;overflow-y:auto;scrollbar-width:none}.time-column::-webkit-scrollbar{display:none}.time-column button{width:100%;padding:6px 8px;background:none;border:none;cursor:pointer;color:#666;font-size:14px;border-radius:4px}.time-column button:hover:not(.disabled){background:#f5f5f5}.time-column button.selected{background:#e6f4ff;color:#1890ff}.time-column button.disabled{color:#d9d9d9;cursor:not-allowed}.time-scroller{display:flex;flex-direction:column;align-items:center}.time-separator{padding:8px 0;color:#999;font-weight:700}.time-picker-footer{display:flex;justify-content:space-between;padding:8px;border-top:1px solid #f0f0f0}button{padding:4px 15px;border-radius:4px;border:1px solid #d9d9d9;background:white;cursor:pointer;font-size:14px;font-family:inherit}.save-btn{background:#1890ff;border-color:#1890ff;color:#fff}.save-btn:hover{background:#40a9ff;border-color:#40a9ff}.cancel-btn:hover{border-color:#40a9ff;color:#40a9ff}.footer-buttons,.footer-actions{display:flex;gap:8px}.now-btn{color:#1890ff;border-color:transparent;background:transparent;box-shadow:none;padding-left:0}.now-btn:hover{color:#40a9ff}.embedded-time-picker.time-picker-popup .time-picker-content{height:100%}.embedded-time-picker.time-picker-popup.inline{border:none;border-radius:0;height:286px;max-height:290px;direction:ltr}\\n\"], dependencies: [{ kind: \"directive\", type: NgIf, selector: \"[ngIf]\", inputs: [\"ngIf\", \"ngIfThen\", \"ngIfElse\"] }, { kind: \"directive\", type: NgFor, selector: \"[ngFor][ngForOf]\", inputs: [\"ngForOf\", \"ngForTrackBy\", \"ngForTemplate\"] }, { kind: \"ngmodule\", type: ReactiveFormsModule }, { kind: \"directive\", type: i1$1.DefaultValueAccessor, selector: \"input:not([type=checkbox])[formControlName],textarea[formControlName],input:not([type=checkbox])[formControl],textarea[formControl],input:not([type=checkbox])[ngModel],textarea[ngModel],[ngDefaultControl]\" }, { kind: \"directive\", type: i1$1.NgControlStatus, selector: \"[formControlName],[ngModel],[formControl]\" }, { kind: \"directive\", type: i1$1.NgControlStatusGroup, selector: \"[formGroupName],[formArrayName],[ngModelGroup],[formGroup],form:not([ngNoForm]),[ngForm]\" }, { kind: \"directive\", type: i1$1.FormGroupDirective, selector: \"[formGroup]\", inputs: [\"formGroup\"], outputs: [\"ngSubmit\"], exportAs: [\"ngForm\"] }, { kind: \"directive\", type: i1$1.FormControlName, selector: \"[formControlName]\", inputs: [\"formControlName\", \"disabled\", \"ngModel\"], outputs: [\"ngModelChange\"] }, { kind: \"directive\", type: NgTemplateOutlet, selector: \"[ngTemplateOutlet]\", inputs: [\"ngTemplateOutletContext\", \"ngTemplateOutlet\", \"ngTemplateOutletInjector\"] }, { kind: \"directive\", type: DateMaskDirective, selector: \"[asa-dateMask]\", inputs: [\"asa-dateMask\", \"disableInputMask\"] }, { kind: \"ngmodule\", type: OverlayModule }, { kind: \"directive\", type: i1.CdkConnectedOverlay, selector: \"[cdk-connected-overlay], [connected-overlay], [cdkConnectedOverlay]\", inputs: [\"cdkConnectedOverlayOrigin\", \"cdkConnectedOverlayPositions\", \"cdkConnectedOverlayPositionStrategy\", \"cdkConnectedOverlayOffsetX\", \"cdkConnectedOverlayOffsetY\", \"cdkConnectedOverlayWidth\", \"cdkConnectedOverlayHeight\", \"cdkConnectedOverlayMinWidth\", \"cdkConnectedOverlayMinHeight\", \"cdkConnectedOverlayBackdropClass\", \"cdkConnectedOverlayPanelClass\", \"cdkConnectedOverlayViewportMargin\", \"cdkConnectedOverlayScrollStrategy\", \"cdkConnectedOverlayOpen\", \"cdkConnectedOverlayDisableClose\", \"cdkConnectedOverlayTransformOriginOn\", \"cdkConnectedOverlayHasBackdrop\", \"cdkConnectedOverlayLockPosition\", \"cdkConnectedOverlayFlexibleDimensions\", \"cdkConnectedOverlayGrowAfterOpen\", \"cdkConnectedOverlayPush\"], outputs: [\"backdropClick\", \"positionChange\", \"attach\", \"detach\", \"overlayKeydown\", \"overlayOutsideClick\"], exportAs: [\"cdkConnectedOverlay\"] }, { kind: \"directive\", type: NzConnectedOverlayDirective, selector: \"[cdkConnectedOverlay][nzConnectedOverlay]\", inputs: [\"nzArrowPointAtCenter\"], exportAs: [\"nzConnectedOverlay\"] }], animations: [slideMotion], changeDetection: i0.ChangeDetectionStrategy.OnPush });\r\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"14.3.0\", ngImport: i0, type: TimePickerComponent, decorators: [{\r\n            type: Component,\r\n            args: [{ selector: 'asa-time-picker', changeDetection: ChangeDetectionStrategy.OnPush, template: `\n    <div class=\"time-picker-wrapper\" [formGroup]=\"form\">\n      <!-- Regular input mode -->\n      <ng-container *ngIf=\"!inline\">\n        <div class=\"input-wrapper\" [class.focus]=\"isOpen\" [class.disabled]=\"disabled\">\n          <input\n            #timePickerInput\n            [asa-dateMask]=\"displayFormat\"\n            [disableInputMask]=\"disableInputMask\"\n            [class.disabled]=\"disabled\"\n            type=\"text\"\n            class=\"time-picker-input\"\n            [class.focus]=\"isOpen\"\n            formControlName=\"timeInput\"\n            (focus)=\"onFocusInput()\"\n            [placeholder]=\"placeholder\"\n            [readonly]=\"readOnly || readOnlyInput\"\n            [attr.disabled]=\"disabled? 'disabled':null\"\n          >\n          <button *ngIf=\"showIcon\" class=\"time-button\" (click)=\"toggleTimePicker($event)\" tabindex=\"-1\">\n            <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"20\" height=\"20\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"#999\" stroke-width=\"2\">\n              <circle cx=\"12\" cy=\"12\" r=\"10\"/>\n              <path d=\"M12 6v6l4 2\"/>\n            </svg>\n          </button>\n        </div>\n\n        <ng-template\n          cdkConnectedOverlay\n          nzConnectedOverlay\n          [cdkConnectedOverlayOrigin]=\"origin\"\n          [cdkConnectedOverlayOpen]=\"isOpen\"\n          [cdkConnectedOverlayPositions]=\"overlayPositions\"\n          [cdkConnectedOverlayTransformOriginOn]=\"'.time-picker-popup'\"\n          [cdkConnectedOverlayHasBackdrop]=\"false\"\n          (positionChange)=\"onPositionChange($event)\"\n          (detach)=\"close()\"\n        >\n          <ng-container *ngTemplateOutlet=\"timePickerContent\"></ng-container>\n        </ng-template>\n      </ng-container>\n\n      <!-- Inline mode -->\n      <ng-container *ngIf=\"inline\">\n        <ng-container *ngTemplateOutlet=\"timePickerContent\"></ng-container>\n      </ng-container>\n\n      <!-- Time Picker Content Template -->\n      <ng-template #timePickerContent>\n        <div\n          #popupWrapper\n          [class]=\"'time-picker-popup ' + cssClass\"\n          [@slideMotion]=\"'enter'\"\n          [class.inline]=\"inline\"\n          [class.disabled]=\"disabled\"\n          style=\"position: relative\"\n          (click)=\"$event.stopPropagation()\"\n        >\n          <div class=\"time-picker-content\">\n            <div class=\"time-columns\">\n              <!-- Hours -->\n              <div class=\"time-column\">\n                <div class=\"time-scroller\">\n                  <button\n                    *ngFor=\"let hour of hours\"\n                    [id]=\"'selector_h'+hour\"\n                    [class.selected]=\"selectedTime.hour === hour\"\n                    [class.disabled]=\"isHourDisabled(hour)\"\n                    (click)=\"selectHour(hour)\"\n                    type=\"button\"\n                  >\n                    {{ hour.toString().padStart(2, '0') }}\n                  </button>\n                </div>\n              </div>\n\n              <div class=\"time-separator\">:</div>\n\n              <!-- Minutes -->\n              <div class=\"time-column\">\n                <div class=\"time-scroller\">\n                  <button\n                    *ngFor=\"let minute of minutes\"\n                    [id]=\"'selector_m'+minute\"\n                    [class.selected]=\"selectedTime.minute === minute\"\n                    [class.disabled]=\"isMinuteDisabled(minute)\"\n                    (click)=\"selectMinute(minute)\"\n                    type=\"button\"\n                  >\n                    {{ minute.toString().padStart(2, '0') }}\n                  </button>\n                </div>\n              </div>\n\n              <!-- Seconds (if format includes seconds) -->\n              <ng-container *ngIf=\"showSeconds\">\n                <div class=\"time-separator\">:</div>\n                <div class=\"time-column\">\n                  <div class=\"time-scroller\">\n                    <button\n                      *ngFor=\"let second of seconds\"\n                      [id]=\"'selector_s'+second\"\n                      [class.selected]=\"selectedTime.second === second\"\n                      [class.disabled]=\"isSecondDisabled(second)\"\n                      (click)=\"selectSecond(second)\"\n                      type=\"button\"\n                    >\n                      {{ second.toString().padStart(2, '0') }}\n                    </button>\n                  </div>\n                </div>\n              </ng-container>\n\n              <!-- AM/PM (only in 12-hour format) -->\n              <ng-container *ngIf=\"timeFormat === '12'\">\n                <div class=\"time-column period\">\n                  <button\n                    *ngFor=\"let period of periods\"\n                    [class.selected]=\"selectedTime.period === period\"\n                    (click)=\"selectPeriod(period)\"\n                    type=\"button\"\n                  >\n                    {{ period }}\n                  </button>\n                </div>\n              </ng-container>\n            </div>\n          </div>\n\n          <div class=\"time-picker-footer\" *ngIf=\"!inline\">\n            <div class=\"footer-buttons\">\n              <button class=\"now-btn\" (click)=\"selectNow()\" type=\"button\">{{ lang.now }}</button>\n            </div>\n            <div class=\"footer-actions\">\n              <button class=\"save-btn\" (click)=\"save()\" type=\"button\">{{ lang.ok }}</button>\n            </div>\n          </div>\n        </div>\n      </ng-template>\n    </div>\n  `, standalone: true, imports: [\r\n                        NgIf,\r\n                        NgFor,\r\n                        ReactiveFormsModule,\r\n                        NgTemplateOutlet,\r\n                        DateMaskDirective,\r\n                        OverlayModule,\r\n                        NzConnectedOverlayDirective\r\n                    ], providers: [\r\n                        AsaDatePickerService,\r\n                        {\r\n                            provide: NG_VALUE_ACCESSOR,\r\n                            useExisting: forwardRef(() => TimePickerComponent),\r\n                            multi: true\r\n                        }\r\n                    ], host: {\r\n                        '(click)': 'open()'\r\n                    }, animations: [slideMotion], styles: [\":host *{font-family:inherit;font-weight:400;box-sizing:border-box;padding:0;margin:0}.time-picker-wrapper{display:inline-block}.input-wrapper{position:relative;display:inline-flex;align-items:center;border:1px solid #d9d9d9;border-radius:4px}.input-wrapper.focus{border-color:#40a9ff;box-shadow:0 0 0 2px #1890ff33;outline:none}.input-wrapper.disabled{background:#fafafa}input:focus{outline:none}input:hover{border-color:#40a9ff}input.time-picker-input{font-family:inherit;width:100%;padding:6px;border:none;border-radius:4px;font-size:14px;transition:all .3s}.time-button{background:none;border:none;cursor:pointer;padding:4px 4px 0}.time-picker-popup{background:white;border-radius:8px;box-shadow:0 6px 16px #00000014;width:fit-content;min-width:200px;overflow:hidden;margin-block:3px;height:40vh;max-height:280px}.time-picker-popup.inline{box-shadow:none;margin:0;border:1px solid #d9d9d9}.time-picker-popup.inline .time-picker-content{padding:4px;height:100%}.time-picker-popup.inline .time-columns{padding:4px}.time-picker-popup.inline .time-column::-webkit-scrollbar{width:6px}.time-picker-popup.inline .time-column::-webkit-scrollbar-thumb{background:#d9d9d9;border-radius:3px}.time-picker-popup.inline .time-column::-webkit-scrollbar-track{background:#f5f5f5}.time-picker-header{padding:16px;font-size:16px;font-weight:500;border-bottom:1px solid #f0f0f0}.time-picker-content{padding:8px;height:calc(100% - 59px)}.time-columns{display:flex;align-items:center;justify-content:center;padding:8px;gap:8px;height:100%}.time-column{flex:1;height:100%;overflow-y:auto;scrollbar-width:none}.time-column::-webkit-scrollbar{display:none}.time-column button{width:100%;padding:6px 8px;background:none;border:none;cursor:pointer;color:#666;font-size:14px;border-radius:4px}.time-column button:hover:not(.disabled){background:#f5f5f5}.time-column button.selected{background:#e6f4ff;color:#1890ff}.time-column button.disabled{color:#d9d9d9;cursor:not-allowed}.time-scroller{display:flex;flex-direction:column;align-items:center}.time-separator{padding:8px 0;color:#999;font-weight:700}.time-picker-footer{display:flex;justify-content:space-between;padding:8px;border-top:1px solid #f0f0f0}button{padding:4px 15px;border-radius:4px;border:1px solid #d9d9d9;background:white;cursor:pointer;font-size:14px;font-family:inherit}.save-btn{background:#1890ff;border-color:#1890ff;color:#fff}.save-btn:hover{background:#40a9ff;border-color:#40a9ff}.cancel-btn:hover{border-color:#40a9ff;color:#40a9ff}.footer-buttons,.footer-actions{display:flex;gap:8px}.now-btn{color:#1890ff;border-color:transparent;background:transparent;box-shadow:none;padding-left:0}.now-btn:hover{color:#40a9ff}.embedded-time-picker.time-picker-popup .time-picker-content{height:100%}.embedded-time-picker.time-picker-popup.inline{border:none;border-radius:0;height:286px;max-height:290px;direction:ltr}\\n\"] }]\r\n        }], ctorParameters: function () { return [{ type: i1$1.FormBuilder }, { type: i0.ElementRef }, { type: i0.ChangeDetectorRef }, { type: AsaDatePickerService }, { type: JalaliDateAdapter }, { type: GregorianDateAdapter }]; }, propDecorators: { placeholder: [{\r\n                type: Input\r\n            }], rtl: [{\r\n                type: Input\r\n            }], placement: [{\r\n                type: Input\r\n            }], minTime: [{\r\n                type: Input\r\n            }], maxTime: [{\r\n                type: Input\r\n            }], lang: [{\r\n                type: Input\r\n            }], valueType: [{\r\n                type: Input\r\n            }], cssClass: [{\r\n                type: Input\r\n            }], showIcon: [{\r\n                type: Input\r\n            }], dateAdapter: [{\r\n                type: Input\r\n            }], inline: [{\r\n                type: Input\r\n            }], disableInputMask: [{\r\n                type: Input\r\n            }], disabled: [{\r\n                type: Input\r\n            }], disabledTimesFilter: [{\r\n                type: Input\r\n            }], allowEmpty: [{\r\n                type: Input\r\n            }], readOnly: [{\r\n                type: Input\r\n            }], readOnlyInput: [{\r\n                type: Input\r\n            }], displayFormat: [{\r\n                type: Input\r\n            }], selectedDate: [{\r\n                type: Input\r\n            }], timeChange: [{\r\n                type: Output\r\n            }], openChange: [{\r\n                type: Output\r\n            }], timePickerInput: [{\r\n                type: ViewChild,\r\n                args: ['timePickerInput']\r\n            }], popupWrapper: [{\r\n                type: ViewChild,\r\n                args: ['popupWrapper']\r\n            }], handleKeydown: [{\r\n                type: HostListener,\r\n                args: ['keydown', ['$event']]\r\n            }] } });\n\nclass DatePickerPopupComponent {\r\n    constructor(el, cdr, dpService, jalali, gregorian, destroy$) {\r\n        this.el = el;\r\n        this.cdr = cdr;\r\n        this.dpService = dpService;\r\n        this.jalali = jalali;\r\n        this.gregorian = gregorian;\r\n        this.destroy$ = destroy$;\r\n        // ========== Input Properties ==========\r\n        this.rtl = false;\r\n        this.selectedDate = null;\r\n        this.selectedStartDate = null;\r\n        this.selectedEndDate = null;\r\n        this.mode = 'day';\r\n        this.isRange = false;\r\n        this.customLabels = [];\r\n        this.calendarType = 'gregorian';\r\n        this.minDate = null;\r\n        this.maxDate = null;\r\n        this.cssClass = '';\r\n        this.footerDescription = '';\r\n        this.activeInput = null;\r\n        this.showSidebar = true;\r\n        this.showTimePicker = false;\r\n        this.timeDisplayFormat = 'HH:mm';\r\n        this.disabledDates = [];\r\n        // ========== Output Properties ==========\r\n        this.dateSelected = new EventEmitter();\r\n        this.dateRangeSelected = new EventEmitter();\r\n        this.closePicker = new EventEmitter();\r\n        this.clickInside = new EventEmitter();\r\n        this.weekDays = [];\r\n        this.periods = [];\r\n        this.days = [];\r\n        this.selectedPeriod = '';\r\n        this.tempEndDate = null;\r\n        this.monthListNum = Array.from({ length: 12 }, (_, i) => i + 1);\r\n        this.yearList = [];\r\n        this.yearRanges = [];\r\n        this.viewMode = 'days';\r\n        this.timeoutId = null;\r\n        cdr.markForCheck();\r\n    }\r\n    // ========== Getters ==========\r\n    get getDate() {\r\n        return this.selectedDate || this.selectedStartDate || this.selectedEndDate || new Date();\r\n    }\r\n    // ========== Lifecycle Hooks ==========\r\n    ngOnInit() {\r\n        this.initializeComponent();\r\n    }\r\n    ngOnChanges(changes) {\r\n        this.handleChanges(changes);\r\n    }\r\n    ngAfterViewInit() {\r\n        this.scrollToSelectedItem();\r\n        this.setTimePickerDate();\r\n        this.templates.forEach((item) => {\r\n            switch (item.getType()) {\r\n                case 'day':\r\n                    this.dayTemplate = item.template;\r\n                    break;\r\n                case 'month':\r\n                    this.monthTemplate = item.template;\r\n                    break;\r\n                case 'quarter':\r\n                    this.quarterTemplate = item.template;\r\n                    break;\r\n                case 'year':\r\n                    this.yearTemplate = item.template;\r\n                    break;\r\n            }\r\n        });\r\n        this.cdr.markForCheck();\r\n    }\r\n    ngOnDestroy() {\r\n        if (this.timeoutId != null) {\r\n            clearTimeout(this.timeoutId);\r\n        }\r\n    }\r\n    // ========== Initialization Methods ==========\r\n    initializeComponent() {\r\n        this.setDateAdapter();\r\n        this.setInitialDate();\r\n        this.generateCalendar();\r\n        this.weekDays = this.dateAdapter.getDayOfWeekNames('short');\r\n        if (this.mode === 'year') {\r\n            this.showYearSelector();\r\n        }\r\n        this.initLabels();\r\n    }\r\n    initLabels() {\r\n        var _a;\r\n        const today = this.dateAdapter.today();\r\n        if ((_a = this.customLabels) === null || _a === void 0 ? void 0 : _a.length) {\r\n            this.periods = this.customLabels;\r\n        }\r\n        else if (this.isRange) {\r\n            this.generateDefaultPeriods(today);\r\n        }\r\n    }\r\n    generateDefaultPeriods(today) {\r\n        this.periods = [\r\n            {\r\n                label: this.lang.lastDay,\r\n                value: [this.dateAdapter.addDays(today, -1), today]\r\n            },\r\n            {\r\n                label: this.lang.lastWeek,\r\n                value: [this.dateAdapter.addDays(today, -7), today],\r\n                arrow: true\r\n            },\r\n            {\r\n                label: this.lang.lastMonth,\r\n                value: [this.dateAdapter.addMonths(today, -1), today]\r\n            },\r\n            {\r\n                label: this.lang.custom,\r\n                value: 'custom'\r\n            }\r\n        ];\r\n    }\r\n    // ========== Date Adapter Methods ==========\r\n    setDateAdapter() {\r\n        this.dateAdapter = this.calendarType === 'jalali' ? this.jalali : this.gregorian;\r\n        this.lang = this.dpService.locale;\r\n    }\r\n    // ========== Calendar Generation Methods ==========\r\n    generateCalendar() {\r\n        const firstDayOfMonth = this.dateAdapter.startOfMonth(this.currentDate);\r\n        const startDate = this.dateAdapter.startOfWeek(firstDayOfMonth);\r\n        this.days = Array.from({ length: 42 }, (_, i) => this.dateAdapter.addDays(startDate, i));\r\n    }\r\n    // ========== View Mode Management ==========\r\n    setViewMode() {\r\n        switch (this.mode) {\r\n            case 'day':\r\n                this.viewMode = 'days';\r\n                break;\r\n            case 'month':\r\n                this.viewMode = 'months';\r\n                this.generateYearList(15);\r\n                break;\r\n            case 'year':\r\n                this.viewMode = 'years';\r\n                break;\r\n        }\r\n    }\r\n    showMonthSelector() {\r\n        this.viewMode = 'months';\r\n        this.generateYearList(15);\r\n        this.scrollToSelectedItem(this.dateAdapter.getYear(this.getDate));\r\n        this.cdr.markForCheck();\r\n    }\r\n    showYearSelector() {\r\n        this.viewMode = 'years';\r\n        this.generateYearRanges();\r\n        this.generateYearList();\r\n        this.scrollToSelectedItem();\r\n        this.cdr.markForCheck();\r\n    }\r\n    // ========== Time Selection Methods ==========\r\n    onTimeChange(time) {\r\n        const timeDate = time instanceof Date ? time : new Date(time);\r\n        if (!this.isRange) {\r\n            this.updateSingleDateTime(timeDate);\r\n        }\r\n        else {\r\n            this.updateRangeDateTime(timeDate);\r\n        }\r\n    }\r\n    updateSingleDateTime(timeDate) {\r\n        if (!this.selectedDate) {\r\n            this.selectedDate = this.dateAdapter.today();\r\n        }\r\n        const updatedDate = this.applyTimeToDate(this.selectedDate, timeDate);\r\n        this.selectedDate = updatedDate;\r\n    }\r\n    updateRangeDateTime(timeDate) {\r\n        if (this.activeInput === 'start' && this.selectedStartDate) {\r\n            const updatedDate = this.applyTimeToDate(this.selectedStartDate, timeDate);\r\n            this.selectedStartDate = updatedDate;\r\n            this.dateRangeSelected.emit({ start: this.selectedStartDate, end: null });\r\n        }\r\n        else if (this.activeInput === 'end' && this.selectedEndDate) {\r\n            const updatedDate = this.applyTimeToDate(this.selectedEndDate, timeDate);\r\n            this.selectedEndDate = updatedDate;\r\n            clearTimeout(this.timeoutId);\r\n            this.timeoutId = setTimeout(() => {\r\n                this.dateRangeSelected.emit({ start: this.selectedStartDate, end: this.selectedEndDate });\r\n            }, 300);\r\n        }\r\n    }\r\n    applyTimeToDate(date, timeDate) {\r\n        let updatedDate = this.dateAdapter.setHours(date, timeDate.getHours());\r\n        updatedDate = this.dateAdapter.setMinutes(updatedDate, timeDate.getMinutes());\r\n        updatedDate = this.dateAdapter.setSeconds(updatedDate, timeDate.getSeconds());\r\n        return updatedDate;\r\n    }\r\n    setTimePickerDate(date) {\r\n        if (this.showTimePicker) {\r\n            if (this.isRange) {\r\n                this.dpService.activeInput$.asObservable()\r\n                    .pipe(takeUntil$1(this.destroy$))\r\n                    .subscribe(active => {\r\n                    if (active == 'start') {\r\n                        this.timePicker.updateFromDate(this.selectedStartDate);\r\n                    }\r\n                    else {\r\n                        this.timePicker.updateFromDate(this.selectedEndDate);\r\n                    }\r\n                    this.timePicker.scrollToTime();\r\n                });\r\n            }\r\n            else {\r\n                this.timePicker.updateFromDate(date || this.selectedDate);\r\n                this.timePicker.scrollToTime();\r\n            }\r\n        }\r\n    }\r\n    // ========== Date Selection Methods ==========\r\n    selectDate(date) {\r\n        if (this.isDateDisabled(date))\r\n            return;\r\n        if (this.showTimePicker) {\r\n            const existingDate = this.isRange ?\r\n                (this.activeInput === 'start' ? this.selectedStartDate : this.selectedEndDate) :\r\n                this.selectedDate;\r\n            if (existingDate) {\r\n                date = this.applyTimeToDate(date, existingDate);\r\n            }\r\n        }\r\n        else {\r\n            date = this.applyTimeToDate(date, new Date());\r\n        }\r\n        if (this.isRange) {\r\n            this.handleRangeSelection(date);\r\n        }\r\n        else {\r\n            this.handleSingleSelection(date);\r\n        }\r\n        this.currentDate = date;\r\n        this.cdr.markForCheck();\r\n    }\r\n    handleRangeSelection(date) {\r\n        const prevStartDate = this.selectedStartDate;\r\n        const prevEndDate = this.selectedEndDate;\r\n        if (!this.selectedStartDate ||\r\n            (this.selectedStartDate && this.selectedEndDate) ||\r\n            this.dateAdapter.isBefore(date, this.selectedStartDate)) {\r\n            this.selectedStartDate = date;\r\n            this.selectedEndDate = null;\r\n            if (!this.showTimePicker) {\r\n                this.activeInput = 'end';\r\n                this.dpService.activeInput$.next('end');\r\n            }\r\n            this.dateRangeSelected.emit({ start: this.selectedStartDate, end: null });\r\n        }\r\n        else {\r\n            if (this.showTimePicker) {\r\n                this.activeInput = 'end';\r\n                this.dpService.activeInput$.next('end');\r\n            }\r\n            this.selectedEndDate = date;\r\n            this.dateRangeSelected.emit({ start: this.selectedStartDate, end: this.selectedEndDate });\r\n        }\r\n        if (prevStartDate !== this.selectedStartDate || prevEndDate !== this.selectedEndDate)\r\n            this.cdr.markForCheck();\r\n    }\r\n    handleSingleSelection(date) {\r\n        this.selectedDate = date;\r\n        if (!this.showTimePicker)\r\n            this.dateSelected.emit(date);\r\n    }\r\n    selectMonth(month, closeAfterSelection = false) {\r\n        if (this.isMonthDisabled(month))\r\n            return;\r\n        this.currentDate = this.dateAdapter.createDate(this.dateAdapter.getYear(this.currentDate), month - 1, 1);\r\n        if (this.isRange && this.mode === 'month') {\r\n            this.handleRangeSelection(this.currentDate);\r\n            return;\r\n        }\r\n        if (this.mode === 'month' || closeAfterSelection) {\r\n            this.selectedDate = this.currentDate;\r\n            this.dateSelected.emit(this.currentDate);\r\n            this.closeDatePicker();\r\n        }\r\n        else {\r\n            this.viewMode = 'days';\r\n            this.generateCalendar();\r\n            this.cdr.detectChanges();\r\n        }\r\n        this.scrollToSelectedItem(month);\r\n    }\r\n    selectYear(year, sideSelector = false) {\r\n        if (this.isYearDisabled(year))\r\n            return;\r\n        this.currentDate = this.dateAdapter.createDate(year, this.dateAdapter.getMonth(this.currentDate), 1);\r\n        if (this.isRange && this.mode === 'year') {\r\n            this.handleRangeSelection(this.currentDate);\r\n            return;\r\n        }\r\n        if (this.mode === 'year') {\r\n            this.selectedDate = this.currentDate;\r\n            this.dateSelected.emit(this.currentDate);\r\n            this.closeDatePicker();\r\n            return;\r\n        }\r\n        if (sideSelector) {\r\n            this.currentDate = this.dateAdapter.setYear(this.selectedDate, year);\r\n            this.scrollToSelectedItem(year);\r\n        }\r\n        else {\r\n            this.viewMode = 'months';\r\n            this.cdr.detectChanges();\r\n        }\r\n    }\r\n    // ========== Navigation Methods ==========\r\n    goPrev() {\r\n        if (this.viewMode === 'days') {\r\n            this.prevMonth();\r\n            this.cdr.detectChanges();\r\n            return;\r\n        }\r\n        let id;\r\n        if (this.viewMode === 'months') {\r\n            this.currentDate = this.dateAdapter.addYears(this.currentDate, -1);\r\n            id = this.dateAdapter.getYear(this.currentDate);\r\n        }\r\n        if (this.viewMode === 'years') {\r\n            const yearStart = this.yearList[0] - 15;\r\n            this.yearList = Array.from({ length: 15 }, (_, i) => yearStart + i);\r\n            id = yearStart;\r\n        }\r\n        this.cdr.detectChanges();\r\n        this.scrollToSelectedItem(id);\r\n    }\r\n    goNext() {\r\n        if (this.viewMode === 'days') {\r\n            this.nextMonth();\r\n            this.cdr.detectChanges();\r\n            return;\r\n        }\r\n        let id;\r\n        if (this.viewMode === 'months') {\r\n            this.currentDate = this.dateAdapter.addYears(this.currentDate, 1);\r\n            id = this.dateAdapter.getYear(this.currentDate);\r\n        }\r\n        if (this.viewMode === 'years') {\r\n            const yearStart = this.yearList[14] + 1;\r\n            this.yearList = Array.from({ length: 15 }, (_, i) => yearStart + i);\r\n            id = yearStart;\r\n        }\r\n        this.cdr.detectChanges();\r\n        this.scrollToSelectedItem(id);\r\n    }\r\n    prevMonth() {\r\n        if (this.isPrevMonthDisabled())\r\n            return;\r\n        this.currentDate = this.dateAdapter.addMonths(this.currentDate, -1);\r\n        this.generateCalendar();\r\n        this.scrollToSelectedItem(this.dateAdapter.getMonth(this.currentDate) + 1);\r\n    }\r\n    nextMonth() {\r\n        if (this.isNextMonthDisabled())\r\n            return;\r\n        this.currentDate = this.dateAdapter.addMonths(this.currentDate, 1);\r\n        this.generateCalendar();\r\n        this.scrollToSelectedItem(this.dateAdapter.getMonth(this.currentDate) + 1);\r\n    }\r\n    // ========== State Check Methods ==========\r\n    isSelected(date) {\r\n        if (this.isRange) {\r\n            return this.isRangeStart(date) || this.isRangeEnd(date);\r\n        }\r\n        return this.selectedDate && this.dateAdapter.isSameDay(date, this.selectedDate);\r\n    }\r\n    isRangeStart(date) {\r\n        return this.isRange &&\r\n            this.selectedStartDate &&\r\n            this.dateAdapter.isSameDay(date, this.selectedStartDate);\r\n    }\r\n    isRangeEnd(date) {\r\n        return this.isRange &&\r\n            this.selectedEndDate &&\r\n            this.dateAdapter.isSameDay(date, this.selectedEndDate);\r\n    }\r\n    isInRange(date) {\r\n        return this.isRange &&\r\n            this.selectedStartDate &&\r\n            (this.selectedEndDate || this.tempEndDate) &&\r\n            this.dateAdapter.isAfter(date, this.selectedStartDate) &&\r\n            this.dateAdapter.isBefore(date, this.selectedEndDate || this.tempEndDate);\r\n    }\r\n    isToday(date) {\r\n        return this.dateAdapter.isSameDay(date, this.dateAdapter.today()) && this.showToday;\r\n    }\r\n    isActiveMonth(month) {\r\n        return this.dateAdapter.getMonth(this.currentDate) === month - 1;\r\n    }\r\n    isActiveYear(year) {\r\n        return year === this.dateAdapter.getYear(this.currentDate);\r\n    }\r\n    isActiveYearRange(startYear) {\r\n        return startYear === this.yearList[0];\r\n    }\r\n    // ========== Disabled State Methods ==========\r\n    isDateDisabled(date) {\r\n        if ((this.minDate && this.dateAdapter.isBefore(date, this.minDate)) ||\r\n            (this.maxDate && this.dateAdapter.isAfter(date, this.maxDate))) {\r\n            return true;\r\n        }\r\n        // Check if date is in disabled dates array\r\n        const parsedDisabledDates = this.parseDisabledDates();\r\n        const isDisabledDate = parsedDisabledDates.some(disabledDate => this.dateAdapter.isSameDay(date, disabledDate));\r\n        // Check custom filter function if provided\r\n        const isFilterDisabled = this.disabledDatesFilter ?\r\n            this.disabledDatesFilter(date) :\r\n            false;\r\n        return isDisabledDate || isFilterDisabled;\r\n    }\r\n    isMonthDisabled(month) {\r\n        const year = this.dateAdapter.getYear(this.currentDate);\r\n        const startOfMonth = this.dateAdapter.createDate(year, month - 1, 1);\r\n        // Check if all days in month are disabled\r\n        const daysInMonth = this.dateAdapter.getDaysInMonth(startOfMonth);\r\n        let allDaysDisabled = true;\r\n        for (let day = 1; day <= daysInMonth; day++) {\r\n            const date = this.dateAdapter.createDate(year, month - 1, day);\r\n            if (!this.isDateDisabled(date)) {\r\n                allDaysDisabled = false;\r\n                break;\r\n            }\r\n        }\r\n        return allDaysDisabled;\r\n    }\r\n    isYearDisabled(year) {\r\n        if (this.minDate && this.dateAdapter.getYear(this.minDate) > year)\r\n            return true;\r\n        if (this.maxDate && this.dateAdapter.getYear(this.maxDate) < year)\r\n            return true;\r\n        // Check if all months in year are disabled\r\n        const firstOfMonth = this.dateAdapter.createDate(year, 0, 1);\r\n        let day = 1;\r\n        for (let date = firstOfMonth; date.getFullYear() == firstOfMonth.getFullYear(); date = this.dateAdapter.addDays(firstOfMonth, day++)) {\r\n            if (!this.isDateDisabled(date)) {\r\n                return false;\r\n            }\r\n        }\r\n        return true;\r\n    }\r\n    isYearRangeDisabled(yearRange) {\r\n        if (this.minDate && this.dateAdapter.getYear(this.minDate) > yearRange.end)\r\n            return true;\r\n        if (this.maxDate && this.dateAdapter.getYear(this.maxDate) < yearRange.start)\r\n            return true;\r\n        // Check if all years in range are disabled\r\n        for (let year = yearRange.start; year <= yearRange.end; year++) {\r\n            if (!this.isYearDisabled(year)) {\r\n                return false;\r\n            }\r\n        }\r\n        return true;\r\n    }\r\n    isPrevMonthDisabled() {\r\n        if (!this.minDate)\r\n            return false;\r\n        const minYear = this.dateAdapter.getYear(this.minDate);\r\n        switch (this.viewMode) {\r\n            case 'days':\r\n                const prevMonth = this.dateAdapter.getMonth(this.currentDate) - 1;\r\n                return this.dateAdapter.getMonth(this.minDate) > prevMonth;\r\n            case 'months':\r\n                const prevYear = this.dateAdapter.getYear(this.currentDate) - 1;\r\n                return minYear > prevYear;\r\n            case 'years':\r\n                return minYear > this.yearList[this.yearList.length - 1];\r\n            default:\r\n                return false;\r\n        }\r\n    }\r\n    isNextMonthDisabled() {\r\n        if (!this.maxDate)\r\n            return false;\r\n        const maxYear = this.dateAdapter.getYear(this.maxDate);\r\n        switch (this.viewMode) {\r\n            case 'days':\r\n                const nextMonth = this.dateAdapter.getMonth(this.currentDate) + 1;\r\n                return this.dateAdapter.getMonth(this.maxDate) < nextMonth;\r\n            case 'months':\r\n                const nextYear = this.dateAdapter.getYear(this.currentDate) + 1;\r\n                return maxYear < nextYear;\r\n            case 'years':\r\n                return maxYear < this.yearList[0];\r\n            default:\r\n                return false;\r\n        }\r\n    }\r\n    parseDisabledDates() {\r\n        return this.disabledDates.map(date => {\r\n            if (date instanceof Date) {\r\n                return this.dateAdapter.startOfDay(date);\r\n            }\r\n            const parsedDate = this.dateAdapter.parse(date, this.dateFormat);\r\n            return parsedDate || null;\r\n        }).filter(date => date !== null);\r\n    }\r\n    // ========== Event Handlers ==========\r\n    onMouseEnter(date, event) {\r\n        if (this.isRange && this.selectedStartDate && !this.selectedEndDate) {\r\n            this.tempEndDate = date;\r\n        }\r\n    }\r\n    onClickInside() {\r\n        this.clickInside.emit(true);\r\n    }\r\n    // ========== Utility Methods ==========\r\n    getMonthName(month) {\r\n        return this.dateAdapter.getMonthNames('long')[month - 1];\r\n    }\r\n    getCurrentMonthName() {\r\n        return this.dateAdapter.getMonthNames('long')[this.dateAdapter.getMonth(this.currentDate)];\r\n    }\r\n    getCurrentYear() {\r\n        return this.dateAdapter.getYear(this.currentDate);\r\n    }\r\n    getWeekDays() {\r\n        return this.weekDays;\r\n    }\r\n    isSameMonth(date1, date2) {\r\n        return this.dateAdapter.isSameMonth(date1, date2);\r\n    }\r\n    closeDatePicker() {\r\n        this.closePicker.emit();\r\n    }\r\n    // ========== Year Management Methods ==========\r\n    generateYearRanges(length = 15) {\r\n        const yearCount = 15;\r\n        const currentYear = this.dateAdapter.getYear(this.dateAdapter.today());\r\n        const startYear = currentYear - Math.floor(yearCount / 2) - (yearCount * Math.floor(length / 2));\r\n        this.yearRanges = [];\r\n        for (let i = 0; i < length; i++) {\r\n            const start = startYear + i * yearCount;\r\n            this.yearRanges.push({ start, end: start + 14 });\r\n        }\r\n    }\r\n    generateYearList(length = 15) {\r\n        const date = this.selectedDate || this.selectedEndDate || this.selectedStartDate || new Date();\r\n        const currentYear = this.dateAdapter.getYear(date);\r\n        let start;\r\n        if (this.viewMode === 'years') {\r\n            const currentRange = this.yearRanges.find(range => range.start <= currentYear && range.end >= currentYear);\r\n            start = currentRange ? currentRange.start : currentYear;\r\n        }\r\n        else {\r\n            start = this.dateAdapter.getYear(date) - Math.round(length / 2);\r\n        }\r\n        this.yearList = Array.from({ length }, (_, i) => start + i);\r\n    }\r\n    selectYearRange(startYear) {\r\n        this.yearList = Array.from({ length: 15 }, (_, i) => startYear + i);\r\n        this.viewMode = 'years';\r\n        this.cdr.detectChanges();\r\n        this.scrollToSelectedItem(startYear);\r\n    }\r\n    // ========== Period Selection Methods ==========\r\n    isActivePeriod(period) {\r\n        const sameStart = this.dateAdapter.isEqual(this.dateAdapter.startOfDay(period.value[0]), this.dateAdapter.startOfDay(this.selectedStartDate));\r\n        const sameEnd = this.dateAdapter.isEqual(this.dateAdapter.startOfDay(period.value[1]), this.dateAdapter.startOfDay(this.selectedEndDate));\r\n        if (period.value === 'custom') {\r\n            let isActiveOther = this.periods.find(p => p.arrow);\r\n            return !isActiveOther;\r\n        }\r\n        ;\r\n        period.arrow = sameStart && sameEnd;\r\n        return sameStart && sameEnd;\r\n    }\r\n    selectPeriod(period) {\r\n        this.selectedPeriod = period.value;\r\n        if (period.value !== 'custom') {\r\n            const [start, end] = period.value;\r\n            this.dateRangeSelected.emit({ start, end });\r\n        }\r\n    }\r\n    onTodayClick() {\r\n        this.currentDate = this.selectedDate = new Date();\r\n        this.generateCalendar();\r\n        this.selectDate(this.currentDate);\r\n        this.setTimePickerDate(this.currentDate);\r\n        this.cdr.detectChanges();\r\n    }\r\n    onOkClick() {\r\n        if (this.isRange) {\r\n            this.dateRangeSelected.emit({ start: this.selectedStartDate, end: this.selectedEndDate });\r\n            this.closeDatePicker();\r\n        }\r\n        else {\r\n            this.dateSelected.emit(this.selectedDate);\r\n        }\r\n    }\r\n    // ========== Scroll Management ==========\r\n    scrollToSelectedItem(id = null) {\r\n        if (!this.showSidebar)\r\n            return;\r\n        if (this.timeoutId != null) {\r\n            clearTimeout(this.timeoutId);\r\n        }\r\n        const itemId = this.determineScrollItemId(id);\r\n        if (!itemId || !this.itemSelector)\r\n            return;\r\n        this.timeoutId = setTimeout(() => {\r\n            const selectedElement = this.itemSelector.nativeElement.querySelector(`#selector_${itemId}`);\r\n            if (selectedElement) {\r\n                selectedElement.scrollIntoView({ behavior: 'smooth', block: 'center' });\r\n            }\r\n        }, 0);\r\n    }\r\n    determineScrollItemId(id) {\r\n        if (id != null)\r\n            return id;\r\n        if (!this.getDate)\r\n            return null;\r\n        switch (this.viewMode) {\r\n            case 'days':\r\n                return this.dateAdapter.getMonth(this.getDate) + 1;\r\n            case 'months':\r\n                return this.dateAdapter.getYear(this.getDate);\r\n            case 'years':\r\n                const currentYear = this.dateAdapter.getYear(this.getDate);\r\n                const currentRange = this.yearRanges.find(range => range.start <= currentYear && range.end >= currentYear);\r\n                return (currentRange === null || currentRange === void 0 ? void 0 : currentRange.start) || null;\r\n            default:\r\n                return null;\r\n        }\r\n    }\r\n    // ========== State Management ==========\r\n    handleChanges(changes) {\r\n        if (changes['calendarType']) {\r\n            this.setDateAdapter();\r\n            this.weekDays = this.dateAdapter.getDayOfWeekNames('short');\r\n        }\r\n        if (changes['selectedDate'] ||\r\n            changes['selectedStartDate'] ||\r\n            changes['selectedEndDate'] ||\r\n            changes['mode'] ||\r\n            changes['calendarType']) {\r\n            this.setInitialDate();\r\n            this.generateCalendar();\r\n        }\r\n        if (changes['minDate'] || changes['maxDate']) {\r\n            this.adjustCurrentDateToValidRange();\r\n        }\r\n    }\r\n    setInitialDate() {\r\n        this.currentDate = this.determineInitialDate();\r\n        this.setViewMode();\r\n        this.adjustCurrentDateToValidRange();\r\n    }\r\n    determineInitialDate() {\r\n        if (this.isRange) {\r\n            if (this.activeInput === 'start') {\r\n                return this.selectedStartDate || this.dateAdapter.today();\r\n            }\r\n            return this.selectedEndDate || this.selectedStartDate || this.dateAdapter.today();\r\n        }\r\n        return this.selectedDate || this.dateAdapter.today();\r\n    }\r\n    adjustCurrentDateToValidRange() {\r\n        let adjustedDate = this.currentDate;\r\n        if (this.minDate && this.dateAdapter.isBefore(adjustedDate, this.minDate)) {\r\n            adjustedDate = this.minDate;\r\n        }\r\n        else if (this.maxDate && this.dateAdapter.isAfter(adjustedDate, this.maxDate)) {\r\n            adjustedDate = this.maxDate;\r\n        }\r\n        if (!this.dateAdapter.isSameDay(this.currentDate, adjustedDate)) {\r\n            this.currentDate = adjustedDate;\r\n            this.generateCalendar();\r\n        }\r\n    }\r\n}\r\nDatePickerPopupComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"14.3.0\", ngImport: i0, type: DatePickerPopupComponent, deps: [{ token: i0.ElementRef }, { token: i0.ChangeDetectorRef }, { token: AsaDatePickerService }, { token: JalaliDateAdapter }, { token: GregorianDateAdapter }, { token: DestroyService }], target: i0.ɵɵFactoryTarget.Component });\r\nDatePickerPopupComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"14.0.0\", version: \"14.3.0\", type: DatePickerPopupComponent, isStandalone: true, selector: \"asa-date-picker-popup\", inputs: { rtl: \"rtl\", selectedDate: \"selectedDate\", selectedStartDate: \"selectedStartDate\", selectedEndDate: \"selectedEndDate\", mode: \"mode\", isRange: \"isRange\", customLabels: \"customLabels\", calendarType: \"calendarType\", minDate: \"minDate\", maxDate: \"maxDate\", cssClass: \"cssClass\", footerDescription: \"footerDescription\", activeInput: \"activeInput\", showSidebar: \"showSidebar\", showToday: \"showToday\", showTimePicker: \"showTimePicker\", timeDisplayFormat: \"timeDisplayFormat\", dateFormat: \"dateFormat\", disabledDates: \"disabledDates\", disabledDatesFilter: \"disabledDatesFilter\", disabledTimesFilter: \"disabledTimesFilter\", templates: \"templates\" }, outputs: { dateSelected: \"dateSelected\", dateRangeSelected: \"dateRangeSelected\", closePicker: \"closePicker\", clickInside: \"clickInside\" }, host: { listeners: { \"click\": \"onClickInside()\" } }, viewQueries: [{ propertyName: \"itemSelector\", first: true, predicate: [\"itemSelector\"], descendants: true }, { propertyName: \"timePicker\", first: true, predicate: TimePickerComponent, descendants: true }], usesOnChanges: true, ngImport: i0, template: `\n    <div class=\"date-picker-popup\" [class.rtl]=\"rtl\" [class]=\"cssClass\" tabindex=\"-1\">\n      <div class=\"date-picker-content\">\n        <ng-container *ngIf=\"showSidebar\">\n          <div *ngIf=\"isRange\" class=\"period-selector\">\n            <button\n              *ngFor=\"let period of periods\"\n              tabindex=\"-1\"\n              [class.active]=\"isActivePeriod(period)\"\n              (click)=\"selectPeriod(period)\"\n            >\n              {{ period.label }}\n              <span *ngIf=\"period.arrow\" class=\"arrow\">→</span>\n            </button>\n          </div>\n          <div *ngIf=\"!isRange\" class=\"side-selector\" #itemSelector>\n            <ng-container *ngIf=\"viewMode == 'days'\">\n              <button\n                *ngFor=\"let month of monthListNum\"\n                tabindex=\"-1\"\n                [id]=\"'selector_'+month\"\n                [class.active]=\"isActiveMonth(month)\"\n                [disabled]=\"isMonthDisabled(month)\"\n                (click)=\"selectMonth(month, false)\">\n                {{ getMonthName(month) }}\n              </button>\n            </ng-container>\n            <ng-container *ngIf=\"viewMode == 'months'\">\n              <button\n                *ngFor=\"let year of yearList\"\n                tabindex=\"-1\"\n                [id]=\"'selector_'+year\"\n                [class.active]=\"isActiveYear(year)\"\n                [disabled]=\"isYearDisabled(year)\"\n                (click)=\"selectYear(year, true)\"\n              >\n                {{ year }}\n              </button>\n            </ng-container>\n            <ng-container *ngIf=\"viewMode == 'years'\">\n              <button\n                tabindex=\"-1\"\n                *ngFor=\"let yearRange of yearRanges\"\n                [id]=\"'selector_'+yearRange.start\"\n                [class.active]=\"isActiveYearRange(yearRange.start)\"\n                [disabled]=\"isYearRangeDisabled(yearRange)\"\n                (click)=\"selectYearRange(yearRange.start)\"\n              >\n                {{ yearRange.start }} - {{ yearRange.end }}\n              </button>\n            </ng-container>\n          </div>\n        </ng-container>\n        <div class=\"calendar\">\n          <div class=\"header\">\n            <button class=\"asa-calendar-nav-left\" (click)=\"goPrev()\" [disabled]=\"isPrevMonthDisabled()\" tabindex=\"-1\"></button>\n            <span class=\"month-year\">\n              <span *ngIf=\"mode != 'year'\" class=\"month-name\" (click)=\"showMonthSelector()\">{{ getCurrentMonthName() }}</span>\n              <span class=\"year\" (click)=\"showYearSelector()\">{{ getCurrentYear() }}</span>\n            </span>\n            <button class=\"asa-calendar-nav-right\" (click)=\"goNext()\" [disabled]=\"isNextMonthDisabled()\" tabindex=\"-1\"></button>\n          </div>\n          <div *ngIf=\"viewMode == 'days'\">\n            <div *ngIf=\"viewMode === 'days'\" class=\"weekdays\">\n              <span *ngFor=\"let day of getWeekDays()\">{{ day }}</span>\n            </div>\n            <div *ngIf=\"viewMode === 'days'\" class=\"days\">\n              <button\n                *ngFor=\"let day of days\"\n                tabindex=\"-1\"\n                [class.different-month]=\"!isSameMonth(day, currentDate)\"\n                [class.selected]=\"isSelected(day)\"\n                [class.in-range]=\"isInRange(day)\"\n                [class.range-start]=\"isRangeStart(day)\"\n                [class.range-end]=\"isRangeEnd(day)\"\n                [class.today]=\"isToday(day)\"\n                [class.disabled]=\"isDateDisabled(day)\"\n                [disabled]=\"isDateDisabled(day)\"\n                (click)=\"selectDate(day)\"\n                (mouseenter)=\"onMouseEnter(day,$event)\"\n              >\n                <ng-container *ngIf=\"dayTemplate; else dayDefTemplate\">\n                  <ng-container *ngTemplateOutlet=\"$any(dayTemplate); context: { $implicit: day }\"></ng-container>\n                </ng-container>\n                <ng-template #dayDefTemplate>\n                  {{ dateAdapter.getDate(day) }}\n                </ng-template>\n              </button>\n            </div>\n          </div>\n          <div *ngIf=\"viewMode === 'months'\" class=\"months\">\n            <button\n              *ngFor=\"let month of monthListNum\"\n              tabindex=\"-1\"\n              [class.selected]=\"month === dateAdapter.getMonth(currentDate) + 1\"\n              [disabled]=\"isMonthDisabled(month)\"\n              (click)=\"selectMonth(month,false)\"\n            >\n              <ng-container *ngIf=\"monthTemplate; else monthDefTemplate\">\n                <ng-container *ngTemplateOutlet=\"$any(monthTemplate); context: { $implicit: month }\"></ng-container>\n              </ng-container>\n              <ng-template #monthDefTemplate>\n                {{ getMonthName(month) }}\n              </ng-template>\n            </button>\n          </div>\n          <div *ngIf=\"viewMode === 'years' || mode == 'year'\" class=\"years\">\n            <button\n              *ngFor=\"let year of yearList\"\n              tabindex=\"-1\"\n              [class.selected]=\"year === dateAdapter.getYear(currentDate)\"\n              [disabled]=\"isYearDisabled(year)\"\n              (click)=\"selectYear(year)\"\n            >\n              <ng-container *ngIf=\"yearTemplate; else yearDefTemplate\">\n                <ng-container *ngTemplateOutlet=\"$any(yearTemplate); context: { $implicit: year }\"></ng-container>\n              </ng-container>\n              <ng-template #yearDefTemplate>\n                {{ year }}\n              </ng-template>\n            </button>\n          </div>\n        </div>\n\n        <!-- Time Picker Integration -->\n        <div *ngIf=\"showTimePicker\" class=\"time-picker-section\">\n          <asa-time-picker\n            #timePicker\n            [rtl]=\"rtl\"\n            [dateAdapter]=\"dateAdapter\"\n            [valueType]=\"'date'\"\n            [displayFormat]=\"timeDisplayFormat\"\n            [inline]=\"true\"\n            [disabledTimesFilter]=\"disabledTimesFilter\"\n            [cssClass]=\"'embedded-time-picker'\"\n            [selectedDate]=\"selectedDate\"\n            (timeChange)=\"onTimeChange($event)\"\n          ></asa-time-picker>\n        </div>\n      </div>\n      <div class=\"date-picker-footer\" *ngIf=\"footerDescription || showTimePicker || showToday\">\n        <div class=\"footer-description\" *ngIf=\"footerDescription\" [innerHtml]=\"footerDescription\">\n        </div>\n        <div class=\"footer-actions\">\n          <button *ngIf=\"showTimePicker\" class=\"footer-button ok\" (click)=\"onOkClick()\">{{ lang.ok }}</button>\n          <button *ngIf=\"showToday\" class=\"footer-button\" (click)=\"onTodayClick()\">{{ lang.today }}</button>\n        </div>\n      </div>\n    </div>\n  `, isInline: true, styles: [\":host *{font-family:inherit;font-weight:400;box-sizing:border-box;padding:0;margin:0}:host.up .date-picker-popup{bottom:100%;margin-bottom:5px}:host.down .date-picker-popup{top:100%;margin-top:5px}.date-picker-popup{display:flex;flex-direction:column;border-radius:4px;box-shadow:0 2px 10px #0000001a;overflow:hidden;z-index:1000;width:fit-content;border:1px solid #ddd;background:white}.date-picker-content{display:flex;flex-direction:row;max-height:295px}.date-picker-footer{border-top:1px solid #f0f0f0;padding:10px;display:flex;flex-direction:column;justify-content:space-between}.side-selector,.period-selector{width:120px;border-inline-end:1px solid #f0f0f0}.side-selector button,.period-selector button{display:flex;justify-content:space-between;font-size:14px;width:100%;padding:10px;text-align:start;border:none;background:none;cursor:pointer;border-block-end:1px solid #f0f0f0;color:#555;transition:background-color .3s}.side-selector button:hover,.period-selector button:hover{background-color:#e6f7ff}.side-selector button.active,.period-selector button.active{background-color:#bfeaff;color:#0175e0;width:100%}.side-selector{overflow:auto;scrollbar-width:none;-ms-overflow-style:none}.side-selector::-webkit-scrollbar{display:none}.calendar{padding:10px 15px 15px;flex-grow:1;background:#FFF;width:280px;max-width:280px}.header{display:flex;justify-content:space-between;align-items:center;margin-bottom:5px;padding-bottom:2px;border-bottom:1px solid #f0f0f0}.header button{background:none;border:none;font-size:16px;cursor:pointer;padding:4px 5px}.header .month-name,.header .year{color:#47366c}.weekdays{display:grid;grid-template-columns:repeat(7,1fr);text-align:center;margin-bottom:5px;font-size:14px;color:#18396cb0}.weekdays span{font-weight:700}.days{display:grid;grid-template-columns:repeat(7,1fr);gap:2px}.days button{position:relative;aspect-ratio:1;border:none;background:none;cursor:pointer;border-radius:50%;font-size:14px;color:#555;transition:background-color .3s,color .3s}.days button:hover{background-color:#e6f7ff}.days button.different-month{color:#ccc}.days button.selected,.days button.range-end.in-range,.days button.range-start.in-range{background-color:#1890ff;color:#fff}.days button.in-range{background-color:#e6f7ff;color:#1890ff}.days button.today{border:2px solid #29b9ff}.days button.today span{position:absolute;bottom:-1rem;right:.6rem;padding:0;margin:0;font-size:36px;color:#9370db}.days button.disabled{color:#aaa;background:#fafafa;opacity:1}.days button.disabled:after{content:\\\"\\\";background:rgba(252,103,143,.6666666667);position:absolute;right:20%;top:45%;width:20px;height:1px;transform:rotate(145deg)}.month-year{display:flex;align-items:center;cursor:pointer;font-size:16px}.month-name,.year{margin:0 5px}.years,.months{display:grid;grid-template-columns:repeat(3,1fr)}.years button,.months button{padding:10px;border:none;background:none;cursor:pointer;font-size:14px;position:relative}.years button.selected,.months button.selected{background-color:#1890ff;color:#fff}.months{gap:1rem .3rem}.years{gap:.5rem .3rem!important}.footer-description{font-size:13px;color:#666}.footer-actions{display:flex;gap:10px;justify-content:end;flex-direction:row-reverse}.footer-button{background:none;border:none;color:#1890ff;cursor:pointer;font-size:14px;padding:2px 6px;transition:color .3s}.footer-button.ok{background:#1890ff;border-radius:1px;color:#fff}.footer-button.ok:hover{color:#eee}.footer-button:hover{color:#40a9ff}.asa-calendar-nav-right:before,.asa-calendar-nav-left:before{position:relative;content:\\\"\\\";display:inline-block;height:6px;width:6px;vertical-align:baseline;border-style:solid;border-color:#555;border-width:2px 2px 0 0}.asa-calendar-nav-left:before{transform:rotate(-135deg)!important}.asa-calendar-nav-right:before{transform:rotate(45deg)}button:disabled{opacity:.5;cursor:not-allowed}[tabindex=\\\"-1\\\"]:focus{outline:none!important}.rtl{direction:rtl}.rtl .arrow{rotate:180deg}.rtl .asa-calendar-nav-left:before{transform:rotate(45deg)!important}.rtl .asa-calendar-nav-right:before{transform:rotate(-135deg)}.rtl .calendar{direction:rtl}[dir=rtl] .arrow{rotate:180deg}.time-picker-section{border-inline-start:1px solid #f0f0f0}\\n\"], dependencies: [{ kind: \"directive\", type: NgIf, selector: \"[ngIf]\", inputs: [\"ngIf\", \"ngIfThen\", \"ngIfElse\"] }, { kind: \"directive\", type: NgFor, selector: \"[ngFor][ngForOf]\", inputs: [\"ngForOf\", \"ngForTrackBy\", \"ngForTemplate\"] }, { kind: \"directive\", type: NgTemplateOutlet, selector: \"[ngTemplateOutlet]\", inputs: [\"ngTemplateOutletContext\", \"ngTemplateOutlet\", \"ngTemplateOutletInjector\"] }, { kind: \"component\", type: TimePickerComponent, selector: \"asa-time-picker\", inputs: [\"placeholder\", \"rtl\", \"placement\", \"minTime\", \"maxTime\", \"lang\", \"valueType\", \"cssClass\", \"showIcon\", \"dateAdapter\", \"inline\", \"disableInputMask\", \"disabled\", \"disabledTimesFilter\", \"allowEmpty\", \"readOnly\", \"readOnlyInput\", \"displayFormat\", \"selectedDate\"], outputs: [\"timeChange\", \"openChange\"] }], changeDetection: i0.ChangeDetectionStrategy.OnPush });\r\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"14.3.0\", ngImport: i0, type: DatePickerPopupComponent, decorators: [{\r\n            type: Component,\r\n            args: [{ selector: 'asa-date-picker-popup', standalone: true, changeDetection: ChangeDetectionStrategy.OnPush, imports: [\r\n                        NgIf,\r\n                        NgFor,\r\n                        NgTemplateOutlet,\r\n                        TimePickerComponent\r\n                    ], template: `\n    <div class=\"date-picker-popup\" [class.rtl]=\"rtl\" [class]=\"cssClass\" tabindex=\"-1\">\n      <div class=\"date-picker-content\">\n        <ng-container *ngIf=\"showSidebar\">\n          <div *ngIf=\"isRange\" class=\"period-selector\">\n            <button\n              *ngFor=\"let period of periods\"\n              tabindex=\"-1\"\n              [class.active]=\"isActivePeriod(period)\"\n              (click)=\"selectPeriod(period)\"\n            >\n              {{ period.label }}\n              <span *ngIf=\"period.arrow\" class=\"arrow\">→</span>\n            </button>\n          </div>\n          <div *ngIf=\"!isRange\" class=\"side-selector\" #itemSelector>\n            <ng-container *ngIf=\"viewMode == 'days'\">\n              <button\n                *ngFor=\"let month of monthListNum\"\n                tabindex=\"-1\"\n                [id]=\"'selector_'+month\"\n                [class.active]=\"isActiveMonth(month)\"\n                [disabled]=\"isMonthDisabled(month)\"\n                (click)=\"selectMonth(month, false)\">\n                {{ getMonthName(month) }}\n              </button>\n            </ng-container>\n            <ng-container *ngIf=\"viewMode == 'months'\">\n              <button\n                *ngFor=\"let year of yearList\"\n                tabindex=\"-1\"\n                [id]=\"'selector_'+year\"\n                [class.active]=\"isActiveYear(year)\"\n                [disabled]=\"isYearDisabled(year)\"\n                (click)=\"selectYear(year, true)\"\n              >\n                {{ year }}\n              </button>\n            </ng-container>\n            <ng-container *ngIf=\"viewMode == 'years'\">\n              <button\n                tabindex=\"-1\"\n                *ngFor=\"let yearRange of yearRanges\"\n                [id]=\"'selector_'+yearRange.start\"\n                [class.active]=\"isActiveYearRange(yearRange.start)\"\n                [disabled]=\"isYearRangeDisabled(yearRange)\"\n                (click)=\"selectYearRange(yearRange.start)\"\n              >\n                {{ yearRange.start }} - {{ yearRange.end }}\n              </button>\n            </ng-container>\n          </div>\n        </ng-container>\n        <div class=\"calendar\">\n          <div class=\"header\">\n            <button class=\"asa-calendar-nav-left\" (click)=\"goPrev()\" [disabled]=\"isPrevMonthDisabled()\" tabindex=\"-1\"></button>\n            <span class=\"month-year\">\n              <span *ngIf=\"mode != 'year'\" class=\"month-name\" (click)=\"showMonthSelector()\">{{ getCurrentMonthName() }}</span>\n              <span class=\"year\" (click)=\"showYearSelector()\">{{ getCurrentYear() }}</span>\n            </span>\n            <button class=\"asa-calendar-nav-right\" (click)=\"goNext()\" [disabled]=\"isNextMonthDisabled()\" tabindex=\"-1\"></button>\n          </div>\n          <div *ngIf=\"viewMode == 'days'\">\n            <div *ngIf=\"viewMode === 'days'\" class=\"weekdays\">\n              <span *ngFor=\"let day of getWeekDays()\">{{ day }}</span>\n            </div>\n            <div *ngIf=\"viewMode === 'days'\" class=\"days\">\n              <button\n                *ngFor=\"let day of days\"\n                tabindex=\"-1\"\n                [class.different-month]=\"!isSameMonth(day, currentDate)\"\n                [class.selected]=\"isSelected(day)\"\n                [class.in-range]=\"isInRange(day)\"\n                [class.range-start]=\"isRangeStart(day)\"\n                [class.range-end]=\"isRangeEnd(day)\"\n                [class.today]=\"isToday(day)\"\n                [class.disabled]=\"isDateDisabled(day)\"\n                [disabled]=\"isDateDisabled(day)\"\n                (click)=\"selectDate(day)\"\n                (mouseenter)=\"onMouseEnter(day,$event)\"\n              >\n                <ng-container *ngIf=\"dayTemplate; else dayDefTemplate\">\n                  <ng-container *ngTemplateOutlet=\"$any(dayTemplate); context: { $implicit: day }\"></ng-container>\n                </ng-container>\n                <ng-template #dayDefTemplate>\n                  {{ dateAdapter.getDate(day) }}\n                </ng-template>\n              </button>\n            </div>\n          </div>\n          <div *ngIf=\"viewMode === 'months'\" class=\"months\">\n            <button\n              *ngFor=\"let month of monthListNum\"\n              tabindex=\"-1\"\n              [class.selected]=\"month === dateAdapter.getMonth(currentDate) + 1\"\n              [disabled]=\"isMonthDisabled(month)\"\n              (click)=\"selectMonth(month,false)\"\n            >\n              <ng-container *ngIf=\"monthTemplate; else monthDefTemplate\">\n                <ng-container *ngTemplateOutlet=\"$any(monthTemplate); context: { $implicit: month }\"></ng-container>\n              </ng-container>\n              <ng-template #monthDefTemplate>\n                {{ getMonthName(month) }}\n              </ng-template>\n            </button>\n          </div>\n          <div *ngIf=\"viewMode === 'years' || mode == 'year'\" class=\"years\">\n            <button\n              *ngFor=\"let year of yearList\"\n              tabindex=\"-1\"\n              [class.selected]=\"year === dateAdapter.getYear(currentDate)\"\n              [disabled]=\"isYearDisabled(year)\"\n              (click)=\"selectYear(year)\"\n            >\n              <ng-container *ngIf=\"yearTemplate; else yearDefTemplate\">\n                <ng-container *ngTemplateOutlet=\"$any(yearTemplate); context: { $implicit: year }\"></ng-container>\n              </ng-container>\n              <ng-template #yearDefTemplate>\n                {{ year }}\n              </ng-template>\n            </button>\n          </div>\n        </div>\n\n        <!-- Time Picker Integration -->\n        <div *ngIf=\"showTimePicker\" class=\"time-picker-section\">\n          <asa-time-picker\n            #timePicker\n            [rtl]=\"rtl\"\n            [dateAdapter]=\"dateAdapter\"\n            [valueType]=\"'date'\"\n            [displayFormat]=\"timeDisplayFormat\"\n            [inline]=\"true\"\n            [disabledTimesFilter]=\"disabledTimesFilter\"\n            [cssClass]=\"'embedded-time-picker'\"\n            [selectedDate]=\"selectedDate\"\n            (timeChange)=\"onTimeChange($event)\"\n          ></asa-time-picker>\n        </div>\n      </div>\n      <div class=\"date-picker-footer\" *ngIf=\"footerDescription || showTimePicker || showToday\">\n        <div class=\"footer-description\" *ngIf=\"footerDescription\" [innerHtml]=\"footerDescription\">\n        </div>\n        <div class=\"footer-actions\">\n          <button *ngIf=\"showTimePicker\" class=\"footer-button ok\" (click)=\"onOkClick()\">{{ lang.ok }}</button>\n          <button *ngIf=\"showToday\" class=\"footer-button\" (click)=\"onTodayClick()\">{{ lang.today }}</button>\n        </div>\n      </div>\n    </div>\n  `, styles: [\":host *{font-family:inherit;font-weight:400;box-sizing:border-box;padding:0;margin:0}:host.up .date-picker-popup{bottom:100%;margin-bottom:5px}:host.down .date-picker-popup{top:100%;margin-top:5px}.date-picker-popup{display:flex;flex-direction:column;border-radius:4px;box-shadow:0 2px 10px #0000001a;overflow:hidden;z-index:1000;width:fit-content;border:1px solid #ddd;background:white}.date-picker-content{display:flex;flex-direction:row;max-height:295px}.date-picker-footer{border-top:1px solid #f0f0f0;padding:10px;display:flex;flex-direction:column;justify-content:space-between}.side-selector,.period-selector{width:120px;border-inline-end:1px solid #f0f0f0}.side-selector button,.period-selector button{display:flex;justify-content:space-between;font-size:14px;width:100%;padding:10px;text-align:start;border:none;background:none;cursor:pointer;border-block-end:1px solid #f0f0f0;color:#555;transition:background-color .3s}.side-selector button:hover,.period-selector button:hover{background-color:#e6f7ff}.side-selector button.active,.period-selector button.active{background-color:#bfeaff;color:#0175e0;width:100%}.side-selector{overflow:auto;scrollbar-width:none;-ms-overflow-style:none}.side-selector::-webkit-scrollbar{display:none}.calendar{padding:10px 15px 15px;flex-grow:1;background:#FFF;width:280px;max-width:280px}.header{display:flex;justify-content:space-between;align-items:center;margin-bottom:5px;padding-bottom:2px;border-bottom:1px solid #f0f0f0}.header button{background:none;border:none;font-size:16px;cursor:pointer;padding:4px 5px}.header .month-name,.header .year{color:#47366c}.weekdays{display:grid;grid-template-columns:repeat(7,1fr);text-align:center;margin-bottom:5px;font-size:14px;color:#18396cb0}.weekdays span{font-weight:700}.days{display:grid;grid-template-columns:repeat(7,1fr);gap:2px}.days button{position:relative;aspect-ratio:1;border:none;background:none;cursor:pointer;border-radius:50%;font-size:14px;color:#555;transition:background-color .3s,color .3s}.days button:hover{background-color:#e6f7ff}.days button.different-month{color:#ccc}.days button.selected,.days button.range-end.in-range,.days button.range-start.in-range{background-color:#1890ff;color:#fff}.days button.in-range{background-color:#e6f7ff;color:#1890ff}.days button.today{border:2px solid #29b9ff}.days button.today span{position:absolute;bottom:-1rem;right:.6rem;padding:0;margin:0;font-size:36px;color:#9370db}.days button.disabled{color:#aaa;background:#fafafa;opacity:1}.days button.disabled:after{content:\\\"\\\";background:rgba(252,103,143,.6666666667);position:absolute;right:20%;top:45%;width:20px;height:1px;transform:rotate(145deg)}.month-year{display:flex;align-items:center;cursor:pointer;font-size:16px}.month-name,.year{margin:0 5px}.years,.months{display:grid;grid-template-columns:repeat(3,1fr)}.years button,.months button{padding:10px;border:none;background:none;cursor:pointer;font-size:14px;position:relative}.years button.selected,.months button.selected{background-color:#1890ff;color:#fff}.months{gap:1rem .3rem}.years{gap:.5rem .3rem!important}.footer-description{font-size:13px;color:#666}.footer-actions{display:flex;gap:10px;justify-content:end;flex-direction:row-reverse}.footer-button{background:none;border:none;color:#1890ff;cursor:pointer;font-size:14px;padding:2px 6px;transition:color .3s}.footer-button.ok{background:#1890ff;border-radius:1px;color:#fff}.footer-button.ok:hover{color:#eee}.footer-button:hover{color:#40a9ff}.asa-calendar-nav-right:before,.asa-calendar-nav-left:before{position:relative;content:\\\"\\\";display:inline-block;height:6px;width:6px;vertical-align:baseline;border-style:solid;border-color:#555;border-width:2px 2px 0 0}.asa-calendar-nav-left:before{transform:rotate(-135deg)!important}.asa-calendar-nav-right:before{transform:rotate(45deg)}button:disabled{opacity:.5;cursor:not-allowed}[tabindex=\\\"-1\\\"]:focus{outline:none!important}.rtl{direction:rtl}.rtl .arrow{rotate:180deg}.rtl .asa-calendar-nav-left:before{transform:rotate(45deg)!important}.rtl .asa-calendar-nav-right:before{transform:rotate(-135deg)}.rtl .calendar{direction:rtl}[dir=rtl] .arrow{rotate:180deg}.time-picker-section{border-inline-start:1px solid #f0f0f0}\\n\"] }]\r\n        }], ctorParameters: function () { return [{ type: i0.ElementRef }, { type: i0.ChangeDetectorRef }, { type: AsaDatePickerService }, { type: JalaliDateAdapter }, { type: GregorianDateAdapter }, { type: DestroyService }]; }, propDecorators: { rtl: [{\r\n                type: Input\r\n            }], selectedDate: [{\r\n                type: Input\r\n            }], selectedStartDate: [{\r\n                type: Input\r\n            }], selectedEndDate: [{\r\n                type: Input\r\n            }], mode: [{\r\n                type: Input\r\n            }], isRange: [{\r\n                type: Input\r\n            }], customLabels: [{\r\n                type: Input\r\n            }], calendarType: [{\r\n                type: Input\r\n            }], minDate: [{\r\n                type: Input\r\n            }], maxDate: [{\r\n                type: Input\r\n            }], cssClass: [{\r\n                type: Input\r\n            }], footerDescription: [{\r\n                type: Input\r\n            }], activeInput: [{\r\n                type: Input\r\n            }], showSidebar: [{\r\n                type: Input\r\n            }], showToday: [{\r\n                type: Input\r\n            }], showTimePicker: [{\r\n                type: Input\r\n            }], timeDisplayFormat: [{\r\n                type: Input\r\n            }], dateFormat: [{\r\n                type: Input\r\n            }], disabledDates: [{\r\n                type: Input\r\n            }], disabledDatesFilter: [{\r\n                type: Input\r\n            }], disabledTimesFilter: [{\r\n                type: Input\r\n            }], templates: [{\r\n                type: Input\r\n            }], dateSelected: [{\r\n                type: Output\r\n            }], dateRangeSelected: [{\r\n                type: Output\r\n            }], closePicker: [{\r\n                type: Output\r\n            }], clickInside: [{\r\n                type: Output\r\n            }], itemSelector: [{\r\n                type: ViewChild,\r\n                args: ['itemSelector']\r\n            }], timePicker: [{\r\n                type: ViewChild,\r\n                args: [TimePickerComponent]\r\n            }], onClickInside: [{\r\n                type: HostListener,\r\n                args: ['click']\r\n            }] } });\n\nclass CustomTemplate {\r\n    constructor(template) {\r\n        this.template = template;\r\n    }\r\n    getType() {\r\n        return this.name;\r\n    }\r\n}\r\nCustomTemplate.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"14.3.0\", ngImport: i0, type: CustomTemplate, deps: [{ token: i0.TemplateRef }], target: i0.ɵɵFactoryTarget.Directive });\r\nCustomTemplate.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"14.0.0\", version: \"14.3.0\", type: CustomTemplate, isStandalone: true, selector: \"[Template]\", inputs: { type: \"type\", name: [\"Template\", \"name\"] }, ngImport: i0 });\r\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"14.3.0\", ngImport: i0, type: CustomTemplate, decorators: [{\r\n            type: Directive,\r\n            args: [{\r\n                    selector: '[Template]',\r\n                    standalone: true,\r\n                    host: {}\r\n                }]\r\n        }], ctorParameters: function () { return [{ type: i0.TemplateRef }]; }, propDecorators: { type: [{\r\n                type: Input\r\n            }], name: [{\r\n                type: Input,\r\n                args: ['Template']\r\n            }] } });\n\nclass AsaDatePickerComponent {\r\n    constructor(fb, elementRef, renderer, cdref, dpService, destroy$, ngZone, jalali, gregorian, doc) {\r\n        this.fb = fb;\r\n        this.elementRef = elementRef;\r\n        this.renderer = renderer;\r\n        this.cdref = cdref;\r\n        this.dpService = dpService;\r\n        this.destroy$ = destroy$;\r\n        this.ngZone = ngZone;\r\n        this.jalali = jalali;\r\n        this.gregorian = gregorian;\r\n        // ========== Input Properties ==========\r\n        this.rtl = false;\r\n        this.mode = 'day';\r\n        this.isRange = false;\r\n        this.calendarType = 'gregorian';\r\n        this.cssClass = '';\r\n        this.footerDescription = '';\r\n        this.placement = 'bottomRight';\r\n        this.disabled = false;\r\n        this.isInline = false;\r\n        this.showSidebar = true;\r\n        this.showToday = false;\r\n        this.valueFormat = 'gregorian';\r\n        this.disableInputMask = false;\r\n        this.disabledDates = [];\r\n        this.allowEmpty = false;\r\n        this.readOnly = false;\r\n        this.readOnlyInput = false;\r\n        // ========== Output Properties ==========\r\n        this.onFocus = new EventEmitter();\r\n        this.onBlur = new EventEmitter();\r\n        this.onChangeValue = new EventEmitter();\r\n        this.onOpenChange = new EventEmitter();\r\n        this.overlayPositions = [...DEFAULT_DATE_PICKER_POSITIONS];\r\n        this.currentPositionX = 'start';\r\n        this.currentPositionY = 'bottom';\r\n        this.isOpen = false;\r\n        this.selectedDate = null;\r\n        this.selectedStartDate = null;\r\n        this.selectedEndDate = null;\r\n        this.activeInput = '';\r\n        this.hideStateHelper = false;\r\n        this.isInternalChange = false;\r\n        this.lastEmittedValue = null;\r\n        this.showTimePicker = false;\r\n        this.timeDisplayFormat = 'HH:mm';\r\n        this._format = 'yyyy/MM/dd';\r\n        // ========== ControlValueAccessor Implementation ==========\r\n        this.onChange = () => { };\r\n        this.onTouch = () => { };\r\n        this.initializeComponent(doc);\r\n    }\r\n    set minDate(date) {\r\n        if (date) {\r\n            this._minDate = date;\r\n        }\r\n    }\r\n    ;\r\n    get minDate() {\r\n        return this._minDate;\r\n    }\r\n    set maxDate(date) {\r\n        if (date) {\r\n            this._maxDate = date;\r\n        }\r\n    }\r\n    ;\r\n    get maxDate() {\r\n        return this._maxDate;\r\n    }\r\n    set format(value) {\r\n        this._format = value;\r\n        this.showTimePicker = this.hasTimeComponent(value);\r\n        this.timeDisplayFormat = this.extractTimeFormat(value);\r\n    }\r\n    get format() {\r\n        return this._format;\r\n    }\r\n    get valueAdapter() {\r\n        return this.valueFormat == 'jalali' ? this.jalali : this.gregorian;\r\n    }\r\n    // ========== Lifecycle Hooks ==========\r\n    ngOnInit() {\r\n        this.initialize();\r\n        document.addEventListener('click', this.documentClickListener);\r\n    }\r\n    ngOnChanges(changes) {\r\n        this.handleChanges(changes);\r\n    }\r\n    ngAfterViewInit() {\r\n        var _a, _b;\r\n        this.setupAfterViewInit();\r\n        this._minDate = (_a = this.valueAdapter) === null || _a === void 0 ? void 0 : _a.parse(this._minDate, this.extractDateFormat(this.format));\r\n        this._maxDate = (_b = this.valueAdapter) === null || _b === void 0 ? void 0 : _b.parse(this._maxDate, this.extractDateFormat(this.format));\r\n    }\r\n    ngOnDestroy() {\r\n        this.destroy$.next();\r\n        this.destroy$.complete();\r\n        document.removeEventListener('click', this.documentClickListener);\r\n    }\r\n    // ========== Initialization Methods ==========\r\n    initializeComponent(doc) {\r\n        this.origin = new CdkOverlayOrigin(this.elementRef);\r\n        this.document = doc;\r\n        this.form = this.fb.group({\r\n            dateInput: [''],\r\n            startDateInput: [''],\r\n            endDateInput: ['']\r\n        });\r\n        this.documentClickListener = this.handleDocumentClick.bind(this);\r\n        this.lang = this.calendarType === 'jalali' ? this.dpService.locale_fa : this.dpService.locale_en;\r\n        this.dpService.locale = this.lang;\r\n    }\r\n    initialize() {\r\n        this.setDateAdapter();\r\n        this.setupFormControls();\r\n    }\r\n    setupAfterViewInit() {\r\n        this.setupActiveInputSubscription();\r\n        this.setupMouseDownEventHandler();\r\n    }\r\n    // ========== Date Adapter Methods ==========\r\n    setDateAdapter() {\r\n        this.dateAdapter = this.calendarType === 'jalali' ? this.jalali : this.gregorian;\r\n    }\r\n    // ========== Form Control Methods ==========\r\n    setupFormControls() {\r\n        var _a, _b, _c;\r\n        if (this.isRange) {\r\n            (_a = this.form.get('startDateInput')) === null || _a === void 0 ? void 0 : _a.valueChanges.pipe(takeUntil$1(this.destroy$)).subscribe(value => this.onInputChange(value, 'start'));\r\n            (_b = this.form.get('endDateInput')) === null || _b === void 0 ? void 0 : _b.valueChanges.pipe(takeUntil$1(this.destroy$)).subscribe(value => this.onInputChange(value, 'end'));\r\n        }\r\n        else {\r\n            (_c = this.form.get('dateInput')) === null || _c === void 0 ? void 0 : _c.valueChanges.pipe(takeUntil$1(this.destroy$)).subscribe(value => this.onInputChange(value));\r\n        }\r\n    }\r\n    // ========== Event Handlers ==========\r\n    handleChanges(changes) {\r\n        var _a, _b;\r\n        if (changes['calendarType']) {\r\n            this.setDateAdapter();\r\n            this.updateInputValue();\r\n            this.lang = this.calendarType === 'jalali' ? this.dpService.locale_fa : this.dpService.locale_en;\r\n            this.dpService.locale = this.lang;\r\n        }\r\n        if (changes['minDate'] || changes['maxDate']) {\r\n            this._minDate = (_a = this.valueAdapter) === null || _a === void 0 ? void 0 : _a.parse(this._minDate, this.extractDateFormat(this.format));\r\n            this._maxDate = (_b = this.valueAdapter) === null || _b === void 0 ? void 0 : _b.parse(this._maxDate, this.extractDateFormat(this.format));\r\n            this.form.updateValueAndValidity();\r\n        }\r\n        if (changes['mode'] || changes['isRange']) {\r\n            this.setupFormControls();\r\n        }\r\n        if (changes['placement']) {\r\n            this.setPlacement(this.placement);\r\n        }\r\n        if (changes['lang']) {\r\n            this.lang = changes['lang'].currentValue;\r\n            this.dpService.locale = this.lang;\r\n        }\r\n        if (changes['mode'] && !changes['format']) {\r\n            this.format = this.getFormatForMode();\r\n        }\r\n        if (changes['isRange'] && this.isRange == false) {\r\n            this.origin = new CdkOverlayOrigin(this.elementRef);\r\n        }\r\n        if (changes['valueFormat']) {\r\n            this.emitValueIfChanged();\r\n        }\r\n    }\r\n    handleDocumentClick(event) {\r\n        if (!this.elementRef.nativeElement.contains(event.target)) {\r\n            if (this.isOpen) {\r\n                this.close();\r\n                this.onInputBlur(this.activeInput, event);\r\n            }\r\n            this.hideStateHelper = false;\r\n        }\r\n    }\r\n    // ========== Input Handling Methods ==========\r\n    onInputChange(value, inputType) {\r\n        if (!this.isInternalChange) {\r\n            if (this.isRange) {\r\n                this.handleRangeInputChange(value, inputType);\r\n            }\r\n            else {\r\n                this.handleSingleInputChange(value);\r\n            }\r\n            this.updateDatePickerPopup();\r\n        }\r\n    }\r\n    handleRangeInputChange(value, inputType) {\r\n        const date = this.dateAdapter.parse(value, this.format);\r\n        if (date) {\r\n            if (inputType === 'start') {\r\n                this.selectedStartDate = this.clampDate(date);\r\n            }\r\n            else if (inputType === 'end') {\r\n                this.selectedEndDate = this.clampDate(date);\r\n            }\r\n            this.emitValueIfChanged();\r\n        }\r\n    }\r\n    handleSingleInputChange(value) {\r\n        const date = this.dateAdapter.parse(value, this.format);\r\n        if (date) {\r\n            this.selectedDate = this.clampDate(date);\r\n            this.emitValueIfChanged();\r\n        }\r\n    }\r\n    // ========== Value Emission Methods ==========\r\n    emitValueIfChanged() {\r\n        const newValue = this.prepareValueForEmission();\r\n        if (newValue && JSON.stringify(newValue) !== JSON.stringify(this.lastEmittedValue)) {\r\n            this.lastEmittedValue = newValue;\r\n            this.onChange(newValue);\r\n            this.onChangeValue.emit(newValue);\r\n        }\r\n    }\r\n    prepareValueForEmission() {\r\n        if (this.isRange) {\r\n            if (this.selectedStartDate && this.selectedEndDate) {\r\n                return {\r\n                    start: this.convertDateToFormat(this.selectedStartDate, this.calendarType),\r\n                    end: this.convertDateToFormat(this.selectedEndDate, this.calendarType)\r\n                };\r\n            }\r\n        }\r\n        else if (this.selectedDate) {\r\n            return this.convertDateToFormat(this.selectedDate, this.calendarType);\r\n        }\r\n        return null;\r\n    }\r\n    // ========== Date Selection Methods ==========\r\n    onDateSelected(date) {\r\n        const clampedDate = this.clampDate(date);\r\n        if (this.isRange) {\r\n            this.handleRangeDateSelection(clampedDate);\r\n        }\r\n        else {\r\n            this.handleSingleDateSelection(clampedDate);\r\n        }\r\n        this.hideStateHelper = true;\r\n        this.updateDatePickerPopup();\r\n        this.focus();\r\n    }\r\n    handleRangeDateSelection(date) {\r\n        var _a, _b, _c;\r\n        if (!this.selectedStartDate || (this.selectedStartDate && this.selectedEndDate) ||\r\n            this.dateAdapter.isBefore(date, this.selectedStartDate)) {\r\n            this.selectedStartDate = date;\r\n            this.selectedEndDate = null;\r\n            (_a = this.form.get('startDateInput')) === null || _a === void 0 ? void 0 : _a.setValue(this.dateAdapter.format(date, this.format), { emitEvent: false });\r\n            (_b = this.form.get('endDateInput')) === null || _b === void 0 ? void 0 : _b.setValue('', { emitEvent: false });\r\n        }\r\n        else {\r\n            this.selectedEndDate = date;\r\n            (_c = this.form.get('endDateInput')) === null || _c === void 0 ? void 0 : _c.setValue(this.dateAdapter.format(date, this.format), { emitEvent: false });\r\n            this.emitValueIfChanged();\r\n            this.close();\r\n        }\r\n    }\r\n    handleSingleDateSelection(date) {\r\n        var _a;\r\n        this.selectedDate = date;\r\n        const formattedDate = this.dateAdapter.format(date, this.format);\r\n        (_a = this.form.get('dateInput')) === null || _a === void 0 ? void 0 : _a.setValue(formattedDate, { emitEvent: false });\r\n        this.emitValueIfChanged();\r\n        this.close();\r\n    }\r\n    // ========== Date Range Methods ==========\r\n    onDateRangeSelected(dateRange) {\r\n        var _a, _b;\r\n        this.hideStateHelper = true;\r\n        this.selectedStartDate = this.clampDate(dateRange.start);\r\n        const startFormatted = this.dateAdapter.format(this.selectedStartDate, this.format);\r\n        (_a = this.form.get('startDateInput')) === null || _a === void 0 ? void 0 : _a.setValue(startFormatted, { emitEvent: false });\r\n        if (dateRange.end) {\r\n            this.selectedEndDate = this.clampDate(dateRange.end);\r\n            const endFormatted = this.dateAdapter.format(this.selectedEndDate, this.format);\r\n            (_b = this.form.get('endDateInput')) === null || _b === void 0 ? void 0 : _b.setValue(endFormatted, { emitEvent: false });\r\n            this.emitValueIfChanged();\r\n            if (!this.hasTimeComponent(this.format))\r\n                this.close();\r\n            this.updateDatePickerPopup();\r\n            this.focus();\r\n        }\r\n    }\r\n    // ========== UI State Methods ==========\r\n    close() {\r\n        if (this.isInline) {\r\n            return;\r\n        }\r\n        if (this.isOpen) {\r\n            this.isOpen = false;\r\n            this.onOpenChange.emit(false);\r\n            this.cdref.markForCheck();\r\n        }\r\n    }\r\n    open() {\r\n        if (this.isInline || this.isOpen || this.disabled || this.readOnly) {\r\n            return;\r\n        }\r\n        this.isOpen = true;\r\n        this.onOpenChange.emit(true);\r\n        this.focus();\r\n        this.cdref.markForCheck();\r\n    }\r\n    focus() {\r\n        var _a;\r\n        const activeInputElement = this.getInput(this.activeInput);\r\n        if (this.document.activeElement !== activeInputElement) {\r\n            activeInputElement === null || activeInputElement === void 0 ? void 0 : activeInputElement.focus();\r\n            const length = (_a = activeInputElement === null || activeInputElement === void 0 ? void 0 : activeInputElement.value) === null || _a === void 0 ? void 0 : _a.length;\r\n            activeInputElement === null || activeInputElement === void 0 ? void 0 : activeInputElement.setSelectionRange(length, length);\r\n        }\r\n    }\r\n    // ========== UI Helper Methods ==========\r\n    getInput(partType) {\r\n        var _a, _b, _c;\r\n        if (this.isInline) {\r\n            return undefined;\r\n        }\r\n        return this.isRange\r\n            ? partType === 'start'\r\n                ? (_a = this.rangePickerInputs) === null || _a === void 0 ? void 0 : _a.first.nativeElement\r\n                : (_b = this.rangePickerInputs) === null || _b === void 0 ? void 0 : _b.last.nativeElement\r\n            : (_c = this.datePickerInput) === null || _c === void 0 ? void 0 : _c.nativeElement;\r\n    }\r\n    getPlaceholder(inputType = null) {\r\n        if (inputType === 'start')\r\n            return this.lang.startDate;\r\n        if (inputType === 'end')\r\n            return this.lang.endDate;\r\n        switch (this.mode) {\r\n            case 'month': return this.lang.selectMonth;\r\n            case 'year': return this.lang.selectYear;\r\n            default: return this.lang.selectDate;\r\n        }\r\n    }\r\n    // ========== Date Validation Methods ==========\r\n    clampDate(date) {\r\n        if (!date)\r\n            return date;\r\n        let adjustedDate = this.dateAdapter.clone(date);\r\n        if (this.minDate && this.dateAdapter.isBefore(adjustedDate, this.minDate)) {\r\n            return this.minDate;\r\n        }\r\n        if (this.maxDate && this.dateAdapter.isAfter(adjustedDate, this.maxDate)) {\r\n            return this.maxDate;\r\n        }\r\n        if (this.isDateDisabled(adjustedDate)) {\r\n            // Find the nearest enabled date\r\n            adjustedDate = this.findNearestValidDate(adjustedDate);\r\n        }\r\n        // Preserve the original time if format includes time\r\n        adjustedDate = this.clampDateTime(adjustedDate, date);\r\n        return adjustedDate;\r\n    }\r\n    clampDateTime(adjustedDate, date) {\r\n        if (this.hasTimeComponent(this.format)) {\r\n            adjustedDate.setHours(date.getHours());\r\n            adjustedDate.setMinutes(date.getMinutes());\r\n            adjustedDate.setSeconds(date.getSeconds());\r\n            let { normalizedDate } = this.validateAndNormalizeTime(adjustedDate);\r\n            adjustedDate = normalizedDate;\r\n        }\r\n        return adjustedDate;\r\n    }\r\n    findNearestValidDate(date) {\r\n        let nextDate = this.dateAdapter.addDays(date, 1);\r\n        let prevDate = this.dateAdapter.addDays(date, -1);\r\n        while (this.isDateDisabled(nextDate) && this.isDateDisabled(prevDate)) {\r\n            nextDate = this.dateAdapter.addDays(nextDate, 1);\r\n            prevDate = this.dateAdapter.addDays(prevDate, -1);\r\n        }\r\n        // Return the first non-disabled date found\r\n        if (!this.isDateDisabled(nextDate)) {\r\n            date = nextDate;\r\n        }\r\n        else if (!this.isDateDisabled(prevDate)) {\r\n            date = prevDate;\r\n        }\r\n        return date;\r\n    }\r\n    validateAndNormalizeTime(date) {\r\n        if (!this.dateAdapter) {\r\n            return { isValid: false, normalizedDate: null };\r\n        }\r\n        let isValid = true;\r\n        let normalizedDate = this.dateAdapter.clone(date);\r\n        if (this.isTimeDisabled(normalizedDate)) {\r\n            isValid = false;\r\n            // Get start and end of the current day\r\n            const startOfDay = this.dateAdapter.clone(date);\r\n            startOfDay.setHours(0, 0, 0, 0);\r\n            const endOfDay = this.dateAdapter.clone(date);\r\n            endOfDay.setHours(23, 59, 59, 999);\r\n            // Try to find nearest valid time within the same day\r\n            const currentMinutes = date.getHours() * 60 + date.getMinutes();\r\n            const maxForwardMinutes = (24 * 60) - currentMinutes;\r\n            let validTimeFound = false;\r\n            // Check forward\r\n            for (let i = 1; i <= maxForwardMinutes; i++) {\r\n                const nextTime = this.dateAdapter.clone(date);\r\n                nextTime.setHours(Math.floor((currentMinutes + i) / 60), (currentMinutes + i) % 60, 0);\r\n                if (nextTime.getTime() <= endOfDay.getTime() && !this.isTimeDisabled(nextTime)) {\r\n                    normalizedDate = nextTime;\r\n                    validTimeFound = true;\r\n                    break;\r\n                }\r\n            }\r\n            // Check backward\r\n            if (!validTimeFound)\r\n                for (let i = 1; i < currentMinutes; i++) {\r\n                    const prevTime = this.dateAdapter.clone(date);\r\n                    prevTime.setHours(Math.floor((currentMinutes - i) / 60), (currentMinutes - i) % 60, 0);\r\n                    if (prevTime.getTime() >= startOfDay.getTime() && !this.isTimeDisabled(prevTime)) {\r\n                        normalizedDate = prevTime;\r\n                        break;\r\n                    }\r\n                }\r\n            // If no valid time found in the current day, set to start of day\r\n            if (this.isTimeDisabled(normalizedDate)) {\r\n                normalizedDate = startOfDay;\r\n            }\r\n        }\r\n        return { isValid: isValid, normalizedDate };\r\n    }\r\n    parseDisabledDates() {\r\n        return this.disabledDates.map(date => {\r\n            if (date instanceof Date) {\r\n                return this.dateAdapter.startOfDay(date);\r\n            }\r\n            const parsedDate = this.dateAdapter.parse(date, this.extractDateFormat(this.format));\r\n            return parsedDate || null;\r\n        }).filter(date => date !== null);\r\n    }\r\n    isDateDisabled(date) {\r\n        if (!date)\r\n            return false;\r\n        const dateToCheck = this.dateAdapter.startOfDay(date);\r\n        // Check if date is in disabled dates array\r\n        const parsedDisabledDates = this.parseDisabledDates();\r\n        const isDisabledDate = parsedDisabledDates.some(disabledDate => this.dateAdapter.isSameDay(dateToCheck, disabledDate));\r\n        // Check custom filter function if provided\r\n        const isFilterDisabled = this.disabledDatesFilter ?\r\n            this.disabledDatesFilter(dateToCheck) :\r\n            false;\r\n        return isDisabledDate || isFilterDisabled;\r\n    }\r\n    isTimeDisabled(date) {\r\n        return this.disabledTimesFilter ? this.disabledTimesFilter(date) : false;\r\n    }\r\n    // ========== Date Validation Methods (continued) ==========\r\n    dateFormatValidator(control) {\r\n        const value = control.value;\r\n        if (!value)\r\n            return null;\r\n        const format = this.getFormatForMode();\r\n        if (!this.dateAdapter.isValidFormat(value, format)) {\r\n            return { invalidFormat: true };\r\n        }\r\n        return null;\r\n    }\r\n    getFormatForMode() {\r\n        switch (this.mode) {\r\n            case 'year':\r\n                return 'yyyy';\r\n            case 'month':\r\n                return 'yyyy/MM';\r\n            default:\r\n                return this.format;\r\n        }\r\n    }\r\n    // ========== Overlay Position Methods ==========\r\n    setPlacement(placement) {\r\n        const position = DATE_PICKER_POSITION_MAP[placement];\r\n        this.overlayPositions = [position, ...DEFAULT_DATE_PICKER_POSITIONS];\r\n        this.currentPositionX = position.originX;\r\n        this.currentPositionY = position.originY;\r\n    }\r\n    onPositionChange(position) {\r\n        if (this.currentPositionX !== position.connectionPair.originX ||\r\n            this.currentPositionY !== position.connectionPair.originY) {\r\n            this.currentPositionX = position.connectionPair.originX;\r\n            this.currentPositionY = position.connectionPair.originY;\r\n            this.cdref.markForCheck();\r\n        }\r\n    }\r\n    // ========== Input Event Handlers ==========\r\n    onFocusout(event) {\r\n        var _a;\r\n        event.preventDefault();\r\n        this.onTouch();\r\n        if (!this.elementRef.nativeElement.contains(event.relatedTarget) &&\r\n            !((_a = this.datePickerPopup) === null || _a === void 0 ? void 0 : _a.el.nativeElement.contains(event.relatedTarget))) {\r\n            this.close();\r\n        }\r\n    }\r\n    onInputBlur(inputType, event) {\r\n        const inputValue = this.getInputValue(inputType);\r\n        if (typeof inputValue === 'string' && !this.isOpen) {\r\n            const correctedValue = this.validateAndCorrectInput(inputValue);\r\n            if (correctedValue !== inputValue) {\r\n                if (inputValue) {\r\n                    this.handleCorrectedValue(inputType, correctedValue);\r\n                }\r\n                else if (!this.allowEmpty) {\r\n                    this.handleCorrectedValue(inputType, correctedValue);\r\n                }\r\n                else {\r\n                    this.selectedDate = null;\r\n                    this.onChange(inputValue);\r\n                }\r\n            }\r\n            this.onBlur.emit({\r\n                input: inputType,\r\n                event,\r\n                value: correctedValue\r\n            });\r\n        }\r\n    }\r\n    getInputValue(inputType) {\r\n        var _a, _b, _c;\r\n        if (this.isRange) {\r\n            return inputType === 'start'\r\n                ? (_a = this.form.get('startDateInput')) === null || _a === void 0 ? void 0 : _a.value\r\n                : (_b = this.form.get('endDateInput')) === null || _b === void 0 ? void 0 : _b.value;\r\n        }\r\n        return (_c = this.form.get('dateInput')) === null || _c === void 0 ? void 0 : _c.value;\r\n    }\r\n    validateAndCorrectInput(value) {\r\n        let date = this.dateAdapter.parse(value, this.format);\r\n        if (!date) {\r\n            const today = this.dateAdapter.today();\r\n            date = this.clampDate(today);\r\n        }\r\n        else {\r\n            date = this.clampDate(date);\r\n        }\r\n        return this.dateAdapter.format(date, this.format);\r\n    }\r\n    handleCorrectedValue(inputType, correctedValue) {\r\n        this.isInternalChange = true;\r\n        if (this.isRange) {\r\n            this.handleRangeCorrectedValue(inputType, correctedValue);\r\n        }\r\n        else {\r\n            this.handleSingleCorrectedValue(correctedValue);\r\n        }\r\n        this.isInternalChange = false;\r\n    }\r\n    handleRangeCorrectedValue(inputType, correctedValue) {\r\n        var _a, _b;\r\n        if (inputType === 'start') {\r\n            (_a = this.form.get('startDateInput')) === null || _a === void 0 ? void 0 : _a.setValue(correctedValue);\r\n            this.selectedStartDate = this.dateAdapter.parse(correctedValue, this.format);\r\n        }\r\n        else {\r\n            (_b = this.form.get('endDateInput')) === null || _b === void 0 ? void 0 : _b.setValue(correctedValue);\r\n            this.selectedEndDate = this.dateAdapter.parse(correctedValue, this.format);\r\n        }\r\n        if (this.selectedStartDate && this.selectedEndDate) {\r\n            this.onChange({\r\n                start: this.dateAdapter.format(this.selectedStartDate, this.format),\r\n                end: this.dateAdapter.format(this.selectedEndDate, this.format)\r\n            });\r\n        }\r\n        if (this.datePickerPopup) {\r\n            this.datePickerPopup.selectedStartDate = this.selectedStartDate;\r\n            this.datePickerPopup.selectedEndDate = this.selectedEndDate;\r\n            this.datePickerPopup.generateCalendar();\r\n        }\r\n    }\r\n    handleSingleCorrectedValue(correctedValue) {\r\n        var _a;\r\n        (_a = this.form.get('dateInput')) === null || _a === void 0 ? void 0 : _a.setValue(correctedValue);\r\n        this.selectedDate = this.dateAdapter.parse(correctedValue, this.format);\r\n        this.onChange(this.selectedDate);\r\n        if (this.datePickerPopup) {\r\n            this.datePickerPopup.selectedDate = this.selectedDate;\r\n        }\r\n    }\r\n    onFocusInput(inputType, event) {\r\n        if (this.hideStateHelper == false) {\r\n            this.toggleDatePicker(inputType, event);\r\n            this.hideStateHelper = true;\r\n        }\r\n        else {\r\n            this.hideStateHelper = false;\r\n        }\r\n    }\r\n    toggleDatePicker(inputType, event) {\r\n        this.onFocus.emit({\r\n            input: inputType,\r\n            event\r\n        });\r\n        this.activeInput = inputType;\r\n        this.dpService.activeInput$.next(this.activeInput);\r\n        this.open();\r\n        this.cdref.detectChanges();\r\n    }\r\n    onInputKeydown(event) {\r\n        if ((!event.shiftKey && event.key === 'Tab') || (!event.shiftKey && event.key === 'Enter')) {\r\n            if (this.isRange) {\r\n                return;\r\n            }\r\n            this.close();\r\n        }\r\n    }\r\n    // ========== Update Methods ==========\r\n    updateInputValue() {\r\n        var _a, _b, _c;\r\n        if (this.isRange) {\r\n            if (this.selectedStartDate) {\r\n                (_a = this.form.get('startDateInput')) === null || _a === void 0 ? void 0 : _a.setValue(this.dateAdapter.format(this.selectedStartDate, this.format));\r\n            }\r\n            if (this.selectedEndDate) {\r\n                (_b = this.form.get('endDateInput')) === null || _b === void 0 ? void 0 : _b.setValue(this.dateAdapter.format(this.selectedEndDate, this.format));\r\n            }\r\n        }\r\n        else if (this.selectedDate) {\r\n            (_c = this.form.get('dateInput')) === null || _c === void 0 ? void 0 : _c.setValue(this.dateAdapter.format(this.selectedDate, this.format));\r\n        }\r\n    }\r\n    updateDatePickerPopup() {\r\n        if (this.datePickerPopup) {\r\n            if (this.isRange) {\r\n                this.datePickerPopup.selectedStartDate = this.selectedStartDate;\r\n                this.datePickerPopup.selectedEndDate = this.selectedEndDate;\r\n                if (this.showTimePicker) {\r\n                    this.datePickerPopup.timePicker.updateFromDate(this.activeInput == 'start' ?\r\n                        this.selectedStartDate :\r\n                        this.selectedEndDate);\r\n                    this.datePickerPopup.timePicker.scrollToTime();\r\n                }\r\n            }\r\n            else {\r\n                this.datePickerPopup.selectedDate = this.selectedDate;\r\n                if (this.showTimePicker) {\r\n                    this.datePickerPopup.timePicker.updateFromDate(this.selectedDate);\r\n                    this.datePickerPopup.timePicker.scrollToTime();\r\n                }\r\n            }\r\n            this.datePickerPopup.generateCalendar();\r\n            this.cdref.detectChanges();\r\n        }\r\n    }\r\n    convertDateToFormat(date, fromType) {\r\n        if (!date)\r\n            return null;\r\n        switch (this.valueFormat) {\r\n            case 'date':\r\n                return date;\r\n            case 'jalali':\r\n                return this.jalali.format(date, this.format);\r\n            case 'gregorian':\r\n                return this.gregorian.format(date, this.format);\r\n            default:\r\n                return this.dateAdapter.format(date, this.format);\r\n        }\r\n    }\r\n    writeValue(value) {\r\n        var _a, _b, _c;\r\n        if (value) {\r\n            this.isInternalChange = true;\r\n            if (this.isRange && typeof value === 'object') {\r\n                const startDate = this.parseIncomingValue(value.start);\r\n                const endDate = this.parseIncomingValue(value.end);\r\n                if (startDate) {\r\n                    this.selectedStartDate = startDate;\r\n                    (_a = this.form.get('startDateInput')) === null || _a === void 0 ? void 0 : _a.setValue(this.dateAdapter.format(startDate, this.format), { emitEvent: false });\r\n                }\r\n                if (endDate) {\r\n                    this.selectedEndDate = endDate;\r\n                    (_b = this.form.get('endDateInput')) === null || _b === void 0 ? void 0 : _b.setValue(this.dateAdapter.format(endDate, this.format), { emitEvent: false });\r\n                }\r\n            }\r\n            else {\r\n                const parsedDate = this.parseIncomingValue(value);\r\n                if (parsedDate) {\r\n                    this.selectedDate = parsedDate;\r\n                    (_c = this.form.get('dateInput')) === null || _c === void 0 ? void 0 : _c.setValue(this.dateAdapter.format(parsedDate, this.format), { emitEvent: false });\r\n                }\r\n            }\r\n            this.lastEmittedValue = value;\r\n            this.isInternalChange = false;\r\n            this.updateDatePickerPopup();\r\n            this.cdref.markForCheck();\r\n        }\r\n        else {\r\n            this.resetValues();\r\n        }\r\n    }\r\n    resetValues() {\r\n        var _a, _b, _c;\r\n        this.isInternalChange = true;\r\n        this.selectedDate = null;\r\n        this.selectedStartDate = null;\r\n        this.selectedEndDate = null;\r\n        (_a = this.form.get('dateInput')) === null || _a === void 0 ? void 0 : _a.setValue('', { emitEvent: false });\r\n        (_b = this.form.get('startDateInput')) === null || _b === void 0 ? void 0 : _b.setValue('', { emitEvent: false });\r\n        (_c = this.form.get('endDateInput')) === null || _c === void 0 ? void 0 : _c.setValue('', { emitEvent: false });\r\n        this.lastEmittedValue = null;\r\n        this.isInternalChange = false;\r\n        this.updateDatePickerPopup();\r\n    }\r\n    registerOnChange(fn) {\r\n        this.onChange = fn;\r\n    }\r\n    registerOnTouched(fn) {\r\n        this.onTouch = fn;\r\n    }\r\n    // ========== Setup Methods ==========\r\n    setupActiveInputSubscription() {\r\n        this.dpService.activeInput$\r\n            .pipe(takeUntil$1(this.destroy$))\r\n            .subscribe((active) => {\r\n            var _a;\r\n            this.activeInput = active;\r\n            if (active) {\r\n                if (!this.isOpen)\r\n                    this.origin = new CdkOverlayOrigin(this.activeInput == 'start' ? (_a = this.rangePickerInputs) === null || _a === void 0 ? void 0 : _a.first : this.rangePickerInputs.last);\r\n                this.focus();\r\n            }\r\n        });\r\n    }\r\n    setupMouseDownEventHandler() {\r\n        this.ngZone.runOutsideAngular(() => fromEvent(this.elementRef.nativeElement, 'mousedown')\r\n            .pipe(takeUntil$1(this.destroy$))\r\n            .subscribe((event) => {\r\n            if (event.target.tagName.toLowerCase() !== 'input') {\r\n                event.preventDefault();\r\n            }\r\n        }));\r\n    }\r\n    parseDateValue(value) {\r\n        if (value instanceof Date) {\r\n            return value;\r\n        }\r\n        return this.dateAdapter.parse(value, this.format);\r\n    }\r\n    parseValueFromFormat(value, targetAdapter) {\r\n        if (!value)\r\n            return null;\r\n        if (value instanceof Date)\r\n            return value;\r\n        return targetAdapter.parse(value, this.format);\r\n    }\r\n    parseIncomingValue(value) {\r\n        if (!value)\r\n            return null;\r\n        if (value instanceof Date)\r\n            return value;\r\n        let parsedDate = null;\r\n        // try with value adapter\r\n        parsedDate = this.valueAdapter.parse(value, this.format);\r\n        if (parsedDate)\r\n            return parsedDate;\r\n        return null;\r\n    }\r\n    // ========== Time Methods ==========\r\n    hasTimeComponent(format) {\r\n        return /[Hh]|[m]|[s]|[a]/g.test(format);\r\n    }\r\n    extractTimeFormat(format) {\r\n        const timeMatch = format.match(/[Hh]{1,2}:mm(?::ss)?(?:\\s*[aA])?/);\r\n        return timeMatch ? timeMatch[0] : 'HH:mm';\r\n    }\r\n    extractDateFormat(format) {\r\n        const dateFormatMatch = format.match(/[yMd\\/.-]+/);\r\n        return dateFormatMatch ? dateFormatMatch[0] : '';\r\n    }\r\n}\r\nAsaDatePickerComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"14.3.0\", ngImport: i0, type: AsaDatePickerComponent, deps: [{ token: i1$1.FormBuilder }, { token: i0.ElementRef }, { token: i0.Renderer2 }, { token: i0.ChangeDetectorRef }, { token: AsaDatePickerService }, { token: DestroyService }, { token: i0.NgZone }, { token: JalaliDateAdapter }, { token: GregorianDateAdapter }, { token: DOCUMENT }], target: i0.ɵɵFactoryTarget.Component });\r\nAsaDatePickerComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"14.0.0\", version: \"14.3.0\", type: AsaDatePickerComponent, isStandalone: true, selector: \"asa-date-picker\", inputs: { rtl: \"rtl\", mode: \"mode\", isRange: \"isRange\", customLabels: \"customLabels\", calendarType: \"calendarType\", lang: \"lang\", cssClass: \"cssClass\", footerDescription: \"footerDescription\", rangeInputLabels: \"rangeInputLabels\", inputLabel: \"inputLabel\", placement: \"placement\", disabled: \"disabled\", isInline: \"isInline\", showSidebar: \"showSidebar\", showToday: \"showToday\", valueFormat: \"valueFormat\", disableInputMask: \"disableInputMask\", disabledDates: \"disabledDates\", disabledDatesFilter: \"disabledDatesFilter\", disabledTimesFilter: \"disabledTimesFilter\", allowEmpty: \"allowEmpty\", readOnly: \"readOnly\", readOnlyInput: \"readOnlyInput\", minDate: \"minDate\", maxDate: \"maxDate\", format: \"format\" }, outputs: { onFocus: \"onFocus\", onBlur: \"onBlur\", onChangeValue: \"onChangeValue\", onOpenChange: \"onOpenChange\" }, host: { properties: { \"class.asa-datepicker\": \"true\", \"class.asa-datepicker-rtl\": \"rtl\" } }, providers: [\r\n        DestroyService,\r\n        AsaDatePickerService,\r\n        {\r\n            provide: NG_VALUE_ACCESSOR,\r\n            useExisting: forwardRef(() => AsaDatePickerComponent),\r\n            multi: true\r\n        }\r\n    ], queries: [{ propertyName: \"templates\", predicate: CustomTemplate }], viewQueries: [{ propertyName: \"datePickerInput\", first: true, predicate: [\"datePickerInput\"], descendants: true }, { propertyName: \"datePickerPopup\", first: true, predicate: DatePickerPopupComponent, descendants: true }, { propertyName: \"rangePickerInputs\", predicate: [\"rangePickerInput\"], descendants: true }], usesOnChanges: true, ngImport: i0, template: `\n    <div asaDatepickerStyles class=\"date-picker-wrapper\" [class.date-picker-rtl]=\"rtl\" [class.disabled]=\"disabled\" [formGroup]=\"form\">\n      <ng-container *ngIf=\"!isInline; else inlineMode\">\n        <ng-container *ngIf=\"!isRange; else rangeMode\">\n          <div class=\"input-container\" [class.rtl]>\n            <label for=\"dateInput\" *ngIf=\"inputLabel\">{{ inputLabel }}</label>\n            <input\n              #datePickerInput\n              type=\"text\"\n              formControlName=\"dateInput\"\n              [asa-dateMask]=\"format\"\n              [disableInputMask]=\"disableInputMask\"\n              (click)=\"toggleDatePicker(null,$event)\"\n              (focus)=\"onFocusInput(null,$event)\"\n              (blur)=\"onInputBlur(null,$event)\"\n              (keydown)=\"onInputKeydown($event)\"\n              [class.focus]=\"isOpen\"\n              [placeholder]=\"getPlaceholder()\"\n              [readonly]=\"readOnly || readOnlyInput\"\n              [attr.disabled]=\"disabled? 'disabled':null\"\n            >\n            <ng-container *ngTemplateOutlet=\"icon\"></ng-container>\n          </div>\n        </ng-container>\n        <ng-template #rangeMode>\n          <div *ngIf=\"rangeInputLabels\" class=\"range-input-labels\">\n            <div class=\"start-label\">\n              <label for=\"startDateInput\">{{ rangeInputLabels.start }}</label>\n            </div>\n            <div class=\"end-label\">\n              <label for=\"endDateInput\">{{ rangeInputLabels.end }}</label>\n            </div>\n          </div>\n          <div class=\"range-input-container\">\n            <input\n              #rangePickerInput\n              type=\"text\"\n              formControlName=\"startDateInput\"\n              [asa-dateMask]=\"format\"\n              [disableInputMask]=\"disableInputMask\"\n              (click)=\"toggleDatePicker('start',$event)\"\n              (focus)=\"onFocusInput('start',$event)\"\n              (focusout)=\"onFocusout($event)\"\n              (blur)=\"onInputBlur('start',$event)\"\n              (keydown)=\"onInputKeydown($event)\"\n              [class.focus]=\"isOpen && activeInput === 'start'\"\n              [placeholder]=\"getPlaceholder('start')\"\n              [readonly]=\"readOnly || readOnlyInput\"\n              [attr.disabled]=\"disabled? 'disabled':null\"\n            >\n            <span class=\"range-separator\">→</span>\n            <input\n              #rangePickerInput\n              type=\"text\"\n              formControlName=\"endDateInput\"\n              [asa-dateMask]=\"format\"\n              [disableInputMask]=\"disableInputMask\"\n              (click)=\"toggleDatePicker('end',$event)\"\n              (focus)=\"onFocusInput('end',$event)\"\n              (focusout)=\"onFocusout($event)\"\n              (blur)=\"onInputBlur('end',$event)\"\n              (keydown)=\"onInputKeydown($event)\"\n              [class.focus]=\"isOpen && activeInput === 'end'\"\n              [placeholder]=\"getPlaceholder('end')\"\n              [readonly]=\"readOnly || readOnlyInput\"\n              [attr.disabled]=\"disabled? 'disabled':null\"\n            >\n            <ng-container *ngTemplateOutlet=\"icon\"></ng-container>\n          </div>\n        </ng-template>\n        <ng-template #icon>\n            <button class=\"calendar-button\" (click)=\"toggleDatePicker(null, $event)\" tabindex=\"-1\">\n              <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"18px\" height=\"18px\" viewBox=\"0 0 24 24\" fill=\"#999\">\n                <path fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M6 2C6 1.44772 6.44772 1 7 1C7.55228 1 8 1.44772 8 2V3H16V2C16 1.44772 16.4477 1 17 1C17.5523 1 18 1.44772 18 2V3H19C20.6569 3 22 4.34315 22 6V20C22 21.6569 20.6569 23 19 23H5C3.34315 23 2 21.6569 2 20V6C2 4.34315 3.34315 3 5 3H6V2ZM16 5V6C16 6.55228 16.4477 7 17 7C17.5523 7 18 6.55228 18 6V5H19C19.5523 5 20 5.44772 20 6V9H4V6C4 5.44772 4.44772 5 5 5H6V6C6 6.55228 6.44772 7 7 7C7.55228 7 8 6.55228 8 6V5H16ZM4 11V20C4 20.5523 4.44772 21 5 21H19C19.5523 21 20 20.5523 20 20V11H4Z\" fill=\"#999\"/>\n              </svg>\n            </button>\n        </ng-template>\n      </ng-container>\n      <ng-template #inlineMode>\n        <div\n          class=\"dp-dropdown\"\n          [class.asa-picker-dropdown-rtl]=\"rtl\"\n          [class.asa-picker-dropdown-placement-bottomLeft]=\"currentPositionY === 'bottom' && currentPositionX === 'start'\"\n          [class.asa-picker-dropdown-placement-topLeft]=\"currentPositionY === 'top' && currentPositionX === 'start'\"\n          [class.asa-picker-dropdown-placement-bottomRight]=\"currentPositionY === 'bottom' && currentPositionX === 'end'\"\n          [class.asa-picker-dropdown-placement-topRight]=\"currentPositionY === 'top' && currentPositionX === 'end'\"\n          [class.asa-picker-dropdown-range]=\"isRange\"\n        >\n          <asa-date-picker-popup\n            [rtl]=\"rtl\"\n            [@slideMotion]=\"'enter'\"\n            [selectedDate]=\"selectedDate\"\n            [selectedStartDate]=\"selectedStartDate\"\n            [selectedEndDate]=\"selectedEndDate\"\n            [mode]=\"mode\"\n            [isRange]=\"isRange\"\n            [customLabels]=\"customLabels\"\n            [calendarType]=\"calendarType\"\n            [minDate]=\"minDate\"\n            [maxDate]=\"maxDate\"\n            [cssClass]=\"cssClass\"\n            [footerDescription]=\"footerDescription\"\n            [activeInput]=\"activeInput\"\n            [showSidebar]=\"showSidebar\"\n            [showToday]=\"showToday\"\n            [showTimePicker]=\"showTimePicker\"\n            [timeDisplayFormat]=\"timeDisplayFormat\"\n            [dateFormat]=\"extractDateFormat(format)\"\n            [disabledDates]=\"disabledDates\"\n            [disabledDatesFilter]=\"disabledDatesFilter\"\n            [disabledTimesFilter]=\"disabledTimesFilter\"\n            [templates]=\"templates\"\n            (dateSelected)=\"onDateSelected($event)\"\n            (dateRangeSelected)=\"onDateRangeSelected($event)\"\n            (closePicker)=\"close()\"\n            (clickInside)=\"focus()\"\n            tabindex=\"-1\"\n            [attr.disabled]=\"disabled? 'disabled':null\"\n          ></asa-date-picker-popup>\n        </div>\n      </ng-template>\n      <ng-template\n        cdkConnectedOverlay\n        nzConnectedOverlay\n        [cdkConnectedOverlayOrigin]=\"origin\"\n        [cdkConnectedOverlayOpen]=\"isOpen\"\n        [cdkConnectedOverlayPositions]=\"overlayPositions\"\n        [cdkConnectedOverlayTransformOriginOn]=\"'.asa-picker-wrapper'\"\n        [cdkConnectedOverlayHasBackdrop]=\"false\"\n        (positionChange)=\"onPositionChange($event)\"\n        (detach)=\"close()\"\n      >\n        <div\n          class=\"asa-picker-wrapper\"\n          [class.disabled]=\"disabled\"\n          [@slideMotion]=\"'enter'\"\n          style=\"position: relative;\"\n          (click)=\"$event.stopPropagation()\"\n        >\n          <ng-container *ngTemplateOutlet=\"inlineMode\"></ng-container>\n        </div>\n      </ng-template>\n    </div>\n  `, isInline: true, styles: [\":host.asa-datepicker ::ng-deep{display:block;max-width:fit-content}.date-picker-wrapper{position:relative;max-width:fit-content}input{font-family:inherit;max-width:300px;padding:6px 10px;border:1px solid #d9d9d9;border-radius:4px;font-size:14px;outline:none;transition:all .3s}input:hover{border-color:#40a9ff}input.focus{border-color:#40a9ff;box-shadow:0 0 0 2px #1890ff33;outline:none}.range-input-container{display:flex;align-items:center;border:1px solid #d9d9d9;border-radius:4px;overflow:hidden}.range-input-container input{border:none;flex:1;width:50%;padding:6px 10px;border-radius:0}.range-input-container input.focus{border-bottom:1px solid;border-color:#40a9ff;box-shadow:none!important}.range-separator{padding:0 8px;color:#999}.calendar-button{background:none;border:none;padding:4px 4px 0;cursor:pointer;font-size:16px}.range-input-labels{display:flex;justify-content:space-between;gap:10px;color:#444;padding:0 5px 5px}.end-label{width:49%}.disabled{opacity:.8;pointer-events:none}.disabled .range-input-container{background:#f3f3f3}.input-container .calendar-button{position:absolute;right:0;bottom:5px}.date-picker-rtl .input-container .calendar-button{right:auto;left:0}.input-container{display:flex;flex-direction:column;gap:3px;color:#444}.input-container.rtl{direction:rtl}// rtl :dir(rtl) .range-separator{rotate:180deg}\\n\"], dependencies: [{ kind: \"directive\", type: NgIf, selector: \"[ngIf]\", inputs: [\"ngIf\", \"ngIfThen\", \"ngIfElse\"] }, { kind: \"ngmodule\", type: FormsModule }, { kind: \"directive\", type: i1$1.DefaultValueAccessor, selector: \"input:not([type=checkbox])[formControlName],textarea[formControlName],input:not([type=checkbox])[formControl],textarea[formControl],input:not([type=checkbox])[ngModel],textarea[ngModel],[ngDefaultControl]\" }, { kind: \"directive\", type: i1$1.NgControlStatus, selector: \"[formControlName],[ngModel],[formControl]\" }, { kind: \"directive\", type: i1$1.NgControlStatusGroup, selector: \"[formGroupName],[formArrayName],[ngModelGroup],[formGroup],form:not([ngNoForm]),[ngForm]\" }, { kind: \"ngmodule\", type: ReactiveFormsModule }, { kind: \"directive\", type: i1$1.FormGroupDirective, selector: \"[formGroup]\", inputs: [\"formGroup\"], outputs: [\"ngSubmit\"], exportAs: [\"ngForm\"] }, { kind: \"directive\", type: i1$1.FormControlName, selector: \"[formControlName]\", inputs: [\"formControlName\", \"disabled\", \"ngModel\"], outputs: [\"ngModelChange\"] }, { kind: \"ngmodule\", type: OverlayModule }, { kind: \"directive\", type: i1.CdkConnectedOverlay, selector: \"[cdk-connected-overlay], [connected-overlay], [cdkConnectedOverlay]\", inputs: [\"cdkConnectedOverlayOrigin\", \"cdkConnectedOverlayPositions\", \"cdkConnectedOverlayPositionStrategy\", \"cdkConnectedOverlayOffsetX\", \"cdkConnectedOverlayOffsetY\", \"cdkConnectedOverlayWidth\", \"cdkConnectedOverlayHeight\", \"cdkConnectedOverlayMinWidth\", \"cdkConnectedOverlayMinHeight\", \"cdkConnectedOverlayBackdropClass\", \"cdkConnectedOverlayPanelClass\", \"cdkConnectedOverlayViewportMargin\", \"cdkConnectedOverlayScrollStrategy\", \"cdkConnectedOverlayOpen\", \"cdkConnectedOverlayDisableClose\", \"cdkConnectedOverlayTransformOriginOn\", \"cdkConnectedOverlayHasBackdrop\", \"cdkConnectedOverlayLockPosition\", \"cdkConnectedOverlayFlexibleDimensions\", \"cdkConnectedOverlayGrowAfterOpen\", \"cdkConnectedOverlayPush\"], outputs: [\"backdropClick\", \"positionChange\", \"attach\", \"detach\", \"overlayKeydown\", \"overlayOutsideClick\"], exportAs: [\"cdkConnectedOverlay\"] }, { kind: \"directive\", type: NgTemplateOutlet, selector: \"[ngTemplateOutlet]\", inputs: [\"ngTemplateOutletContext\", \"ngTemplateOutlet\", \"ngTemplateOutletInjector\"] }, { kind: \"directive\", type: NzConnectedOverlayDirective, selector: \"[cdkConnectedOverlay][nzConnectedOverlay]\", inputs: [\"nzArrowPointAtCenter\"], exportAs: [\"nzConnectedOverlay\"] }, { kind: \"directive\", type: DateMaskDirective, selector: \"[asa-dateMask]\", inputs: [\"asa-dateMask\", \"disableInputMask\"] }, { kind: \"component\", type: DatePickerPopupComponent, selector: \"asa-date-picker-popup\", inputs: [\"rtl\", \"selectedDate\", \"selectedStartDate\", \"selectedEndDate\", \"mode\", \"isRange\", \"customLabels\", \"calendarType\", \"minDate\", \"maxDate\", \"cssClass\", \"footerDescription\", \"activeInput\", \"showSidebar\", \"showToday\", \"showTimePicker\", \"timeDisplayFormat\", \"dateFormat\", \"disabledDates\", \"disabledDatesFilter\", \"disabledTimesFilter\", \"templates\"], outputs: [\"dateSelected\", \"dateRangeSelected\", \"closePicker\", \"clickInside\"] }], animations: [slideMotion], changeDetection: i0.ChangeDetectionStrategy.OnPush });\r\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"14.3.0\", ngImport: i0, type: AsaDatePickerComponent, decorators: [{\r\n            type: Component,\r\n            args: [{ selector: 'asa-date-picker', changeDetection: ChangeDetectionStrategy.OnPush, standalone: true, template: `\n    <div asaDatepickerStyles class=\"date-picker-wrapper\" [class.date-picker-rtl]=\"rtl\" [class.disabled]=\"disabled\" [formGroup]=\"form\">\n      <ng-container *ngIf=\"!isInline; else inlineMode\">\n        <ng-container *ngIf=\"!isRange; else rangeMode\">\n          <div class=\"input-container\" [class.rtl]>\n            <label for=\"dateInput\" *ngIf=\"inputLabel\">{{ inputLabel }}</label>\n            <input\n              #datePickerInput\n              type=\"text\"\n              formControlName=\"dateInput\"\n              [asa-dateMask]=\"format\"\n              [disableInputMask]=\"disableInputMask\"\n              (click)=\"toggleDatePicker(null,$event)\"\n              (focus)=\"onFocusInput(null,$event)\"\n              (blur)=\"onInputBlur(null,$event)\"\n              (keydown)=\"onInputKeydown($event)\"\n              [class.focus]=\"isOpen\"\n              [placeholder]=\"getPlaceholder()\"\n              [readonly]=\"readOnly || readOnlyInput\"\n              [attr.disabled]=\"disabled? 'disabled':null\"\n            >\n            <ng-container *ngTemplateOutlet=\"icon\"></ng-container>\n          </div>\n        </ng-container>\n        <ng-template #rangeMode>\n          <div *ngIf=\"rangeInputLabels\" class=\"range-input-labels\">\n            <div class=\"start-label\">\n              <label for=\"startDateInput\">{{ rangeInputLabels.start }}</label>\n            </div>\n            <div class=\"end-label\">\n              <label for=\"endDateInput\">{{ rangeInputLabels.end }}</label>\n            </div>\n          </div>\n          <div class=\"range-input-container\">\n            <input\n              #rangePickerInput\n              type=\"text\"\n              formControlName=\"startDateInput\"\n              [asa-dateMask]=\"format\"\n              [disableInputMask]=\"disableInputMask\"\n              (click)=\"toggleDatePicker('start',$event)\"\n              (focus)=\"onFocusInput('start',$event)\"\n              (focusout)=\"onFocusout($event)\"\n              (blur)=\"onInputBlur('start',$event)\"\n              (keydown)=\"onInputKeydown($event)\"\n              [class.focus]=\"isOpen && activeInput === 'start'\"\n              [placeholder]=\"getPlaceholder('start')\"\n              [readonly]=\"readOnly || readOnlyInput\"\n              [attr.disabled]=\"disabled? 'disabled':null\"\n            >\n            <span class=\"range-separator\">→</span>\n            <input\n              #rangePickerInput\n              type=\"text\"\n              formControlName=\"endDateInput\"\n              [asa-dateMask]=\"format\"\n              [disableInputMask]=\"disableInputMask\"\n              (click)=\"toggleDatePicker('end',$event)\"\n              (focus)=\"onFocusInput('end',$event)\"\n              (focusout)=\"onFocusout($event)\"\n              (blur)=\"onInputBlur('end',$event)\"\n              (keydown)=\"onInputKeydown($event)\"\n              [class.focus]=\"isOpen && activeInput === 'end'\"\n              [placeholder]=\"getPlaceholder('end')\"\n              [readonly]=\"readOnly || readOnlyInput\"\n              [attr.disabled]=\"disabled? 'disabled':null\"\n            >\n            <ng-container *ngTemplateOutlet=\"icon\"></ng-container>\n          </div>\n        </ng-template>\n        <ng-template #icon>\n            <button class=\"calendar-button\" (click)=\"toggleDatePicker(null, $event)\" tabindex=\"-1\">\n              <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"18px\" height=\"18px\" viewBox=\"0 0 24 24\" fill=\"#999\">\n                <path fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M6 2C6 1.44772 6.44772 1 7 1C7.55228 1 8 1.44772 8 2V3H16V2C16 1.44772 16.4477 1 17 1C17.5523 1 18 1.44772 18 2V3H19C20.6569 3 22 4.34315 22 6V20C22 21.6569 20.6569 23 19 23H5C3.34315 23 2 21.6569 2 20V6C2 4.34315 3.34315 3 5 3H6V2ZM16 5V6C16 6.55228 16.4477 7 17 7C17.5523 7 18 6.55228 18 6V5H19C19.5523 5 20 5.44772 20 6V9H4V6C4 5.44772 4.44772 5 5 5H6V6C6 6.55228 6.44772 7 7 7C7.55228 7 8 6.55228 8 6V5H16ZM4 11V20C4 20.5523 4.44772 21 5 21H19C19.5523 21 20 20.5523 20 20V11H4Z\" fill=\"#999\"/>\n              </svg>\n            </button>\n        </ng-template>\n      </ng-container>\n      <ng-template #inlineMode>\n        <div\n          class=\"dp-dropdown\"\n          [class.asa-picker-dropdown-rtl]=\"rtl\"\n          [class.asa-picker-dropdown-placement-bottomLeft]=\"currentPositionY === 'bottom' && currentPositionX === 'start'\"\n          [class.asa-picker-dropdown-placement-topLeft]=\"currentPositionY === 'top' && currentPositionX === 'start'\"\n          [class.asa-picker-dropdown-placement-bottomRight]=\"currentPositionY === 'bottom' && currentPositionX === 'end'\"\n          [class.asa-picker-dropdown-placement-topRight]=\"currentPositionY === 'top' && currentPositionX === 'end'\"\n          [class.asa-picker-dropdown-range]=\"isRange\"\n        >\n          <asa-date-picker-popup\n            [rtl]=\"rtl\"\n            [@slideMotion]=\"'enter'\"\n            [selectedDate]=\"selectedDate\"\n            [selectedStartDate]=\"selectedStartDate\"\n            [selectedEndDate]=\"selectedEndDate\"\n            [mode]=\"mode\"\n            [isRange]=\"isRange\"\n            [customLabels]=\"customLabels\"\n            [calendarType]=\"calendarType\"\n            [minDate]=\"minDate\"\n            [maxDate]=\"maxDate\"\n            [cssClass]=\"cssClass\"\n            [footerDescription]=\"footerDescription\"\n            [activeInput]=\"activeInput\"\n            [showSidebar]=\"showSidebar\"\n            [showToday]=\"showToday\"\n            [showTimePicker]=\"showTimePicker\"\n            [timeDisplayFormat]=\"timeDisplayFormat\"\n            [dateFormat]=\"extractDateFormat(format)\"\n            [disabledDates]=\"disabledDates\"\n            [disabledDatesFilter]=\"disabledDatesFilter\"\n            [disabledTimesFilter]=\"disabledTimesFilter\"\n            [templates]=\"templates\"\n            (dateSelected)=\"onDateSelected($event)\"\n            (dateRangeSelected)=\"onDateRangeSelected($event)\"\n            (closePicker)=\"close()\"\n            (clickInside)=\"focus()\"\n            tabindex=\"-1\"\n            [attr.disabled]=\"disabled? 'disabled':null\"\n          ></asa-date-picker-popup>\n        </div>\n      </ng-template>\n      <ng-template\n        cdkConnectedOverlay\n        nzConnectedOverlay\n        [cdkConnectedOverlayOrigin]=\"origin\"\n        [cdkConnectedOverlayOpen]=\"isOpen\"\n        [cdkConnectedOverlayPositions]=\"overlayPositions\"\n        [cdkConnectedOverlayTransformOriginOn]=\"'.asa-picker-wrapper'\"\n        [cdkConnectedOverlayHasBackdrop]=\"false\"\n        (positionChange)=\"onPositionChange($event)\"\n        (detach)=\"close()\"\n      >\n        <div\n          class=\"asa-picker-wrapper\"\n          [class.disabled]=\"disabled\"\n          [@slideMotion]=\"'enter'\"\n          style=\"position: relative;\"\n          (click)=\"$event.stopPropagation()\"\n        >\n          <ng-container *ngTemplateOutlet=\"inlineMode\"></ng-container>\n        </div>\n      </ng-template>\n    </div>\n  `, host: {\r\n                        \"[class.asa-datepicker]\": \"true\",\r\n                        \"[class.asa-datepicker-rtl]\": \"rtl\"\r\n                    }, imports: [\r\n                        NgIf,\r\n                        FormsModule,\r\n                        ReactiveFormsModule,\r\n                        OverlayModule,\r\n                        NgTemplateOutlet,\r\n                        NzConnectedOverlayDirective,\r\n                        DateMaskDirective,\r\n                        DatePickerPopupComponent\r\n                    ], providers: [\r\n                        DestroyService,\r\n                        AsaDatePickerService,\r\n                        {\r\n                            provide: NG_VALUE_ACCESSOR,\r\n                            useExisting: forwardRef(() => AsaDatePickerComponent),\r\n                            multi: true\r\n                        }\r\n                    ], animations: [slideMotion], styles: [\":host.asa-datepicker ::ng-deep{display:block;max-width:fit-content}.date-picker-wrapper{position:relative;max-width:fit-content}input{font-family:inherit;max-width:300px;padding:6px 10px;border:1px solid #d9d9d9;border-radius:4px;font-size:14px;outline:none;transition:all .3s}input:hover{border-color:#40a9ff}input.focus{border-color:#40a9ff;box-shadow:0 0 0 2px #1890ff33;outline:none}.range-input-container{display:flex;align-items:center;border:1px solid #d9d9d9;border-radius:4px;overflow:hidden}.range-input-container input{border:none;flex:1;width:50%;padding:6px 10px;border-radius:0}.range-input-container input.focus{border-bottom:1px solid;border-color:#40a9ff;box-shadow:none!important}.range-separator{padding:0 8px;color:#999}.calendar-button{background:none;border:none;padding:4px 4px 0;cursor:pointer;font-size:16px}.range-input-labels{display:flex;justify-content:space-between;gap:10px;color:#444;padding:0 5px 5px}.end-label{width:49%}.disabled{opacity:.8;pointer-events:none}.disabled .range-input-container{background:#f3f3f3}.input-container .calendar-button{position:absolute;right:0;bottom:5px}.date-picker-rtl .input-container .calendar-button{right:auto;left:0}.input-container{display:flex;flex-direction:column;gap:3px;color:#444}.input-container.rtl{direction:rtl}// rtl :dir(rtl) .range-separator{rotate:180deg}\\n\"] }]\r\n        }], ctorParameters: function () {\r\n        return [{ type: i1$1.FormBuilder }, { type: i0.ElementRef }, { type: i0.Renderer2 }, { type: i0.ChangeDetectorRef }, { type: AsaDatePickerService }, { type: DestroyService }, { type: i0.NgZone }, { type: JalaliDateAdapter }, { type: GregorianDateAdapter }, { type: Document, decorators: [{\r\n                        type: Inject,\r\n                        args: [DOCUMENT]\r\n                    }] }];\r\n    }, propDecorators: { rtl: [{\r\n                type: Input\r\n            }], mode: [{\r\n                type: Input\r\n            }], isRange: [{\r\n                type: Input\r\n            }], customLabels: [{\r\n                type: Input\r\n            }], calendarType: [{\r\n                type: Input\r\n            }], lang: [{\r\n                type: Input\r\n            }], cssClass: [{\r\n                type: Input\r\n            }], footerDescription: [{\r\n                type: Input\r\n            }], rangeInputLabels: [{\r\n                type: Input\r\n            }], inputLabel: [{\r\n                type: Input\r\n            }], placement: [{\r\n                type: Input\r\n            }], disabled: [{\r\n                type: Input\r\n            }], isInline: [{\r\n                type: Input\r\n            }], showSidebar: [{\r\n                type: Input\r\n            }], showToday: [{\r\n                type: Input\r\n            }], valueFormat: [{\r\n                type: Input\r\n            }], disableInputMask: [{\r\n                type: Input\r\n            }], disabledDates: [{\r\n                type: Input\r\n            }], disabledDatesFilter: [{\r\n                type: Input\r\n            }], disabledTimesFilter: [{\r\n                type: Input\r\n            }], allowEmpty: [{\r\n                type: Input\r\n            }], readOnly: [{\r\n                type: Input\r\n            }], readOnlyInput: [{\r\n                type: Input\r\n            }], minDate: [{\r\n                type: Input\r\n            }], maxDate: [{\r\n                type: Input\r\n            }], format: [{\r\n                type: Input\r\n            }], onFocus: [{\r\n                type: Output\r\n            }], onBlur: [{\r\n                type: Output\r\n            }], onChangeValue: [{\r\n                type: Output\r\n            }], onOpenChange: [{\r\n                type: Output\r\n            }], datePickerInput: [{\r\n                type: ViewChild,\r\n                args: ['datePickerInput']\r\n            }], rangePickerInputs: [{\r\n                type: ViewChildren,\r\n                args: ['rangePickerInput']\r\n            }], datePickerPopup: [{\r\n                type: ViewChild,\r\n                args: [DatePickerPopupComponent]\r\n            }], templates: [{\r\n                type: ContentChildren,\r\n                args: [CustomTemplate]\r\n            }] } });\n\nclass AsaDatePickerModule {\r\n}\r\nAsaDatePickerModule.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"14.3.0\", ngImport: i0, type: AsaDatePickerModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });\r\nAsaDatePickerModule.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: \"14.0.0\", version: \"14.3.0\", ngImport: i0, type: AsaDatePickerModule, imports: [AsaDatePickerComponent,\r\n        DatePickerPopupComponent,\r\n        DateMaskDirective,\r\n        NzConnectedOverlayDirective,\r\n        TimePickerComponent,\r\n        CustomTemplate], exports: [AsaDatePickerComponent,\r\n        TimePickerComponent,\r\n        DatePickerPopupComponent,\r\n        DateMaskDirective,\r\n        NzConnectedOverlayDirective,\r\n        CustomTemplate] });\r\nAsaDatePickerModule.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: \"12.0.0\", version: \"14.3.0\", ngImport: i0, type: AsaDatePickerModule, imports: [AsaDatePickerComponent,\r\n        DatePickerPopupComponent,\r\n        TimePickerComponent] });\r\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"14.3.0\", ngImport: i0, type: AsaDatePickerModule, decorators: [{\r\n            type: NgModule,\r\n            args: [{\r\n                    imports: [\r\n                        AsaDatePickerComponent,\r\n                        DatePickerPopupComponent,\r\n                        DateMaskDirective,\r\n                        NzConnectedOverlayDirective,\r\n                        TimePickerComponent,\r\n                        CustomTemplate\r\n                    ],\r\n                    exports: [\r\n                        AsaDatePickerComponent,\r\n                        TimePickerComponent,\r\n                        DatePickerPopupComponent,\r\n                        DateMaskDirective,\r\n                        NzConnectedOverlayDirective,\r\n                        CustomTemplate\r\n                    ]\r\n                }]\r\n        }] });\n\n/*\r\n * Public API Surface of asa-date-picker\r\n */\n\n/**\r\n * Generated bundle index. Do not edit.\r\n */\n\nexport { AsaDatePickerComponent, AsaDatePickerModule, AsaDatePickerService, CustomTemplate, DATE_PICKER_POSITION_MAP, DEFAULT_CASCADER_POSITIONS, DEFAULT_DATE_PICKER_POSITIONS, DEFAULT_MENTION_BOTTOM_POSITIONS, DEFAULT_MENTION_TOP_POSITIONS, DEFAULT_TOOLTIP_POSITIONS, DateMaskDirective, DatePickerPopupComponent, DestroyService, GregorianDateAdapter, InputBoolean, JalaliDateAdapter, NzConnectedOverlayDirective, POSITION_MAP, TimePickerComponent, getPlacementName, lang_En, lang_Fa, slideAlertMotion, slideMotion, toBoolean };\n//# sourceMappingURL=asa-date-picker.mjs.map\n","map":{"version":3,"file":"asa-date-picker.mjs","sources":["../../../projects/asa-date-picker/src/utils/animation/animation-consts.ts","../../../projects/asa-date-picker/src/utils/animation/slide.ts","../../../projects/asa-date-picker/src/utils/models.ts","../../../projects/asa-date-picker/src/asa-date-picker.service.ts","../../../projects/asa-date-picker/src/utils/overlay/overlay.ts","../../../projects/asa-date-picker/src/utils/input-mask.directive.ts","../../../projects/asa-date-picker/src/asa-date-adapter.ts","../../../projects/asa-date-picker/src/time-picker/time-picker.component.ts","../../../projects/asa-date-picker/src/date-picker-popup/date-picker-popup.component.ts","../../../projects/asa-date-picker/src/utils/template.directive.ts","../../../projects/asa-date-picker/src/asa-date-picker.component.ts","../../../projects/asa-date-picker/src/asa-date-picker.module.ts","../../../projects/asa-date-picker/src/public-api.ts","../../../projects/asa-date-picker/src/asa-date-picker.ts"],"sourcesContent":["/**\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/../blob/master/LICENSE\n */\n\nexport class AnimationDuration {\n  static SLOW = '0.3s'; // Modal\n  static BASE = '0.2s';\n  static FAST = '0.1s'; // Tooltip\n}\n\nexport class AnimationCurves {\n  static EASE_BASE_OUT = 'cubic-bezier(0.7, 0.3, 0.1, 1)';\n  static EASE_BASE_IN = 'cubic-bezier(0.9, 0, 0.3, 0.7)';\n  static EASE_OUT = 'cubic-bezier(0.215, 0.61, 0.355, 1)';\n  static EASE_IN = 'cubic-bezier(0.55, 0.055, 0.675, 0.19)';\n  static EASE_IN_OUT = 'cubic-bezier(0.645, 0.045, 0.355, 1)';\n  static EASE_OUT_BACK = 'cubic-bezier(0.12, 0.4, 0.29, 1.46)';\n  static EASE_IN_BACK = 'cubic-bezier(0.71, -0.46, 0.88, 0.6)';\n  static EASE_IN_OUT_BACK = 'cubic-bezier(0.71, -0.46, 0.29, 1.46)';\n  static EASE_OUT_CIRC = 'cubic-bezier(0.08, 0.82, 0.17, 1)';\n  static EASE_IN_CIRC = 'cubic-bezier(0.6, 0.04, 0.98, 0.34)';\n  static EASE_IN_OUT_CIRC = 'cubic-bezier(0.78, 0.14, 0.15, 0.86)';\n  static EASE_OUT_QUINT = 'cubic-bezier(0.23, 1, 0.32, 1)';\n  static EASE_IN_QUINT = 'cubic-bezier(0.755, 0.05, 0.855, 0.06)';\n  static EASE_IN_OUT_QUINT = 'cubic-bezier(0.86, 0, 0.07, 1)';\n}\n","/**\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/../blob/master/LICENSE\n */\n\nimport { animate, AnimationTriggerMetadata, state, style, transition, trigger } from '@angular/animations';\n\nimport { AnimationCurves, AnimationDuration } from './animation-consts';\n\nconst ANIMATION_TRANSITION_IN = `${AnimationDuration.BASE} ${AnimationCurves.EASE_OUT_QUINT}`;\nconst ANIMATION_TRANSITION_OUT = `${AnimationDuration.BASE} ${AnimationCurves.EASE_IN_QUINT}`;\n\nexport const slideMotion: AnimationTriggerMetadata = trigger('slideMotion', [\n  state(\n    'void',\n    style({\n      opacity: 0,\n      transform: 'scaleY(0.8)'\n    })\n  ),\n  state(\n    'enter',\n    style({\n      opacity: 1,\n      transform: 'scaleY(1)'\n    })\n  ),\n  transition('void => *', [animate(ANIMATION_TRANSITION_IN)]),\n  transition('* => void', [animate(ANIMATION_TRANSITION_OUT)])\n]);\n\nexport const slideAlertMotion: AnimationTriggerMetadata = trigger('slideAlertMotion', [\n  transition(':leave', [\n    style({ opacity: 1, transform: 'scaleY(1)', transformOrigin: '0% 0%' }),\n    animate(\n      `${AnimationDuration.SLOW} ${AnimationCurves.EASE_IN_OUT_CIRC}`,\n      style({\n        opacity: 0,\n        transform: 'scaleY(0)',\n        transformOrigin: '0% 0%'\n      })\n    )\n  ])\n]);\n","import { Injectable } from \"@angular/core\";\n\nexport interface CustomLabels {\n    label: string,\n    value: Array<Date> | 'custom',\n    arrow?: boolean\n}\n\nexport interface YearRange {\n    start: number,\n    end: number\n}\n\nexport interface DateRange {\n    start: Date | string,\n    end: Date | string\n}\n\nexport interface RangeInputLabels {\n    start: string,\n    end: string,\n}\n\nexport interface Lang_Locale {\n    today: string;\n    lastDay: string;\n    lastWeek: string;\n    lastMonth: string;\n    custom: string;\n    previousMonth: string;\n    nextMonth: string;\n    previousYear: string;\n    nextYear: string;\n    selectTime: string;\n    selectDate: string;\n    selectMonth: string;\n    selectYear: string;\n    selectDateRange: string;\n    startDate: string;\n    endDate: string;\n    pm: string;\n    am: string;\n    ok: string;\n    cancel: string;\n    now: string;\n}\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class lang_Fa implements Lang_Locale{\n    today:string = \"امروز\";\n    lastDay:string = \"آخرین روز\";\n    lastWeek:string = \"آخرین هفته\";\n    lastMonth:string = \"آخرین ماه\";\n    custom:string = \"دلخواه\";\n    previousMonth:string = \"ماه قبل\";\n    nextMonth:string = \"ماه بعد\";\n    previousYear:string = \"سال قبل\";\n    nextYear:string = \"سال بعد\";\n    selectTime:string = \"انتخاب زمان\";\n    selectDate:string = \"انتخاب تاریخ\";\n    selectMonth:string = \"انتخاب ماه\";\n    selectYear:string = \"انتخاب سال\";\n    selectDateRange:string = \"انتخاب محدوده تاریخ\";\n    startDate:string = \"از تاریخ\";\n    endDate:string = \"تا تاریخ\";\n    pm: string = \"ب.ظ\";\n    am: string = \"ق.ظ\";\n    ok: string = \"تایید\";\n    cancel: string = \"لغو\";\n    now: string = \"اکنون\";\n}\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class lang_En implements Lang_Locale{\n    today:string = \"Today\"\n    lastDay:string = \"Last Day\";\n    lastWeek:string = \"Last Week\";\n    lastMonth:string = \"Last Month\";\n    custom:string = \"Custom\";\n    previousMonth:string = \"Previous Month\";\n    nextMonth:string = \"Next Month\";\n    previousYear:string = \"Previous Year\";\n    nextYear:string = \"Next Year\";\n    selectTime:string = \"Select time\";\n    selectDate:string = \"Select date\";\n    selectMonth:string = \"Select month\";\n    selectYear:string = \"Select year\";\n    selectDateRange:string = \"Select date range\";\n    startDate:string = \"Start date\";\n    endDate:string = \"End date\";\n    pm: string = \"PM\";\n    am: string = \"AM\";\n    ok: string = \"Ok\";\n    cancel: string = \"Cancel\";\n    now: string = \"Now\";\n}","import { Injectable, OnDestroy } from \"@angular/core\";\nimport { BehaviorSubject, Subject } from \"rxjs\";\nimport { lang_En, lang_Fa, Lang_Locale } from \"./utils/models\";\n\nexport interface ValidTimeResult {\n  isValid: boolean;\n  normalizedTime: string;\n}\n\n@Injectable()\nexport class AsaDatePickerService {\n  activeInput$: BehaviorSubject<string> = new BehaviorSubject('');\n  locale: Lang_Locale;\n  /**\n   *\n   */\n  constructor(public locale_fa: lang_Fa, public locale_en: lang_En) {\n  }\n\n  getActiveInputValue() {\n    return this.activeInput$.getValue();\n  }\n}\n\n@Injectable()\nexport class DestroyService extends Subject<void> implements OnDestroy {\n  ngOnDestroy(): void {\n    this.next();\n    this.complete();\n  }\n}\n","/**\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/../blob/master/LICENSE\n */\n\nimport {\n    CdkConnectedOverlay,\n    CdkOverlayOrigin,\n    ConnectedOverlayPositionChange,\n    FlexibleConnectedPositionStrategyOrigin,\n    ConnectionPositionPair\n} from '@angular/cdk/overlay';\nimport { coerceBooleanProperty, _isNumberValue } from '@angular/cdk/coercion';\nimport { Directive, ElementRef, Input } from '@angular/core';\nimport { takeUntil } from 'rxjs/operators';\nimport { DestroyService } from '../../asa-date-picker.service';\n\nexport type SafeAny = any;\n\nfunction propDecoratorFactory<T, D>(\n    name: string,\n    fallback: (v: T) => D\n): (target: SafeAny, propName: string) => void {\n    function propDecorator(\n        target: SafeAny,\n        propName: string,\n        originalDescriptor?: TypedPropertyDescriptor<SafeAny>\n    ): SafeAny {\n        const privatePropName = `$$__zorroPropDecorator__${propName}`;\n\n        if (Object.prototype.hasOwnProperty.call(target, privatePropName)) {\n            console.warn(`The prop \"${privatePropName}\" is already exist, it will be overrided by ${name} decorator.`);\n        }\n\n        Object.defineProperty(target, privatePropName, {\n            configurable: true,\n            writable: true\n        });\n\n        return {\n            get(): string {\n                return originalDescriptor && originalDescriptor.get\n                    ? originalDescriptor.get.bind(this)()\n                    : this[privatePropName];\n            },\n            set(value: T): void {\n                if (originalDescriptor && originalDescriptor.set) {\n                    originalDescriptor.set.bind(this)(fallback(value));\n                }\n                this[privatePropName] = fallback(value);\n            }\n        };\n    }\n\n    return propDecorator;\n}\n\n/**\n * Input decorator that handle a prop to do get/set automatically with toBoolean\n *\n * Why not using @InputBoolean alone without @Input? AOT needs @Input to be visible\n *\n * @howToUse\n * ```\n * @Input() @InputBoolean() visible: boolean = false;\n *\n * // Act as below:\n * // @Input()\n * // get visible() { return this.__visible; }\n * // set visible(value) { this.__visible = value; }\n * // __visible = false;\n * ```\n */\nexport function InputBoolean(): any {\n    return propDecoratorFactory('InputBoolean', toBoolean);\n}\n\nexport function toBoolean(value: boolean | string): boolean {\n    return coerceBooleanProperty(value);\n}\n\n/** Equivalent of `ClientRect` without some of the properties we don't care about. */\ntype Dimensions = Omit<ClientRect, 'x' | 'y' | 'toJSON'>;\n\n@Directive({\n    selector: '[cdkConnectedOverlay][nzConnectedOverlay]',\n    exportAs: 'nzConnectedOverlay',\n    standalone: true,\n    providers: [DestroyService]\n})\nexport class NzConnectedOverlayDirective {\n    @Input() @InputBoolean() nzArrowPointAtCenter: boolean = false;\n\n    constructor(\n        private readonly cdkConnectedOverlay: CdkConnectedOverlay,\n        private readonly nzDestroyService: DestroyService\n    ) {\n        this.cdkConnectedOverlay.backdropClass = 'nz-overlay-transparent-backdrop';\n\n        this.cdkConnectedOverlay.positionChange\n            .pipe(takeUntil(this.nzDestroyService))\n            .subscribe((position: ConnectedOverlayPositionChange) => {\n                if (this.nzArrowPointAtCenter) {\n                    this.updateArrowPosition(position);\n                }\n            });\n    }\n\n    private updateArrowPosition(position: ConnectedOverlayPositionChange): void {\n        const originRect = this.getOriginRect();\n        const placement = getPlacementName(position);\n\n        let offsetX: number | undefined = 0;\n        let offsetY: number | undefined = 0;\n\n        if (placement === 'topLeft' || placement === 'bottomLeft') {\n            offsetX = originRect.width / 2 - 14;\n        } else if (placement === 'topRight' || placement === 'bottomRight') {\n            offsetX = -(originRect.width / 2 - 14);\n        } else if (placement === 'leftTop' || placement === 'rightTop') {\n            offsetY = originRect.height / 2 - 10;\n        } else if (placement === 'leftBottom' || placement === 'rightBottom') {\n            offsetY = -(originRect.height / 2 - 10);\n        }\n\n        if (this.cdkConnectedOverlay.offsetX !== offsetX || this.cdkConnectedOverlay.offsetY !== offsetY) {\n            this.cdkConnectedOverlay.offsetY = offsetY;\n            this.cdkConnectedOverlay.offsetX = offsetX;\n            this.cdkConnectedOverlay.overlayRef.updatePosition();\n        }\n    }\n\n    private getFlexibleConnectedPositionStrategyOrigin(): FlexibleConnectedPositionStrategyOrigin {\n        if (this.cdkConnectedOverlay.origin instanceof CdkOverlayOrigin) {\n            return this.cdkConnectedOverlay.origin.elementRef;\n        } else {\n            return this.cdkConnectedOverlay.origin;\n        }\n    }\n\n    private getOriginRect(): Dimensions {\n        const origin = this.getFlexibleConnectedPositionStrategyOrigin();\n\n        if (origin instanceof ElementRef) {\n            return origin.nativeElement.getBoundingClientRect();\n        }\n\n        // Check for Element so SVG elements are also supported.\n        if (origin instanceof Element) {\n            return origin.getBoundingClientRect();\n        }\n\n        const width = origin.width || 0;\n        const height = origin.height || 0;\n\n        // If the origin is a point, return a client rect as if it was a 0x0 element at the point.\n        return {\n            top: origin.y,\n            bottom: origin.y + height,\n            left: origin.x,\n            right: origin.x + width,\n            height,\n            width\n        };\n    }\n}\n\n//overlay-position.ts:\nexport const POSITION_MAP = {\n    top: new ConnectionPositionPair({ originX: 'center', originY: 'top' }, { overlayX: 'center', overlayY: 'bottom' }),\n    topCenter: new ConnectionPositionPair(\n      { originX: 'center', originY: 'top' },\n      { overlayX: 'center', overlayY: 'bottom' }\n    ),\n    topLeft: new ConnectionPositionPair({ originX: 'start', originY: 'top' }, { overlayX: 'start', overlayY: 'bottom' }),\n    topRight: new ConnectionPositionPair({ originX: 'end', originY: 'top' }, { overlayX: 'end', overlayY: 'bottom' }),\n    right: new ConnectionPositionPair({ originX: 'end', originY: 'center' }, { overlayX: 'start', overlayY: 'center' }),\n    rightTop: new ConnectionPositionPair({ originX: 'end', originY: 'top' }, { overlayX: 'start', overlayY: 'top' }),\n    rightBottom: new ConnectionPositionPair(\n      { originX: 'end', originY: 'bottom' },\n      { overlayX: 'start', overlayY: 'bottom' }\n    ),\n    bottom: new ConnectionPositionPair({ originX: 'center', originY: 'bottom' }, { overlayX: 'center', overlayY: 'top' }),\n    bottomCenter: new ConnectionPositionPair(\n      { originX: 'center', originY: 'bottom' },\n      { overlayX: 'center', overlayY: 'top' }\n    ),\n    bottomLeft: new ConnectionPositionPair(\n      { originX: 'start', originY: 'bottom' },\n      { overlayX: 'start', overlayY: 'top' }\n    ),\n    bottomRight: new ConnectionPositionPair({ originX: 'end', originY: 'bottom' }, { overlayX: 'end', overlayY: 'top' }),\n    left: new ConnectionPositionPair({ originX: 'start', originY: 'center' }, { overlayX: 'end', overlayY: 'center' }),\n    leftTop: new ConnectionPositionPair({ originX: 'start', originY: 'top' }, { overlayX: 'end', overlayY: 'top' }),\n    leftBottom: new ConnectionPositionPair(\n      { originX: 'start', originY: 'bottom' },\n      { overlayX: 'end', overlayY: 'bottom' }\n    )\n  };\nexport type POSITION_TYPE = keyof typeof POSITION_MAP;\nexport type POSITION_TYPE_HORIZONTAL = Extract<\n  POSITION_TYPE,\n  'bottomLeft' | 'bottomCenter' | 'bottomRight' | 'topLeft' | 'topCenter' | 'topRight'\n>;\n\nexport const DEFAULT_TOOLTIP_POSITIONS = [POSITION_MAP.top, POSITION_MAP.right, POSITION_MAP.bottom, POSITION_MAP.left];\n\nexport const DEFAULT_CASCADER_POSITIONS = [\n  POSITION_MAP.bottomLeft,\n  POSITION_MAP.bottomRight,\n  POSITION_MAP.topLeft,\n  POSITION_MAP.topRight,\n  POSITION_MAP.topCenter,\n  POSITION_MAP.bottomCenter\n];\n\nexport const DEFAULT_MENTION_TOP_POSITIONS = [\n  new ConnectionPositionPair({ originX: 'start', originY: 'bottom' }, { overlayX: 'start', overlayY: 'bottom' }),\n  new ConnectionPositionPair({ originX: 'start', originY: 'bottom' }, { overlayX: 'end', overlayY: 'bottom' })\n];\n\nexport const DEFAULT_MENTION_BOTTOM_POSITIONS = [\n  POSITION_MAP.bottomLeft,\n  new ConnectionPositionPair({ originX: 'start', originY: 'bottom' }, { overlayX: 'end', overlayY: 'top' })\n];\n\nexport function getPlacementName(position: ConnectedOverlayPositionChange): string | undefined {\n  for (const placement in POSITION_MAP) {\n    if (\n      position.connectionPair.originX === POSITION_MAP[placement as POSITION_TYPE].originX &&\n      position.connectionPair.originY === POSITION_MAP[placement as POSITION_TYPE].originY &&\n      position.connectionPair.overlayX === POSITION_MAP[placement as POSITION_TYPE].overlayX &&\n      position.connectionPair.overlayY === POSITION_MAP[placement as POSITION_TYPE].overlayY\n    ) {\n      return placement;\n    }\n  }\n  return undefined;\n}\n\nexport const DATE_PICKER_POSITION_MAP = {\n  bottomLeft: new ConnectionPositionPair(\n    { originX: 'start', originY: 'bottom' },\n    { overlayX: 'start', overlayY: 'top' },\n    undefined,\n    2\n  ),\n  topLeft: new ConnectionPositionPair(\n    { originX: 'start', originY: 'top' },\n    { overlayX: 'start', overlayY: 'bottom' },\n    undefined,\n    -2\n  ),\n  bottomRight: new ConnectionPositionPair(\n    { originX: 'end', originY: 'bottom' },\n    { overlayX: 'end', overlayY: 'top' },\n    undefined,\n    2\n  ),\n  topRight: new ConnectionPositionPair(\n    { originX: 'end', originY: 'top' },\n    { overlayX: 'end', overlayY: 'bottom' },\n    undefined,\n    -2\n  )\n};\n\nexport const DEFAULT_DATE_PICKER_POSITIONS = [\n  DATE_PICKER_POSITION_MAP.bottomLeft,\n  DATE_PICKER_POSITION_MAP.topLeft,\n  DATE_PICKER_POSITION_MAP.bottomRight,\n  DATE_PICKER_POSITION_MAP.topRight\n];\n","import { Directive, ElementRef, HostListener, Input } from '@angular/core';\n\n@Directive({\n  selector: '[asa-dateMask]',\n  standalone: true\n})\nexport class DateMaskDirective {\n  @Input('asa-dateMask') dateFormat: string = 'yyyy/MM/dd';\n  @Input() disableInputMask = false;\n\n  delimiters: string[] = [];\n  parts: string[] = [];\n  lastValue: string = '';\n\n  constructor(public el: ElementRef) {}\n\n  ngOnInit() {\n    this.parseFormat();\n  }\n\n  parseFormat() {\n    if (this.disableInputMask)\n      return;\n\n    this.parts = [];\n    this.delimiters = [];\n    let currentPart = '';\n\n    for (let i = 0; i < this.dateFormat.length; i++) {\n      const char = this.dateFormat[i];\n\n      if (this.isFormatChar(char)) {\n        currentPart += char;\n      } else {\n        if (currentPart) {\n          this.parts.push(currentPart);\n          currentPart = '';\n        }\n        this.delimiters.push(char);\n      }\n    }\n\n    if (currentPart) {\n      this.parts.push(currentPart);\n    }\n  }\n\n  isFormatChar(char: string): boolean {\n    return /[yMdHhmsa]/i.test(char);\n  }\n\n  @HostListener('input', ['$event'])\n  onInput(event: InputEvent) {\n    if (this.disableInputMask)\n      return;\n\n    const input = event.target as HTMLInputElement;\n    const cursorPosition = input.selectionStart || 0;\n    let value = input.value.replace(/[^0-9APMapm\\s:/\\-\\.]/g, '');\n\n    // Allow backspace/delete\n    if (value.length < this.lastValue.length) {\n      this.lastValue = value;\n      return;\n    }\n\n    let formattedParts: string[] = [];\n    let currentValue = value;\n    let shouldAddDelimiter = false;\n    let totalLength = 0;\n    let newCursorPosition = cursorPosition;\n\n    for (let i = 0; i < this.parts.length; i++) {\n      const part = this.extractPart(currentValue, this.parts[i]);\n      if (!part && part !== '0') break;\n\n      const expectedLength = this.getPartLength(this.parts[i]);\n      let formattedPart = part;\n\n      if (formattedPart.length >= expectedLength) {\n        formattedPart = this.validatePart(formattedPart.slice(0, expectedLength), this.parts[i]);\n        shouldAddDelimiter = true;\n      }\n\n      formattedParts.push(formattedPart);\n      totalLength += formattedPart.length;\n\n      if (shouldAddDelimiter && i < this.parts.length - 1) {\n        formattedParts.push(this.delimiters[i] || '');\n        totalLength += 1;\n        shouldAddDelimiter = false;\n\n        if (cursorPosition === totalLength - 1) {\n          newCursorPosition = totalLength;\n        }\n      }\n\n      currentValue = this.removeProcessedPart(currentValue, part);\n    }\n\n    const formattedValue = formattedParts.join('');\n    input.value = formattedValue;\n\n    // Set cursor position\n    newCursorPosition = Math.min(newCursorPosition, totalLength);\n    input.setSelectionRange(newCursorPosition, newCursorPosition);\n\n    this.lastValue = formattedValue;\n  }\n\n  extractPart(value: string, format: string): string {\n    if (!value) return '';\n\n    if (format[0].toLowerCase() === 'a') {\n      // Handle AM/PM\n      const match = value.match(/^[AaPp][Mm]?/);\n      return match ? match[0].toUpperCase() : '';\n    }\n\n    // Handle numeric parts\n    const match = value.match(/^\\d+/);\n    return match ? match[0] : '';\n  }\n\n  removeProcessedPart(value: string, part: string): string {\n    if (!part) return value;\n\n    // Remove part and following delimiter if exists\n    const remainingValue = value.slice(part.length);\n    return remainingValue.replace(/^[:/\\s-]/, '');\n  }\n\n  @HostListener('keydown', ['$event'])\n  onKeyDown(event: KeyboardEvent) {\n    if (this.disableInputMask)\n      return;\n\n    const input = event.target as HTMLInputElement;\n    const cursorPosition = input.selectionStart || 0;\n\n    // Allow control keys\n    if (event.key === 'Backspace' || event.key === 'Delete' ||\n        event.key === 'ArrowLeft' || event.key === 'ArrowRight' ||\n        event.key === 'Tab' || event.ctrlKey) {\n      return;\n    }\n\n    const currentPartIndex = this.getCurrentPartIndex(input.value, cursorPosition);\n    if (currentPartIndex === -1) return;\n\n    const currentFormat = this.parts[currentPartIndex];\n    const isTimeDelimiter = event.key === ':' && cursorPosition > 0 &&\n                           (this.parts[currentPartIndex - 1]?.includes('H') ||\n                            this.parts[currentPartIndex - 1]?.includes('h'));\n\n    // Allow time delimiter after hours\n    if (isTimeDelimiter) {\n      if (this.delimiters[currentPartIndex - 1] === ':') {\n        const parts = input.value.split(/[:/\\s-]/);\n        const currentPart = this.validatePart(parts[currentPartIndex - 1], this.parts[currentPartIndex - 1]);\n        parts[currentPartIndex - 1] = currentPart;\n\n        const newValue = parts.slice(0, currentPartIndex).join(this.delimiters[currentPartIndex - 1]) + ':';\n        input.value = newValue + parts.slice(currentPartIndex).join(this.delimiters[currentPartIndex]);\n\n        input.setSelectionRange(newValue.length, newValue.length);\n        event.preventDefault();\n      }\n      return;\n    }\n\n    // Handle AM/PM input\n    if (currentFormat[0].toLowerCase() === 'a') {\n      if (!/^[AaPpMm]$/.test(event.key)) {\n        event.preventDefault();\n      }\n      return;\n    }\n\n    // Allow only digits for other parts\n    if (!/^\\d$/.test(event.key)) {\n      event.preventDefault();\n    }\n  }\n\n  validatePart(value: string, format: string): string {\n    if (value === '') return '';\n\n    const type = format[0].toLowerCase();\n    if (type === 'a') {\n      const upperValue = value.toUpperCase();\n      if (value.length === 1) {\n        return upperValue === 'A' || upperValue === 'P' ? upperValue : '';\n      }\n      return ['AM', 'PM'].includes(upperValue) ? upperValue : upperValue[0];\n    }\n\n    const numValue = parseInt(value, 10);\n    switch (type) {\n      case 'h': // 12-hour format\n        if (format[0] == 'H')\n          return Math.min(Math.max(numValue, 0), 23).toString().padStart(2, '0');\n\n        return Math.min(Math.max(numValue, 1), 12).toString().padStart(2, '0');\n\n      case 'm': // month or minute\n        if (format === 'MM') {\n          return Math.min(Math.max(numValue, 1), 12).toString().padStart(2, '0');\n        }\n        return Math.min(Math.max(numValue, 0), 59).toString().padStart(2, '0');\n\n      case 's': // seconds\n        return Math.min(Math.max(numValue, 0), 59).toString().padStart(2, '0');\n\n      case 'd': // day\n        return Math.min(Math.max(numValue, 1), 31).toString().padStart(2, '0');\n\n      case 'y': // year\n        if (format.length === 2) return value.padStart(2, '0');\n        return value.padStart(4, '0');\n\n      default:\n        return value;\n    }\n  }\n\n  getPartLength(format: string): number {\n    const type = format[0].toLowerCase();\n    switch (type) {\n      case 'y': return format.length === 2 ? 2 : 4;\n      case 'a': return format.length === 1 ? 1 : 2;\n      default: return 2;\n    }\n  }\n\n  getCurrentPartIndex(value: string, cursorPosition: number): number {\n    const parts = value.split(/[:/\\s-]/);\n    let currentIndex = 0;\n    let totalLength = 0;\n\n    for (let i = 0; i < parts.length; i++) {\n      totalLength += parts[i].length;\n      if (cursorPosition <= totalLength + i) {\n        return i;\n      }\n      totalLength += 1; // Add delimiter length\n    }\n\n    return parts.length - 1;\n  }\n}\n","import {\n  format as formatJalali,\n  parse as parseJalali,\n  addDays as addDaysJalali,\n  addMonths as addMonthsJalali,\n  addYears as addYearsJalali,\n  addHours as addHoursJalali,\n  startOfWeek as startOfWeekJalali,\n  startOfMonth as startOfMonthJalali,\n  endOfMonth as endOfMonthJalali,\n  isSameDay as isSameDayJalali,\n  isSameMonth as isSameMonthJalali,\n  isSameYear as isSameYearJalali,\n  isAfter as isAfterJalali,\n  isBefore as isBeforeJalali,\n  isValid as isValidJalali,\n  max as maxJalali,\n  setYear as setYearJalali,\n  getDaysInMonth as getDaysInMonthJalali\n} from 'date-fns-jalali';\n\nimport {\n  format as formatGregorian,\n  parse as parseGregorian,\n  addDays as addDaysGregorian,\n  addMonths as addMonthsGregorian,\n  addYears as addYearsGregorian,\n  addHours as addHoursGregorian,\n  startOfWeek as startOfWeekGregorian,\n  startOfMonth as startOfMonthGregorian,\n  endOfMonth as endOfMonthGregorian,\n  isSameDay as isSameDayGregorian,\n  isSameMonth as isSameMonthGregorian,\n  isSameYear as isSameYearGregorian,\n  isAfter as isAfterGregorian,\n  isBefore as isBeforeGregorian,\n  isValid as isValidGregorian,\n  max as maxGregorian,\n  setYear as setYearGregorian,\n  getDaysInMonth as getDaysInMonthGregorian,\n  parseISO,\n  startOfDay,\n  isEqual,\n  addMinutes\n} from 'date-fns';\nimport { Injectable } from '@angular/core';\n\nexport interface AsaDateAdapter<D> {\n  today(): D;\n  parse(value: any, formatString: string): D | null;\n  format(date: D, formatString: string): string;\n  addDays(date: D, amount: number): D;\n  addMonths(date: D, amount: number): D;\n  addYears(date: D, amount: number): D;\n  addHours(date: D, amount: number): D;\n  getYear(date: D): number|null;\n  getMonth(date: D): number|null;\n  getDate(date: D): number|null;\n  getDayOfWeek(date: D): number;\n  getMonthNames(style: 'long' | 'short' | 'narrow'): string[];\n  getDateNames(): string[];\n  getDayOfWeekNames(style: 'long' | 'short' | 'narrow'): string[];\n  getFirstDayOfWeek(): number;\n  getNumDaysInMonth(date: D): number;\n  clone(date: D): D;\n  createDate(year: number, month: number, date: number): D;\n  isSameDay(date1: D, date2: D): boolean;\n  isSameMonth(date1: D, date2: D): boolean;\n  isSameYear(date1: D, date2: D): boolean;\n  isAfter(date1: D, date2: D): boolean;\n  isBefore(date1: D, date2: D): boolean;\n  isEqual(date1: D, date2: D): boolean;\n  startOfMonth(date: D): D;\n  endOfMonth(date: D): D;\n  startOfWeek(date: D): D;\n  isValidFormat(dateString: string, formatString: string): boolean;\n  max(dates: D[]): D;\n  setYear(date: D, year: number): D;\n  startOfDay (date: D): D;\n  getHours(date: D): number|null;\n  getMinutes(date: D): number|null;\n  getSeconds(date: D): number|null;\n  setHours(date: D, hours: number): D;\n  setMinutes(date: D, minutes: number): D;\n  setSeconds(date: D, seconds: number): D;\n  getDaysInMonth(date: D): number;\n  addMinutes(date: D, amount: number): D;\n}\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class JalaliDateAdapter implements AsaDateAdapter<Date> {\n  today(): Date {\n    return new Date();\n  }\n\n  parse(value: any, formatString: string): Date | null {\n    if (typeof value === 'string') {\n      // Check if it's in ISO 8601 format\n      if (value.includes('T')) {\n        const parsedDate = parseISO(value);\n        return isValidJalali(parsedDate) ? parsedDate : null;\n      }\n\n      try {\n        const parsedDate = parseJalali(value, formatString, new Date());\n        return isValidJalali(parsedDate) ? parsedDate : null;\n      } catch (error) {\n        console.error('Error parsing date:', error);\n        return null;\n      }\n    } else if (value instanceof Date) {\n      return isValidJalali(value) ? value : null;\n    }\n    return null;\n  }\n\n  format(date: Date, formatString: string): string {\n    return formatJalali(date, formatString);\n  }\n\n  addDays(date: Date, amount: number): Date {\n    return addDaysJalali(date, amount);\n  }\n\n  addMonths(date: Date, amount: number): Date {\n    return addMonthsJalali(date, amount);\n  }\n\n  addYears(date: Date, amount: number): Date {\n    return addYearsJalali(date, amount);\n  }\n\n  addHours(date: Date, amount: number): Date {\n    return addHoursJalali(date, amount);\n  }\n\n  getYear(date: Date): number|null {\n    return date? parseInt(formatJalali(date, 'yyyy')): null;\n  }\n\n  getMonth(date: Date): number|null {\n    // Jalali months are 1-indexed in date-fns-jalali\n    return date? parseInt(formatJalali(date, 'M')) - 1: null;\n  }\n\n  getDate(date: Date): number|null {\n    return date? parseInt(formatJalali(date, 'dd')): null;\n  }\n\n  getDayOfWeek(date: Date): number {\n    return parseInt(formatJalali(date, 'i')) - 1;\n  }\n\n  getMonthNames(style: 'long' | 'short' | 'narrow'): string[] {\n    const jalaliMonths = [\n      'فروردین', 'اردیبهشت', 'خرداد', 'تیر', 'مرداد', 'شهریور',\n      'مهر', 'آبان', 'آذر', 'دی', 'بهمن', 'اسفند'\n    ];\n\n    switch (style) {\n      case 'long':\n        return jalaliMonths;\n      case 'short':\n        return jalaliMonths.map(month => month.substring(0, 3));\n      case 'narrow':\n        return jalaliMonths.map(month => month.substring(0, 1));\n      default:\n        return jalaliMonths;\n    }\n  }\n\n  getDateNames(): string[] {\n    return Array.from({ length: 31 }, (_, i) => (i + 1).toString());\n  }\n\n  getDayOfWeekNames(style: 'long' | 'short' | 'narrow'): string[] {\n    const formats = {\n      long: 'EEEE',\n      short: 'EEEEE',\n      narrow: 'EEEEEE'\n    };\n    return Array.from({ length: 7 }, (_, i) =>\n      formatJalali(addDaysJalali(startOfWeekJalali(new Date()), i), formats[style])\n    );\n  }\n\n  getFirstDayOfWeek(): number {\n    return 6; // Saturday is the first day of the week in the Jalali calendar\n  }\n\n  getNumDaysInMonth(date: Date): number {\n    return parseInt(formatJalali(endOfMonthJalali(date), 'd'));\n  }\n\n  clone(date: Date): Date {\n    return new Date(date.getTime());\n  }\n\n  createDate(year: number, month: number, date: number): Date {\n    // Adjust for 0-indexed months in the interface vs 1-indexed months in date-fns-jalali\n    return parseJalali(`${year}/${month + 1}/${date}`, 'yyyy/M/d', new Date());\n  }\n\n  isSameDay(date1: Date, date2: Date): boolean {\n    return isSameDayJalali(date1, date2);\n  }\n\n  isSameMonth(date1: Date, date2: Date): boolean {\n    return isSameMonthJalali(date1, date2);\n  }\n\n  isSameYear(date1: Date, date2: Date): boolean {\n    return isSameYearJalali(date1, date2);\n  }\n\n  isAfter(date1: Date, date2: Date): boolean {\n    return isAfterJalali(date1, date2);\n  }\n\n  isBefore(date1: Date, date2: Date): boolean {\n    return isBeforeJalali(date1, date2);\n  }\n\n  isEqual(date1: Date, date2: Date): boolean {\n    return isEqual(date1, date2);\n  }\n\n  startOfMonth(date: Date): Date {\n    return startOfMonthJalali(date);\n  }\n\n  endOfMonth(date: Date): Date {\n    return endOfMonthJalali(date);\n  }\n\n  startOfWeek(date: Date): Date {\n    return startOfWeekJalali(date, { weekStartsOn: this.getFirstDayOfWeek() as 0 | 1 | 2 | 3 | 4 | 5 | 6 });\n  }\n\n  isValidFormat(dateString: string, formatString: string): boolean {\n    try {\n      const parsedDate = parseJalali(dateString, formatString, new Date());\n      if (!isValidJalali(parsedDate)) {\n        return false;\n      }\n      // Check if the formatted parsed date matches the original date string\n      const formattedDate = formatJalali(parsedDate, formatString);\n      return formattedDate === dateString;\n    } catch (error) {\n      return false;\n    }\n  }\n\n  max(dates: Date[]): Date {\n    return maxJalali(dates);\n  }\n\n  setYear(date: Date, year: number): Date {\n    return setYearJalali(date, year)\n  }\n\n  startOfDay(date: Date): Date {\n    return startOfDay(date);\n  }\n\n  getHours(date: Date): number|null {\n    return date? parseInt(formatJalali(date, 'HH')): null;\n  }\n\n  getMinutes(date: Date): number|null {\n    return date? parseInt(formatJalali(date, 'mm')): null;\n  }\n\n  getSeconds(date: Date): number|null {\n    return date? parseInt(formatJalali(date, 'ss')): null;\n  }\n\n  setHours(date: Date, hours: number): Date {\n    const newDate = this.clone(date);\n    newDate.setHours(hours);\n    return newDate;\n  }\n\n  setMinutes(date: Date, minutes: number): Date {\n    const newDate = this.clone(date);\n    newDate.setMinutes(minutes);\n    return newDate;\n  }\n\n  setSeconds(date: Date, seconds: number): Date {\n    const newDate = this.clone(date);\n    newDate.setSeconds(seconds);\n    return newDate;\n  }\n\n  getDaysInMonth(date: Date) {\n    return getDaysInMonthJalali(date);\n  }\n\n  addMinutes(date: Date, amount: number) {\n    return addMinutes(date, amount);\n  }\n}\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class GregorianDateAdapter implements AsaDateAdapter<Date> {\n  today(): Date {\n    return new Date();\n  }\n\n  parse(value: any, formatString: string): Date | null {\n    if (typeof value === 'string') {\n       // Check if it's in ISO 8601 format\n       if (value.includes('T')) {\n        const parsedDate = parseISO(value);\n        return isValidGregorian(parsedDate) ? parsedDate : null;\n      }\n\n      try {\n        let parsedDate: Date;\n        if (formatString === \"ISO\") {\n          parsedDate = parseISO(value);\n        } else {\n          parsedDate = parseGregorian(value, formatString, new Date());\n        }\n        return isValidGregorian(parsedDate) ? parsedDate : null;\n      } catch (error) {\n        console.error('Error parsing date:', error);\n        return null;\n      }\n    } else if (value instanceof Date) {\n      return isValidGregorian(value) ? value : null;\n    }\n    return null;\n  }\n\n  format(date: Date, formatString: string): string {\n    return formatGregorian(date, formatString);\n  }\n\n  addDays(date: Date, amount: number): Date {\n    return addDaysGregorian(date, amount);\n  }\n\n  addMonths(date: Date, amount: number): Date {\n    return addMonthsGregorian(date, amount);\n  }\n\n  addYears(date: Date, amount: number): Date {\n    return addYearsGregorian(date, amount);\n  }\n\n  addHours(date: Date, amount: number): Date {\n    return addHoursGregorian(date, amount);\n  }\n\n  getYear(date: Date): number {\n    return date.getFullYear();\n  }\n\n  getMonth(date: Date): number {\n    return date.getMonth();\n  }\n\n  getDate(date: Date): number {\n    return date.getDate();\n  }\n\n  getDayOfWeek(date: Date): number {\n    return date.getDay();\n  }\n\n  getMonthNames(style: 'long' | 'short' | 'narrow'): string[] {\n    const formats = {\n      long: 'MMMM',\n      short: 'MMM',\n      narrow: 'MMMMM'\n    };\n    return Array.from({ length: 12 }, (_, i) =>\n      formatGregorian(new Date(2000, i, 1), formats[style])\n    );\n  }\n\n  getDateNames(): string[] {\n    return Array.from({ length: 31 }, (_, i) => (i + 1).toString());\n  }\n\n  getDayOfWeekNames(style: 'long' | 'short' | 'narrow'): string[] {\n    const formats = {\n      long: 'EEEE',\n      short: 'EEE',\n      narrow: 'EEEEE'\n    };\n    return Array.from({ length: 7 }, (_, i) =>\n      formatGregorian(addDaysGregorian(startOfWeekGregorian(new Date()), i), formats[style])\n    );\n  }\n\n  getFirstDayOfWeek(): number {\n    return 0; // Sunday is the first day of the week in the Gregorian calendar\n  }\n\n  getNumDaysInMonth(date: Date): number {\n    return new Date(date.getFullYear(), date.getMonth() + 1, 0).getDate();\n  }\n\n  clone(date: Date): Date {\n    return new Date(date.getTime());\n  }\n\n  createDate(year: number, month: number, date: number): Date {\n    return new Date(year, month, date);\n  }\n\n  isSameDay(date1: Date, date2: Date): boolean {\n    return isSameDayGregorian(date1, date2);\n  }\n\n  isSameMonth(date1: Date, date2: Date): boolean {\n    return isSameMonthGregorian(date1, date2);\n  }\n\n  isSameYear(date1: Date, date2: Date): boolean {\n    return isSameYearGregorian(date1, date2);\n  }\n\n  isAfter(date1: Date, date2: Date): boolean {\n    return isAfterGregorian(date1, date2);\n  }\n\n  isBefore(date1: Date, date2: Date): boolean {\n    return isBeforeGregorian(date1, date2);\n  }\n\n  isEqual(date1: Date, date2: Date): boolean {\n    return isEqual(date1, date2);\n  }\n\n  startOfMonth(date: Date): Date {\n    return startOfMonthGregorian(date);\n  }\n\n  endOfMonth(date: Date): Date {\n    return endOfMonthGregorian(date);\n  }\n\n  startOfWeek(date: Date): Date {\n    return startOfWeekGregorian(date, { weekStartsOn: this.getFirstDayOfWeek() as 0 | 1 | 2 | 3 | 4 | 5 | 6 });\n  }\n\n  isValidFormat(dateString: string, formatString: string): boolean {\n    try {\n      const parsedDate = parseGregorian(dateString, formatString, new Date());\n      if (!isValidGregorian(parsedDate)) {\n        return false;\n      }\n      // Check if the formatted parsed date matches the original date string\n      const formattedDate = formatGregorian(parsedDate, formatString);\n      return formattedDate === dateString;\n    } catch (error) {\n      return false;\n    }\n  }\n\n  max(dates: Date[]): Date {\n    return maxGregorian(dates);\n  }\n\n  setYear(date: Date, year: number): Date {\n    return setYearGregorian(date, year);\n  }\n\n  startOfDay(date: Date): Date {\n    return startOfDay(date);\n  }\n\n  getHours(date: Date): number|null {\n    return date? date.getHours(): null;\n  }\n\n  getMinutes(date: Date): number|null {\n    return date? date.getMinutes(): null;\n  }\n\n  getSeconds(date: Date): number|null {\n    return date? date.getSeconds(): null;\n  }\n\n  setHours(date: Date, hours: number): Date {\n    const newDate = this.clone(date);\n    newDate.setHours(hours);\n    return newDate;\n  }\n\n  setMinutes(date: Date, minutes: number): Date {\n    const newDate = this.clone(date);\n    newDate.setMinutes(minutes);\n    return newDate;\n  }\n\n  setSeconds(date: Date, seconds: number): Date {\n    const newDate = this.clone(date);\n    newDate.setSeconds(seconds);\n    return newDate;\n  }\n\n  getDaysInMonth(date: Date) {\n    return getDaysInMonthGregorian(date);\n  }\n\n  addMinutes(date: Date, amount: number) {\n    return addMinutes(date, amount);\n  }\n}\n","/**\n * Time Picker Component\n * A customizable time picker that supports 12/24 hour formats, seconds, and multiple locales.\n *\n * Features:\n * - 12/24 hour format\n * - Optional seconds\n * - Localization support\n * - String or Date value types\n * - Min/Max time validation\n * - Custom styling\n */\nimport { Component, ElementRef, forwardRef, Input, OnInit, Output, EventEmitter, ViewChild, OnDestroy, HostListener, ChangeDetectorRef, OnChanges, SimpleChanges, ChangeDetectionStrategy } from '@angular/core';\nimport { ControlValueAccessor, NG_VALUE_ACCESSOR, FormBuilder, FormGroup, ReactiveFormsModule } from '@angular/forms';\nimport { CdkOverlayOrigin, ConnectedOverlayPositionChange, OverlayModule } from '@angular/cdk/overlay';\nimport { slideMotion } from '../utils/animation/slide';\nimport { Lang_Locale } from '../utils/models';\nimport { AsaDatePickerService } from '../asa-date-picker.service';\nimport { AsaDateAdapter, GregorianDateAdapter, JalaliDateAdapter } from '../asa-date-adapter';\nimport { TimeConfig, TimeFormat, TimeValueType } from '../utils/types';\nimport { DEFAULT_DATE_PICKER_POSITIONS, NzConnectedOverlayDirective } from \"../utils/overlay/overlay\"\nimport { NgFor, NgIf, NgTemplateOutlet } from '@angular/common';\nimport { DateMaskDirective } from '../utils/input-mask.directive';\n\n@Component({\n  selector: 'asa-time-picker',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  template: `\n    <div class=\"time-picker-wrapper\" [formGroup]=\"form\">\n      <!-- Regular input mode -->\n      <ng-container *ngIf=\"!inline\">\n        <div class=\"input-wrapper\" [class.focus]=\"isOpen\" [class.disabled]=\"disabled\">\n          <input\n            #timePickerInput\n            [asa-dateMask]=\"displayFormat\"\n            [disableInputMask]=\"disableInputMask\"\n            [class.disabled]=\"disabled\"\n            type=\"text\"\n            class=\"time-picker-input\"\n            [class.focus]=\"isOpen\"\n            formControlName=\"timeInput\"\n            (focus)=\"onFocusInput()\"\n            [placeholder]=\"placeholder\"\n            [readonly]=\"readOnly || readOnlyInput\"\n            [attr.disabled]=\"disabled? 'disabled':null\"\n          >\n          <button *ngIf=\"showIcon\" class=\"time-button\" (click)=\"toggleTimePicker($event)\" tabindex=\"-1\">\n            <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"20\" height=\"20\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"#999\" stroke-width=\"2\">\n              <circle cx=\"12\" cy=\"12\" r=\"10\"/>\n              <path d=\"M12 6v6l4 2\"/>\n            </svg>\n          </button>\n        </div>\n\n        <ng-template\n          cdkConnectedOverlay\n          nzConnectedOverlay\n          [cdkConnectedOverlayOrigin]=\"origin\"\n          [cdkConnectedOverlayOpen]=\"isOpen\"\n          [cdkConnectedOverlayPositions]=\"overlayPositions\"\n          [cdkConnectedOverlayTransformOriginOn]=\"'.time-picker-popup'\"\n          [cdkConnectedOverlayHasBackdrop]=\"false\"\n          (positionChange)=\"onPositionChange($event)\"\n          (detach)=\"close()\"\n        >\n          <ng-container *ngTemplateOutlet=\"timePickerContent\"></ng-container>\n        </ng-template>\n      </ng-container>\n\n      <!-- Inline mode -->\n      <ng-container *ngIf=\"inline\">\n        <ng-container *ngTemplateOutlet=\"timePickerContent\"></ng-container>\n      </ng-container>\n\n      <!-- Time Picker Content Template -->\n      <ng-template #timePickerContent>\n        <div\n          #popupWrapper\n          [class]=\"'time-picker-popup ' + cssClass\"\n          [@slideMotion]=\"'enter'\"\n          [class.inline]=\"inline\"\n          [class.disabled]=\"disabled\"\n          style=\"position: relative\"\n          (click)=\"$event.stopPropagation()\"\n        >\n          <div class=\"time-picker-content\">\n            <div class=\"time-columns\">\n              <!-- Hours -->\n              <div class=\"time-column\">\n                <div class=\"time-scroller\">\n                  <button\n                    *ngFor=\"let hour of hours\"\n                    [id]=\"'selector_h'+hour\"\n                    [class.selected]=\"selectedTime.hour === hour\"\n                    [class.disabled]=\"isHourDisabled(hour)\"\n                    (click)=\"selectHour(hour)\"\n                    type=\"button\"\n                  >\n                    {{ hour.toString().padStart(2, '0') }}\n                  </button>\n                </div>\n              </div>\n\n              <div class=\"time-separator\">:</div>\n\n              <!-- Minutes -->\n              <div class=\"time-column\">\n                <div class=\"time-scroller\">\n                  <button\n                    *ngFor=\"let minute of minutes\"\n                    [id]=\"'selector_m'+minute\"\n                    [class.selected]=\"selectedTime.minute === minute\"\n                    [class.disabled]=\"isMinuteDisabled(minute)\"\n                    (click)=\"selectMinute(minute)\"\n                    type=\"button\"\n                  >\n                    {{ minute.toString().padStart(2, '0') }}\n                  </button>\n                </div>\n              </div>\n\n              <!-- Seconds (if format includes seconds) -->\n              <ng-container *ngIf=\"showSeconds\">\n                <div class=\"time-separator\">:</div>\n                <div class=\"time-column\">\n                  <div class=\"time-scroller\">\n                    <button\n                      *ngFor=\"let second of seconds\"\n                      [id]=\"'selector_s'+second\"\n                      [class.selected]=\"selectedTime.second === second\"\n                      [class.disabled]=\"isSecondDisabled(second)\"\n                      (click)=\"selectSecond(second)\"\n                      type=\"button\"\n                    >\n                      {{ second.toString().padStart(2, '0') }}\n                    </button>\n                  </div>\n                </div>\n              </ng-container>\n\n              <!-- AM/PM (only in 12-hour format) -->\n              <ng-container *ngIf=\"timeFormat === '12'\">\n                <div class=\"time-column period\">\n                  <button\n                    *ngFor=\"let period of periods\"\n                    [class.selected]=\"selectedTime.period === period\"\n                    (click)=\"selectPeriod(period)\"\n                    type=\"button\"\n                  >\n                    {{ period }}\n                  </button>\n                </div>\n              </ng-container>\n            </div>\n          </div>\n\n          <div class=\"time-picker-footer\" *ngIf=\"!inline\">\n            <div class=\"footer-buttons\">\n              <button class=\"now-btn\" (click)=\"selectNow()\" type=\"button\">{{ lang.now }}</button>\n            </div>\n            <div class=\"footer-actions\">\n              <button class=\"save-btn\" (click)=\"save()\" type=\"button\">{{ lang.ok }}</button>\n            </div>\n          </div>\n        </div>\n      </ng-template>\n    </div>\n  `,\n  styleUrls: ['./time-picker.component.scss'],\n  standalone: true,\n  imports: [\n    NgIf,\n    NgFor,\n    ReactiveFormsModule,\n    NgTemplateOutlet,\n    DateMaskDirective,\n    OverlayModule,\n    NzConnectedOverlayDirective\n  ],\n  providers: [\n    AsaDatePickerService,\n    {\n      provide: NG_VALUE_ACCESSOR,\n      useExisting: forwardRef(() => TimePickerComponent),\n      multi: true\n    }\n  ],\n  host: {\n    '(click)': 'open()'\n  },\n  animations: [slideMotion]\n})\nexport class TimePickerComponent implements ControlValueAccessor, OnInit, OnDestroy, OnChanges {\n  @Input() placeholder?: string;\n  @Input() rtl = false;\n  @Input() placement: 'left' | 'right' = 'right';\n  @Input() minTime?: string;\n  @Input() maxTime?: string;\n  @Input() lang!: Lang_Locale;\n  @Input() valueType: TimeValueType = 'string';\n  @Input() cssClass = '';\n  @Input() showIcon = true;\n  @Input() dateAdapter: AsaDateAdapter<Date>;\n  @Input() inline = false;\n  @Input() disableInputMask = false;\n  @Input() disabled = false;\n  @Input() disabledTimesFilter: (date: Date) => boolean;\n  @Input() allowEmpty = true;\n  @Input() readOnly = false;\n  @Input() readOnlyInput = false;\n  @Input() set displayFormat(value: string) {\n    this._displayFormat = value;\n    this.showSeconds = value.toLowerCase().includes('s');\n    // Infer time format from display format\n    this.timeFormat = this.getTimeFormatFromDisplayFormat(value);\n    this.updateHourRange();\n    this.updateTimeDisplay();\n  }\n  get displayFormat(): string {\n    return this._displayFormat;\n  }\n  @Input() set selectedDate(date: Date){\n    if (date) {\n      this._selectedDate = date;\n    }\n  }\n  get selectedDate() : Date {\n    return this._selectedDate;\n  }\n\n\n  @Output() timeChange = new EventEmitter<Date | string>();\n  @Output() openChange = new EventEmitter<boolean>();\n\n  @ViewChild('timePickerInput') timePickerInput!: ElementRef<HTMLInputElement>;\n  @ViewChild('popupWrapper') popupWrapper!: ElementRef<HTMLDivElement>;\n\n  timeFormat: TimeFormat = '12';\n  private _displayFormat = 'hh:mm a';\n  private _value: string | Date | null = null;\n  private _selectedDate: Date = new Date();\n  private onChange: (value: any) => void = () => {};\n  private onTouched: () => void = () => {};\n  private timeoutId: number | null = null;\n\n  showSeconds = false;\n  hours: number[] = [];\n  minutes: number[] = Array.from({ length: 60 }, (_, i) => i);\n  seconds: number[] = Array.from({ length: 60 }, (_, i) => i);\n  periods: string[] = [];\n  selectedTime: TimeConfig = {\n    hour: 12,\n    minute: 0,\n    second: 0,\n    period: ''\n  };\n  isOpen = false;\n  form: FormGroup;\n  origin: CdkOverlayOrigin;\n  overlayPositions = [...DEFAULT_DATE_PICKER_POSITIONS];\n\n  constructor(\n    public fb: FormBuilder,\n    public elementRef: ElementRef,\n    public cdref: ChangeDetectorRef,\n    public datePickerService: AsaDatePickerService,\n    public jalaliAdapter: JalaliDateAdapter,\n    public gregorianAdapter: GregorianDateAdapter,\n  ) {\n    this.dateAdapter = this.gregorianAdapter;\n    this.initializeForm();\n    this.initializeLocale();\n  }\n\n  // Lifecycle hooks\n  ngOnInit(): void {\n    this.updateHourRange();\n    this.origin = new CdkOverlayOrigin(this.elementRef);\n    this.setupInputSubscription();\n    this.value = this.selectedDate;\n\n    // Only add document click listener for non-inline mode\n    if (!this.inline) {\n      document.addEventListener('click', this.handleDocumentClick);\n    }\n\n    // Auto-open for inline mode\n    if (this.inline) {\n      this.isOpen = true;\n      this.scrollToTime();\n    }\n  }\n\n  ngOnDestroy(): void {\n    this.cleanupTimeouts();\n    document.removeEventListener('click', this.handleDocumentClick);\n  }\n\n  ngOnChanges(changes: SimpleChanges): void {\n    if (changes['rtl'] || changes['lang']) {\n      this.updateLocale();\n    }\n    if (changes['rtl'] && !changes['dateAdapter']) {\n      this.dateAdapter = this.rtl? this.jalaliAdapter: this.gregorianAdapter;\n    }\n  }\n\n  // Initialization methods\n  initializeForm(): void {\n    this.form = this.fb.group({\n      timeInput: ['']\n    });\n  }\n\n  initializeLocale(): void {\n    this.lang = this.datePickerService.locale_en;\n    this.selectedTime.period = this.lang.am;\n    this.periods = [this.lang.am, this.lang.pm];\n  }\n\n  updateLocale(): void {\n    this.lang = this.rtl ? this.datePickerService.locale_fa : this.datePickerService.locale_en;\n    this.selectedTime.period = this.lang.am;\n    this.periods = [this.lang.am, this.lang.pm];\n    this.placeholder = this.lang.selectTime;\n  }\n\n  setupInputSubscription(): void {\n    this.form.get('timeInput')?.valueChanges.subscribe(value => {\n      if (!value) return;\n\n      if (!this.isOpen) {\n        this.validateAndUpdateTime(value);\n      } else {\n        this.parseTimeString(value);\n        this.scrollToTime();\n      }\n    });\n  }\n\n  // Time management\n  updateHourRange(): void {\n    const format = this.getTimeFormatFromDisplayFormat(this._displayFormat);\n    this.hours = format === '12'\n      ? Array.from({ length: 12 }, (_, i) => i + 1)\n      : Array.from({ length: 24 }, (_, i) => i);\n  }\n\n  formatTime(date?: Date): string {\n    if (!date && !this.dateAdapter) return '';\n\n    const currentDate = date || this.updateDateFromSelection();\n    return this.dateAdapter.format(currentDate, this._displayFormat);\n  }\n\n  parseTimeString(value: string | Date): void {\n    if (!this.dateAdapter) return;\n\n    const date = value instanceof Date ? value : this.dateAdapter.parse(value, this._displayFormat);\n    if (!date) return;\n\n    const hours = this.dateAdapter.getHours(date);\n    const minutes = this.dateAdapter.getMinutes(date);\n    const seconds = this.dateAdapter.getSeconds(date);\n\n    if (hours === null || minutes === null || seconds === null) return;\n\n    this.selectedTime = {\n      hour: hours,\n      minute: minutes,\n      second: seconds,\n      period: hours >= 12 ? this.lang.pm : this.lang.am\n    };\n\n    this.cdref.markForCheck();\n  }\n\n  // Value accessors and form control\n  get value(): Date | string | null {\n    return this._value;\n  }\n\n  set value(val: Date | string | null) {\n    this._value = val;\n    this.updateFromValue(val);\n  }\n\n  updateFromValue(value: Date | string | null): void {\n    if (!value) {\n      this.resetSelection();\n      return;\n    }\n\n    if (value instanceof Date) {\n      this.updateFromDate(value);\n    } else {\n      this.parseTimeString(value);\n    }\n  }\n\n  updateFromDate(date: Date | null): void {\n    if (date && !isNaN(date.getTime()) && this.dateAdapter) {\n      const hours = this.dateAdapter.getHours(date);\n      if (hours === null) return;\n\n      this.selectedTime = {\n        hour: hours,\n        minute: this.dateAdapter.getMinutes(date) ?? 0,\n        second: this.dateAdapter.getSeconds(date) ?? 0,\n        period: hours >= 12 ? this.lang.pm : this.lang.am\n      };\n    } else {\n      this.resetSelection();\n    }\n\n    this.cdref.markForCheck();\n  }\n\n  resetSelection(): void {\n    this.selectedTime = {\n      hour: 0,\n      minute: 0,\n      second: 0,\n      period: this.lang.am\n    };\n    this.cdref.markForCheck();\n  }\n\n  writeValue(value: Date | string | null): void {\n    if (!value) {\n      this.value = null;\n      return;\n    }\n\n    if (value instanceof Date) {\n      this.value = value;\n    } else if (value.trim()) {\n      const date = this.selectedDate;\n      this.value = !isNaN(date.getTime()) && this.valueType === 'date' ? date : value;\n      this.parseTimeString(value);\n    }\n\n    this.updateTimeDisplay();\n    this.save(false);\n  }\n\n  registerOnChange(fn: any): void {\n    this.onChange = fn;\n  }\n\n  registerOnTouched(fn: any): void {\n    this.onTouched = fn;\n  }\n\n  // UI Event handlers\n  @HostListener('keydown', ['$event'])\n  handleKeydown(event: KeyboardEvent): void {\n    if (event.key === 'Tab' || event.key === 'Enter') {\n      this.handleTimeInput();\n      if (event.key === 'Tab') this.close();\n    } else if (event.key === 'Escape') {\n      this.close();\n    }\n  }\n\n  handleTimeInput(): void {\n    const currentValue = this.form.get('timeInput')?.value;\n    if (currentValue || (!currentValue && !this.allowEmpty)) {\n      this.validateAndUpdateTime(currentValue);\n    }\n  }\n\n  handleDocumentClick = (event: MouseEvent): void => {\n    if (!this.elementRef.nativeElement.contains(event.target) && this.isOpen) {\n      this.close();\n      this.handleTimeInput();\n    }\n  }\n\n  onFocusInput(): void {\n    if (!this.isOpen) {\n      this.open();\n    }\n  }\n\n  toggleTimePicker(event: Event): void {\n    event.stopPropagation();\n    this.isOpen ? this.close() : this.open();\n  }\n\n  // Picker operations\n  open(): void {\n    if (this.inline || this.disabled || this.readOnly) return;\n\n    const wasOpen = this.isOpen;\n    this.isOpen = true;\n    this.openChange.emit(true);\n    this.scrollToTime();\n\n    if (!wasOpen) {\n      this.cdref.markForCheck();\n    }\n  }\n\n  close(): void {\n    if (this.inline) return;\n\n    this.cleanupTimeouts();\n    if (this.isOpen) {\n      this.isOpen = false;\n      this.openChange.emit(false);\n      this.cdref.markForCheck();\n    }\n  }\n\n  // Selection methods\n  selectHour(hour: number): void {\n    if (!this.isHourDisabled(hour)) {\n      this.selectedTime.hour = hour;\n      this.updateTimeDisplay();\n      this.scrollToSelectedItem(`h${hour}`);\n      if (this.inline) this.save();\n    }\n  }\n\n  selectMinute(minute: number): void {\n    if (!this.isMinuteDisabled(minute)) {\n      this.selectedTime.minute = minute;\n      this.updateTimeDisplay();\n      this.scrollToSelectedItem(`m${minute}`);\n      if (this.inline) this.save();\n    }\n  }\n\n  selectSecond(second: number): void {\n    if (!this.isSecondDisabled(second)) {\n      this.selectedTime.second = second;\n      this.updateTimeDisplay();\n      this.scrollToSelectedItem(`s${second}`);\n      if (this.inline) this.save();\n    }\n  }\n\n  selectPeriod(period: string): void {\n    this.selectedTime.period = period;\n    this.updateTimeDisplay();\n  }\n\n  selectNow(): void {\n    const now = this.selectedDate;\n    this.selectedTime = {\n      hour: now.getHours(),\n      minute: now.getMinutes(),\n      second: now.getSeconds(),\n      period: now.getHours() >= 12 ? this.lang.pm : this.lang.am\n    };\n\n    this.updateTimeDisplay();\n    this.scrollToTime();\n    this.save();\n  }\n\n  save(close = true): void {\n    const date = this.updateDateFromSelection();\n    const { isValid, normalizedDate } = this.validateAndNormalizeTime(date);\n\n    if (!isValid || !normalizedDate) return;\n\n    const outputValue = this.valueType === 'date'\n      ? normalizedDate\n      : this.formatTime(normalizedDate);\n\n    const valueChanged = JSON.stringify(this._value) !== JSON.stringify(outputValue);\n    if (valueChanged) {\n      this._value = outputValue;\n      this.form.get('timeInput')?.setValue(this.formatTime(normalizedDate), { emitEvent: false });\n\n      this.onChange(outputValue);\n      this.timeChange.emit(outputValue);\n      this.cdref.markForCheck();\n    }\n\n    if (close && !this.inline) {\n      this.close();\n    }\n  }\n\n  // Validation methods\n  validateAndUpdateTime(value: string): void {\n    if (!value || !this.dateAdapter) {\n      this.updateTimeDisplay();\n      return;\n    }\n\n    try {\n      const parsedDate = this.dateAdapter.parse(value, this._displayFormat);\n      if (!parsedDate) {\n        this.updateTimeDisplay();\n        return;\n      }\n\n      const { isValid, normalizedDate } = this.validateAndNormalizeTime(parsedDate);\n      const formattedTime = this.dateAdapter.format(normalizedDate, this._displayFormat);\n      this.form.get('timeInput')?.setValue(formattedTime, { emitEvent: false });\n      this.parseTimeString(normalizedDate);\n\n      const outputValue = this.valueType === 'date' ? normalizedDate : formattedTime;\n      this._value = outputValue;\n      this.onChange(outputValue);\n      this.timeChange.emit(outputValue);\n\n    } catch (error) {\n      console.error('Error normalizing time:', error);\n      this.updateTimeDisplay();\n    }\n  }\n\n  isHourDisabled(hour: number): boolean {\n    if (!this.dateAdapter) return false;\n    return this.isFullHourDisabled(hour);\n  }\n\n  isMinuteDisabled(minute: number): boolean {\n    if (!this.dateAdapter) return false;\n    return this.isFullMinuteDisabled(minute);\n  }\n\n  isSecondDisabled(second: number): boolean {\n    if (!this.dateAdapter) return false;\n    const testConfig = { ...this.selectedTime, second };\n    const testDate = this.createDateWithTime(testConfig);\n    return this.isTimeDisabled(testDate);\n  }\n\n  isTimeDisabled(testDate: Date): boolean {\n    if (!this.dateAdapter) return false;\n\n    if (this.minTime) {\n      const minDate = this.dateAdapter.parse(this.minTime, this._displayFormat);\n      if (minDate && this.dateAdapter.isBefore(testDate, minDate)) {\n        return true;\n      }\n    }\n\n    if (this.maxTime) {\n      const maxDate = this.dateAdapter.parse(this.maxTime, this._displayFormat);\n      if (maxDate && this.dateAdapter.isAfter(testDate, maxDate)) {\n        return true;\n      }\n    }\n\n    return this.disabledTimesFilter ? this.disabledTimesFilter(testDate) : false;\n  }\n\n  validateAndNormalizeTime(date: Date): { isValid: boolean; normalizedDate: Date | null } {\n    if (!this.dateAdapter) {\n      return { isValid: false, normalizedDate: null };\n    }\n\n    let isValid = true;\n    // Clone the date to avoid modifying the original\n    let normalizedDate = this.dateAdapter.clone(date);\n    if (this.isTimeDisabled(normalizedDate)) {\n      isValid = false;\n      // Try to find nearest valid time (check next and previous 48 intervals of 30 minutes)\n      for (let i = 1; i <= 48; i++) {\n        const nextTime = this.dateAdapter.addMinutes(date, i * 30);\n        const prevTime = this.dateAdapter.addMinutes(date, -i * 30);\n\n        if (!this.isTimeDisabled(nextTime)) {\n          normalizedDate = nextTime;\n          break;\n        }\n        if (!this.isTimeDisabled(prevTime)) {\n          normalizedDate = prevTime;\n          break;\n        }\n      }\n\n      // If still disabled after trying to find valid time\n      if (this.isTimeDisabled(normalizedDate)) {\n        return { isValid: false, normalizedDate: null };\n      }\n    }\n\n    return { isValid: isValid, normalizedDate };\n  }\n\n  private isFullHourDisabled(hour: number): boolean {\n    for (let minute = 0; minute < 60; minute++) {\n      const testConfig = {\n        ...this.selectedTime,\n        hour,\n        minute,\n        second: 0\n      };\n      const testDate = this.createDateWithTime(testConfig);\n\n      if (!this.isTimeDisabled(testDate)) {\n        return false; // If any minute is enabled, hour is not fully disabled\n      }\n    }\n    return true; // All minutes in hour are disabled\n  }\n\n  private isFullMinuteDisabled(minute: number): boolean {\n    if (!this.showSeconds) {\n      const testConfig = {\n        ...this.selectedTime,\n        minute,\n        second: 0\n      };\n      const testDate = this.createDateWithTime(testConfig);\n      return this.isTimeDisabled(testDate);\n    }\n\n    // If showing seconds, check each second\n    for (let second = 0; second < 60; second++) {\n      const testConfig = {\n        ...this.selectedTime,\n        minute,\n        second\n      };\n      const testDate = this.createDateWithTime(testConfig);\n\n      if (!this.isTimeDisabled(testDate)) {\n        return false; // If any second is enabled, minute is not fully disabled\n      }\n    }\n    return true; // All seconds in minute are disabled\n  }\n\n  // Helper methods\n  createDateWithTime(config: TimeConfig): Date {\n    if (!this.dateAdapter) return this.selectedDate;\n\n    let testHour = config.hour;\n    if (this.timeFormat === '12') {\n      if (config.period === this.lang.pm && testHour < 12) testHour += 12;\n      if (config.period === this.lang.am && testHour === 12) testHour = 0;\n    }\n\n    let date = this.selectedDate;\n    date = this.dateAdapter.setHours(date, testHour);\n    date = this.dateAdapter.setMinutes(date, config.minute);\n    date = this.dateAdapter.setSeconds(date, config.second);\n    return date;\n  }\n\n  updateDateFromSelection(): Date {\n    if (!this.dateAdapter) return this.selectedDate;\n\n    let hours = this.selectedTime.hour;\n    if (this.timeFormat === '12') {\n      if (this.selectedTime.period === this.lang.pm && hours < 12) hours += 12;\n      if (this.selectedTime.period === this.lang.am && hours === 12) hours = 0;\n    }\n\n    let date = this._value instanceof Date ?\n      this.dateAdapter.clone(this._value) :\n      this.selectedDate;\n\n    date = this.dateAdapter.setHours(date, hours);\n    date = this.dateAdapter.setMinutes(date, this.selectedTime.minute);\n    date = this.dateAdapter.setSeconds(date, this.selectedTime.second);\n\n    return date;\n  }\n\n  updateTimeDisplay(): void {\n    if (this.form) {\n      this.form.get('timeInput')?.setValue(this.formatTime(), { emitEvent: false });\n    }\n  }\n\n  getTimeFormatFromDisplayFormat(format: string): '12' | '24' {\n    // Check for 24-hour format indicators\n    const has24HourFormat = /\\bH{1,2}\\b/.test(format);\n    return has24HourFormat ? '24' : '12';\n  }\n\n  // UI Update methods\n  async scrollToTime(){\n    await this.scrollToSelectedItem(`h${this.selectedTime.hour}`, 'auto'),\n    await this.scrollToSelectedItem(`m${this.selectedTime.minute}`, 'auto'),\n    this.showSeconds ? await this.scrollToSelectedItem(`s${this.selectedTime.second}`, 'auto') : '';\n  }\n\n  scrollToSelectedItem(id: string, behavior: ScrollBehavior = 'smooth'): Promise<boolean> {\n    this.cleanupTimeouts();\n    return new Promise((resolve) => {\n      if (!id) {\n        resolve(false);\n        return;\n      }\n\n      this.timeoutId = window.setTimeout(() => {\n        const selectedElement = this.popupWrapper?.nativeElement.querySelector(`#selector_${id}`);\n        if (selectedElement) {\n          selectedElement.scrollIntoView({ behavior, block: 'center' });\n        }\n        resolve(true);\n      }, 0);\n    });\n  }\n\n  cleanupTimeouts(): void {\n    if (this.timeoutId !== null) {\n      window.clearTimeout(this.timeoutId);\n      this.timeoutId = null;\n    }\n  }\n\n  onPositionChange(position: ConnectedOverlayPositionChange): void {\n    this.cdref.detectChanges();\n  }\n}\n","import { Component, Input, Output, EventEmitter, OnInit, OnChanges, SimpleChanges, ElementRef, ViewChild, AfterViewInit, ChangeDetectorRef, HostListener, OnDestroy, ChangeDetectionStrategy, TemplateRef, QueryList } from '@angular/core';\nimport { AsaDateAdapter, GregorianDateAdapter, JalaliDateAdapter } from '../asa-date-adapter';\nimport { CustomLabels, DateRange, Lang_Locale, YearRange } from '../utils/models';\nimport { DestroyService, AsaDatePickerService } from '../asa-date-picker.service';\nimport { CalendarType, DatepickerMode } from '../utils/types';\nimport { TimePickerComponent } from '../time-picker/time-picker.component';\nimport { takeUntil } from 'rxjs';\nimport { NgFor, NgIf, NgTemplateOutlet } from '@angular/common';\nimport { CustomTemplate } from '../utils/template.directive';\n\n@Component({\n  selector: 'asa-date-picker-popup',\n  standalone: true,\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  imports: [\n    NgIf,\n    NgFor,\n    NgTemplateOutlet,\n    TimePickerComponent\n  ],\n  template: `\n    <div class=\"date-picker-popup\" [class.rtl]=\"rtl\" [class]=\"cssClass\" tabindex=\"-1\">\n      <div class=\"date-picker-content\">\n        <ng-container *ngIf=\"showSidebar\">\n          <div *ngIf=\"isRange\" class=\"period-selector\">\n            <button\n              *ngFor=\"let period of periods\"\n              tabindex=\"-1\"\n              [class.active]=\"isActivePeriod(period)\"\n              (click)=\"selectPeriod(period)\"\n            >\n              {{ period.label }}\n              <span *ngIf=\"period.arrow\" class=\"arrow\">→</span>\n            </button>\n          </div>\n          <div *ngIf=\"!isRange\" class=\"side-selector\" #itemSelector>\n            <ng-container *ngIf=\"viewMode == 'days'\">\n              <button\n                *ngFor=\"let month of monthListNum\"\n                tabindex=\"-1\"\n                [id]=\"'selector_'+month\"\n                [class.active]=\"isActiveMonth(month)\"\n                [disabled]=\"isMonthDisabled(month)\"\n                (click)=\"selectMonth(month, false)\">\n                {{ getMonthName(month) }}\n              </button>\n            </ng-container>\n            <ng-container *ngIf=\"viewMode == 'months'\">\n              <button\n                *ngFor=\"let year of yearList\"\n                tabindex=\"-1\"\n                [id]=\"'selector_'+year\"\n                [class.active]=\"isActiveYear(year)\"\n                [disabled]=\"isYearDisabled(year)\"\n                (click)=\"selectYear(year, true)\"\n              >\n                {{ year }}\n              </button>\n            </ng-container>\n            <ng-container *ngIf=\"viewMode == 'years'\">\n              <button\n                tabindex=\"-1\"\n                *ngFor=\"let yearRange of yearRanges\"\n                [id]=\"'selector_'+yearRange.start\"\n                [class.active]=\"isActiveYearRange(yearRange.start)\"\n                [disabled]=\"isYearRangeDisabled(yearRange)\"\n                (click)=\"selectYearRange(yearRange.start)\"\n              >\n                {{ yearRange.start }} - {{ yearRange.end }}\n              </button>\n            </ng-container>\n          </div>\n        </ng-container>\n        <div class=\"calendar\">\n          <div class=\"header\">\n            <button class=\"asa-calendar-nav-left\" (click)=\"goPrev()\" [disabled]=\"isPrevMonthDisabled()\" tabindex=\"-1\"></button>\n            <span class=\"month-year\">\n              <span *ngIf=\"mode != 'year'\" class=\"month-name\" (click)=\"showMonthSelector()\">{{ getCurrentMonthName() }}</span>\n              <span class=\"year\" (click)=\"showYearSelector()\">{{ getCurrentYear() }}</span>\n            </span>\n            <button class=\"asa-calendar-nav-right\" (click)=\"goNext()\" [disabled]=\"isNextMonthDisabled()\" tabindex=\"-1\"></button>\n          </div>\n          <div *ngIf=\"viewMode == 'days'\">\n            <div *ngIf=\"viewMode === 'days'\" class=\"weekdays\">\n              <span *ngFor=\"let day of getWeekDays()\">{{ day }}</span>\n            </div>\n            <div *ngIf=\"viewMode === 'days'\" class=\"days\">\n              <button\n                *ngFor=\"let day of days\"\n                tabindex=\"-1\"\n                [class.different-month]=\"!isSameMonth(day, currentDate)\"\n                [class.selected]=\"isSelected(day)\"\n                [class.in-range]=\"isInRange(day)\"\n                [class.range-start]=\"isRangeStart(day)\"\n                [class.range-end]=\"isRangeEnd(day)\"\n                [class.today]=\"isToday(day)\"\n                [class.disabled]=\"isDateDisabled(day)\"\n                [disabled]=\"isDateDisabled(day)\"\n                (click)=\"selectDate(day)\"\n                (mouseenter)=\"onMouseEnter(day,$event)\"\n              >\n                <ng-container *ngIf=\"dayTemplate; else dayDefTemplate\">\n                  <ng-container *ngTemplateOutlet=\"$any(dayTemplate); context: { $implicit: day }\"></ng-container>\n                </ng-container>\n                <ng-template #dayDefTemplate>\n                  {{ dateAdapter.getDate(day) }}\n                </ng-template>\n              </button>\n            </div>\n          </div>\n          <div *ngIf=\"viewMode === 'months'\" class=\"months\">\n            <button\n              *ngFor=\"let month of monthListNum\"\n              tabindex=\"-1\"\n              [class.selected]=\"month === dateAdapter.getMonth(currentDate) + 1\"\n              [disabled]=\"isMonthDisabled(month)\"\n              (click)=\"selectMonth(month,false)\"\n            >\n              <ng-container *ngIf=\"monthTemplate; else monthDefTemplate\">\n                <ng-container *ngTemplateOutlet=\"$any(monthTemplate); context: { $implicit: month }\"></ng-container>\n              </ng-container>\n              <ng-template #monthDefTemplate>\n                {{ getMonthName(month) }}\n              </ng-template>\n            </button>\n          </div>\n          <div *ngIf=\"viewMode === 'years' || mode == 'year'\" class=\"years\">\n            <button\n              *ngFor=\"let year of yearList\"\n              tabindex=\"-1\"\n              [class.selected]=\"year === dateAdapter.getYear(currentDate)\"\n              [disabled]=\"isYearDisabled(year)\"\n              (click)=\"selectYear(year)\"\n            >\n              <ng-container *ngIf=\"yearTemplate; else yearDefTemplate\">\n                <ng-container *ngTemplateOutlet=\"$any(yearTemplate); context: { $implicit: year }\"></ng-container>\n              </ng-container>\n              <ng-template #yearDefTemplate>\n                {{ year }}\n              </ng-template>\n            </button>\n          </div>\n        </div>\n\n        <!-- Time Picker Integration -->\n        <div *ngIf=\"showTimePicker\" class=\"time-picker-section\">\n          <asa-time-picker\n            #timePicker\n            [rtl]=\"rtl\"\n            [dateAdapter]=\"dateAdapter\"\n            [valueType]=\"'date'\"\n            [displayFormat]=\"timeDisplayFormat\"\n            [inline]=\"true\"\n            [disabledTimesFilter]=\"disabledTimesFilter\"\n            [cssClass]=\"'embedded-time-picker'\"\n            [selectedDate]=\"selectedDate\"\n            (timeChange)=\"onTimeChange($event)\"\n          ></asa-time-picker>\n        </div>\n      </div>\n      <div class=\"date-picker-footer\" *ngIf=\"footerDescription || showTimePicker || showToday\">\n        <div class=\"footer-description\" *ngIf=\"footerDescription\" [innerHtml]=\"footerDescription\">\n        </div>\n        <div class=\"footer-actions\">\n          <button *ngIf=\"showTimePicker\" class=\"footer-button ok\" (click)=\"onOkClick()\">{{ lang.ok }}</button>\n          <button *ngIf=\"showToday\" class=\"footer-button\" (click)=\"onTodayClick()\">{{ lang.today }}</button>\n        </div>\n      </div>\n    </div>\n  `,\n  styleUrls: ['./date-picker-popup.component.scss']\n})\nexport class DatePickerPopupComponent implements OnInit, OnChanges, AfterViewInit, OnDestroy {\n  // ========== Input Properties ==========\n  @Input() rtl = false;\n  @Input() selectedDate: Date | null = null;\n  @Input() selectedStartDate: Date | null = null;\n  @Input() selectedEndDate: Date | null = null;\n  @Input() mode: DatepickerMode = 'day';\n  @Input() isRange = false;\n  @Input() customLabels: Array<CustomLabels> = [];\n  @Input() calendarType: CalendarType = 'gregorian';\n  @Input() minDate: Date | null = null;\n  @Input() maxDate: Date | null = null;\n  @Input() cssClass = '';\n  @Input() footerDescription = '';\n  @Input() activeInput: 'start' | 'end' | '' = null;\n  @Input() showSidebar = true;\n  @Input() showToday: boolean;\n  @Input() showTimePicker = false;\n  @Input() timeDisplayFormat = 'HH:mm';\n  @Input() dateFormat: string;\n  @Input() disabledDates: Array<Date | string> = [];\n  @Input() disabledDatesFilter: (date: Date) => boolean;\n  @Input() disabledTimesFilter: (date: Date) => boolean;\n  @Input() templates: QueryList<CustomTemplate>;\n\n  // ========== Output Properties ==========\n  @Output() dateSelected = new EventEmitter<Date>();\n  @Output() dateRangeSelected = new EventEmitter<DateRange>();\n  @Output() closePicker = new EventEmitter<void>();\n  @Output() clickInside = new EventEmitter<boolean>();\n\n  // ========== ViewChild Properties ==========\n  @ViewChild('itemSelector') itemSelector: ElementRef;\n  @ViewChild(TimePickerComponent) timePicker: TimePickerComponent;\n\n  // ========== Class Properties ==========\n  dateAdapter: AsaDateAdapter<Date>;\n  weekDays: string[] = [];\n  periods: Array<CustomLabels> = [];\n  days: Date[] = [];\n  currentDate: Date;\n  selectedPeriod: any = '';\n  tempEndDate: Date | null = null;\n  monthListNum = Array.from({ length: 12 }, (_, i) => i + 1);\n  yearList: number[] = [];\n  yearRanges: Array<YearRange> = [];\n  viewMode: 'days' | 'months' | 'years' = 'days';\n  lang: Lang_Locale;\n  timeoutId: any = null;\n  dayTemplate: TemplateRef<any>;\n  monthTemplate: TemplateRef<any>;\n  quarterTemplate: TemplateRef<any>;\n  yearTemplate: TemplateRef<any>;\n\n  // ========== Getters ==========\n  public get getDate(): Date {\n    return this.selectedDate || this.selectedStartDate || this.selectedEndDate || new Date();\n  }\n\n  constructor(\n    public el: ElementRef,\n    public cdr: ChangeDetectorRef,\n    public dpService: AsaDatePickerService,\n    public jalali: JalaliDateAdapter,\n    public gregorian: GregorianDateAdapter,\n    public destroy$: DestroyService\n  ) {\n    cdr.markForCheck();\n  }\n\n  // ========== Lifecycle Hooks ==========\n  ngOnInit() {\n    this.initializeComponent();\n  }\n\n  ngOnChanges(changes: SimpleChanges) {\n    this.handleChanges(changes);\n  }\n\n  ngAfterViewInit() {\n    this.scrollToSelectedItem();\n    this.setTimePickerDate();\n    this.templates.forEach((item) => {\n      switch (item.getType()) {\n          case 'day':\n              this.dayTemplate = item.template;\n              break;\n\n          case 'month':\n              this.monthTemplate = item.template;\n              break;\n\n          case 'quarter':\n              this.quarterTemplate = item.template;\n              break;\n\n          case 'year':\n              this.yearTemplate = item.template;\n              break;\n      }\n    });\n    this.cdr.markForCheck();\n  }\n\n  ngOnDestroy(): void {\n    if (this.timeoutId != null) {\n      clearTimeout(this.timeoutId);\n    }\n  }\n  // ========== Initialization Methods ==========\n  initializeComponent(): void {\n    this.setDateAdapter();\n    this.setInitialDate();\n    this.generateCalendar();\n    this.weekDays = this.dateAdapter.getDayOfWeekNames('short');\n    if (this.mode === 'year') {\n      this.showYearSelector();\n    }\n    this.initLabels();\n  }\n\n  initLabels(): void {\n    const today = this.dateAdapter.today();\n    if (this.customLabels?.length) {\n      this.periods = this.customLabels;\n    } else if (this.isRange) {\n      this.generateDefaultPeriods(today);\n    }\n  }\n\n  generateDefaultPeriods(today: Date): void {\n    this.periods = [\n      {\n        label: this.lang.lastDay,\n        value: [this.dateAdapter.addDays(today, -1), today]\n      },\n      {\n        label: this.lang.lastWeek,\n        value: [this.dateAdapter.addDays(today, -7), today],\n        arrow: true\n      },\n      {\n        label: this.lang.lastMonth,\n        value: [this.dateAdapter.addMonths(today, -1), today]\n      },\n      {\n        label: this.lang.custom,\n        value: 'custom'\n      }\n    ];\n  }\n\n  // ========== Date Adapter Methods ==========\n  setDateAdapter(): void {\n    this.dateAdapter = this.calendarType === 'jalali' ? this.jalali : this.gregorian;\n    this.lang = this.dpService.locale;\n  }\n\n  // ========== Calendar Generation Methods ==========\n  generateCalendar(): void {\n    const firstDayOfMonth = this.dateAdapter.startOfMonth(this.currentDate);\n    const startDate = this.dateAdapter.startOfWeek(firstDayOfMonth);\n    this.days = Array.from({ length: 42 }, (_, i) => this.dateAdapter.addDays(startDate, i));\n  }\n\n  // ========== View Mode Management ==========\n  setViewMode(): void {\n    switch (this.mode) {\n      case 'day':\n        this.viewMode = 'days';\n        break;\n      case 'month':\n        this.viewMode = 'months';\n        this.generateYearList(15);\n        break;\n      case 'year':\n        this.viewMode = 'years';\n        break;\n    }\n  }\n\n  showMonthSelector(): void {\n    this.viewMode = 'months';\n    this.generateYearList(15);\n    this.scrollToSelectedItem(this.dateAdapter.getYear(this.getDate));\n    this.cdr.markForCheck();\n  }\n\n  showYearSelector(): void {\n    this.viewMode = 'years';\n    this.generateYearRanges();\n    this.generateYearList();\n    this.scrollToSelectedItem();\n    this.cdr.markForCheck();\n  }\n\n  // ========== Time Selection Methods ==========\n  onTimeChange(time: string | Date): void {\n    const timeDate = time instanceof Date ? time : new Date(time);\n\n    if (!this.isRange) {\n      this.updateSingleDateTime(timeDate);\n    } else {\n      this.updateRangeDateTime(timeDate);\n    }\n  }\n\n  updateSingleDateTime(timeDate: Date): void {\n    if (!this.selectedDate) {\n      this.selectedDate = this.dateAdapter.today();\n    }\n\n    const updatedDate = this.applyTimeToDate(this.selectedDate, timeDate);\n    this.selectedDate = updatedDate;\n  }\n\n  updateRangeDateTime(timeDate: Date): void {\n    if (this.activeInput === 'start' && this.selectedStartDate) {\n      const updatedDate = this.applyTimeToDate(this.selectedStartDate, timeDate);\n      this.selectedStartDate = updatedDate;\n      this.dateRangeSelected.emit({ start: this.selectedStartDate, end: null });\n    } else if (this.activeInput === 'end' && this.selectedEndDate) {\n      const updatedDate = this.applyTimeToDate(this.selectedEndDate, timeDate);\n      this.selectedEndDate = updatedDate;\n      clearTimeout(this.timeoutId);\n      this.timeoutId = setTimeout(() => {\n        this.dateRangeSelected.emit({ start: this.selectedStartDate, end: this.selectedEndDate });\n      }, 300);\n    }\n  }\n\n  private applyTimeToDate(date: Date, timeDate: Date): Date {\n    let updatedDate = this.dateAdapter.setHours(date, timeDate.getHours());\n    updatedDate = this.dateAdapter.setMinutes(updatedDate, timeDate.getMinutes());\n    updatedDate = this.dateAdapter.setSeconds(updatedDate, timeDate.getSeconds());\n    return updatedDate;\n  }\n\n  setTimePickerDate(date?: Date) {\n    if (this.showTimePicker) {\n      if (this.isRange) {\n        this.dpService.activeInput$.asObservable()\n          .pipe(\n            takeUntil(this.destroy$)\n          )\n          .subscribe(active => {\n            if (active == 'start') {\n              this.timePicker.updateFromDate(this.selectedStartDate);\n            } else {\n              this.timePicker.updateFromDate(this.selectedEndDate);\n            }\n            this.timePicker.scrollToTime();\n          });\n      } else {\n        this.timePicker.updateFromDate(date || this.selectedDate);\n        this.timePicker.scrollToTime();\n      }\n    }\n  }\n\n  // ========== Date Selection Methods ==========\n  selectDate(date: Date): void {\n    if (this.isDateDisabled(date)) return;\n\n    if (this.showTimePicker) {\n      const existingDate = this.isRange ?\n        (this.activeInput === 'start' ? this.selectedStartDate : this.selectedEndDate) :\n        this.selectedDate;\n\n      if (existingDate) {\n        date = this.applyTimeToDate(date, existingDate);\n      }\n    } else {\n      date = this.applyTimeToDate(date, new Date())\n    }\n\n    if (this.isRange) {\n      this.handleRangeSelection(date);\n    } else {\n      this.handleSingleSelection(date);\n    }\n    this.currentDate = date;\n    this.cdr.markForCheck();\n  }\n\n  handleRangeSelection(date: Date): void {\n    const prevStartDate = this.selectedStartDate;\n    const prevEndDate = this.selectedEndDate;\n\n    if (!this.selectedStartDate ||\n        (this.selectedStartDate && this.selectedEndDate) ||\n        this.dateAdapter.isBefore(date, this.selectedStartDate)) {\n      this.selectedStartDate = date;\n      this.selectedEndDate = null;\n      if (!this.showTimePicker) {\n        this.activeInput = 'end';\n        this.dpService.activeInput$.next('end');\n      }\n      this.dateRangeSelected.emit({ start: this.selectedStartDate, end: null });\n    } else {\n      if (this.showTimePicker) {\n        this.activeInput = 'end';\n        this.dpService.activeInput$.next('end');\n      }\n      this.selectedEndDate = date;\n      this.dateRangeSelected.emit({ start: this.selectedStartDate, end: this.selectedEndDate });\n    }\n\n    if (prevStartDate !== this.selectedStartDate || prevEndDate !== this.selectedEndDate)\n      this.cdr.markForCheck();\n  }\n\n  handleSingleSelection(date: Date): void {\n    this.selectedDate = date;\n    if (!this.showTimePicker)\n      this.dateSelected.emit(date);\n  }\n\n  selectMonth(month: number, closeAfterSelection: boolean = false): void {\n    if (this.isMonthDisabled(month)) return;\n\n    this.currentDate = this.dateAdapter.createDate(\n      this.dateAdapter.getYear(this.currentDate),\n      month - 1,\n      1\n    );\n\n    if (this.isRange && this.mode === 'month') {\n      this.handleRangeSelection(this.currentDate);\n      return;\n    }\n\n    if (this.mode === 'month' || closeAfterSelection) {\n      this.selectedDate = this.currentDate;\n      this.dateSelected.emit(this.currentDate);\n      this.closeDatePicker();\n    } else {\n      this.viewMode = 'days';\n      this.generateCalendar();\n      this.cdr.detectChanges();\n    }\n\n    this.scrollToSelectedItem(month);\n  }\n\n  selectYear(year: number, sideSelector = false): void {\n    if (this.isYearDisabled(year)) return;\n\n    this.currentDate = this.dateAdapter.createDate(\n      year,\n      this.dateAdapter.getMonth(this.currentDate),\n      1\n    );\n\n    if (this.isRange && this.mode === 'year') {\n      this.handleRangeSelection(this.currentDate);\n      return;\n    }\n\n    if (this.mode === 'year') {\n      this.selectedDate = this.currentDate;\n      this.dateSelected.emit(this.currentDate);\n      this.closeDatePicker();\n      return;\n    }\n\n    if (sideSelector) {\n      this.currentDate = this.dateAdapter.setYear(this.selectedDate, year);\n      this.scrollToSelectedItem(year);\n    } else {\n      this.viewMode = 'months';\n      this.cdr.detectChanges();\n    }\n  }\n\n  // ========== Navigation Methods ==========\n  goPrev(): void {\n    if (this.viewMode === 'days') {\n      this.prevMonth();\n      this.cdr.detectChanges();\n      return;\n    }\n\n    let id: number;\n    if (this.viewMode === 'months') {\n      this.currentDate = this.dateAdapter.addYears(this.currentDate, -1);\n      id = this.dateAdapter.getYear(this.currentDate);\n    }\n\n    if (this.viewMode === 'years') {\n      const yearStart = this.yearList[0] - 15;\n      this.yearList = Array.from({ length: 15 }, (_, i) => yearStart + i);\n      id = yearStart;\n    }\n\n    this.cdr.detectChanges();\n    this.scrollToSelectedItem(id);\n  }\n\n  goNext(): void {\n    if (this.viewMode === 'days') {\n      this.nextMonth();\n      this.cdr.detectChanges();\n      return;\n    }\n\n    let id: number;\n    if (this.viewMode === 'months') {\n      this.currentDate = this.dateAdapter.addYears(this.currentDate, 1);\n      id = this.dateAdapter.getYear(this.currentDate);\n    }\n\n    if (this.viewMode === 'years') {\n      const yearStart = this.yearList[14] + 1;\n      this.yearList = Array.from({ length: 15 }, (_, i) => yearStart + i);\n      id = yearStart;\n    }\n\n    this.cdr.detectChanges();\n    this.scrollToSelectedItem(id);\n  }\n\n  prevMonth(): void {\n    if (this.isPrevMonthDisabled()) return;\n    this.currentDate = this.dateAdapter.addMonths(this.currentDate, -1);\n    this.generateCalendar();\n    this.scrollToSelectedItem(this.dateAdapter.getMonth(this.currentDate) + 1);\n  }\n\n  nextMonth(): void {\n    if (this.isNextMonthDisabled()) return;\n    this.currentDate = this.dateAdapter.addMonths(this.currentDate, 1);\n    this.generateCalendar();\n    this.scrollToSelectedItem(this.dateAdapter.getMonth(this.currentDate) + 1);\n  }\n\n  // ========== State Check Methods ==========\n  isSelected(date: Date): boolean {\n    if (this.isRange) {\n      return this.isRangeStart(date) || this.isRangeEnd(date);\n    }\n    return this.selectedDate && this.dateAdapter.isSameDay(date, this.selectedDate);\n  }\n\n  isRangeStart(date: Date): boolean {\n    return this.isRange &&\n           this.selectedStartDate &&\n           this.dateAdapter.isSameDay(date, this.selectedStartDate);\n  }\n\n  isRangeEnd(date: Date): boolean {\n    return this.isRange &&\n           this.selectedEndDate &&\n           this.dateAdapter.isSameDay(date, this.selectedEndDate);\n  }\n\n  isInRange(date: Date): boolean {\n    return this.isRange &&\n           this.selectedStartDate &&\n           (this.selectedEndDate || this.tempEndDate) &&\n           this.dateAdapter.isAfter(date, this.selectedStartDate) &&\n           this.dateAdapter.isBefore(date, this.selectedEndDate || this.tempEndDate);\n  }\n\n  isToday(date: Date): boolean {\n    return this.dateAdapter.isSameDay(date, this.dateAdapter.today()) && this.showToday;\n  }\n\n  isActiveMonth(month: number): boolean {\n    return this.dateAdapter.getMonth(this.currentDate) === month - 1;\n  }\n\n  isActiveYear(year: number): boolean {\n    return year === this.dateAdapter.getYear(this.currentDate);\n  }\n\n  isActiveYearRange(startYear: number): boolean {\n    return startYear === this.yearList[0];\n  }\n\n  // ========== Disabled State Methods ==========\n  isDateDisabled(date: Date): boolean {\n    if (\n      (this.minDate && this.dateAdapter.isBefore(date, this.minDate)) ||\n      (this.maxDate && this.dateAdapter.isAfter(date, this.maxDate))\n    ) {\n      return true;\n    }\n\n    // Check if date is in disabled dates array\n    const parsedDisabledDates = this.parseDisabledDates();\n    const isDisabledDate = parsedDisabledDates.some(disabledDate =>\n      this.dateAdapter.isSameDay(date, disabledDate)\n    );\n\n    // Check custom filter function if provided\n    const isFilterDisabled = this.disabledDatesFilter ?\n      this.disabledDatesFilter(date) :\n      false;\n\n    return isDisabledDate || isFilterDisabled;\n  }\n\n  isMonthDisabled(month: number): boolean {\n    const year = this.dateAdapter.getYear(this.currentDate);\n    const startOfMonth = this.dateAdapter.createDate(year, month - 1, 1);\n\n    // Check if all days in month are disabled\n    const daysInMonth = this.dateAdapter.getDaysInMonth(startOfMonth);\n    let allDaysDisabled = true;\n\n    for (let day = 1; day <= daysInMonth; day++) {\n      const date = this.dateAdapter.createDate(year, month - 1, day);\n      if (!this.isDateDisabled(date)) {\n        allDaysDisabled = false;\n        break;\n      }\n    }\n\n    return allDaysDisabled;\n  }\n\n  isYearDisabled(year: number): boolean {\n\n    if (this.minDate && this.dateAdapter.getYear(this.minDate) > year) return true;\n    if (this.maxDate && this.dateAdapter.getYear(this.maxDate) < year) return true;\n\n    // Check if all months in year are disabled\n    const firstOfMonth = this.dateAdapter.createDate(year,0,1);\n    let day = 1;\n\n    for (\n      let date = firstOfMonth;\n      date.getFullYear() == firstOfMonth.getFullYear();\n      date = this.dateAdapter.addDays(firstOfMonth,day++)\n    ) {\n      if (!this.isDateDisabled(date)) {\n        return false;\n      }\n    }\n\n    return true;\n  }\n\n  isYearRangeDisabled(yearRange: YearRange): boolean {\n    if (this.minDate && this.dateAdapter.getYear(this.minDate) > yearRange.end) return true;\n    if (this.maxDate && this.dateAdapter.getYear(this.maxDate) < yearRange.start) return true;\n\n    // Check if all years in range are disabled\n    for (let year = yearRange.start; year <= yearRange.end; year++) {\n      if (!this.isYearDisabled(year)) {\n        return false;\n      }\n    }\n\n    return true;\n  }\n\n  isPrevMonthDisabled(): boolean {\n    if (!this.minDate) return false;\n\n    const minYear = this.dateAdapter.getYear(this.minDate);\n\n    switch (this.viewMode) {\n      case 'days':\n        const prevMonth = this.dateAdapter.getMonth(this.currentDate) - 1;\n        return this.dateAdapter.getMonth(this.minDate) > prevMonth;\n      case 'months':\n        const prevYear = this.dateAdapter.getYear(this.currentDate) - 1;\n        return minYear > prevYear;\n      case 'years':\n        return minYear > this.yearList[this.yearList.length - 1];\n      default:\n        return false;\n    }\n  }\n\n  isNextMonthDisabled(): boolean {\n    if (!this.maxDate) return false;\n\n    const maxYear = this.dateAdapter.getYear(this.maxDate);\n\n    switch (this.viewMode) {\n      case 'days':\n        const nextMonth = this.dateAdapter.getMonth(this.currentDate) + 1;\n        return this.dateAdapter.getMonth(this.maxDate) < nextMonth;\n      case 'months':\n        const nextYear = this.dateAdapter.getYear(this.currentDate) + 1;\n        return maxYear < nextYear;\n      case 'years':\n        return maxYear < this.yearList[0];\n      default:\n        return false;\n    }\n  }\n\n  parseDisabledDates(): Date[] {\n    return this.disabledDates.map(date => {\n      if (date instanceof Date) {\n        return this.dateAdapter.startOfDay(date);\n      }\n      const parsedDate = this.dateAdapter.parse(date, this.dateFormat);\n      return parsedDate || null;\n    }).filter(date => date !== null) as Date[];\n  }\n\n  // ========== Event Handlers ==========\n  onMouseEnter(date: Date, event: Event): void {\n    if (this.isRange && this.selectedStartDate && !this.selectedEndDate) {\n      this.tempEndDate = date;\n    }\n  }\n\n  @HostListener('click')\n  onClickInside(): void {\n    this.clickInside.emit(true);\n  }\n\n  // ========== Utility Methods ==========\n  getMonthName(month: number): string {\n    return this.dateAdapter.getMonthNames('long')[month - 1];\n  }\n\n  getCurrentMonthName(): string {\n    return this.dateAdapter.getMonthNames('long')[this.dateAdapter.getMonth(this.currentDate)];\n  }\n\n  getCurrentYear(): number {\n    return this.dateAdapter.getYear(this.currentDate);\n  }\n\n  getWeekDays(): string[] {\n    return this.weekDays;\n  }\n\n  isSameMonth(date1: Date, date2: Date): boolean {\n    return this.dateAdapter.isSameMonth(date1, date2);\n  }\n\n  closeDatePicker(): void {\n    this.closePicker.emit();\n  }\n\n  // ========== Year Management Methods ==========\n  generateYearRanges(length: number = 15): void {\n    const yearCount = 15;\n    const currentYear = this.dateAdapter.getYear(this.dateAdapter.today());\n    const startYear = currentYear - Math.floor(yearCount/2) - (yearCount * Math.floor(length/2));\n    this.yearRanges = [];\n\n    for (let i = 0; i < length; i++) {\n      const start = startYear + i * yearCount;\n      this.yearRanges.push({ start, end: start + 14 });\n    }\n  }\n\n  generateYearList(length: number = 15): void {\n    const date = this.selectedDate || this.selectedEndDate || this.selectedStartDate || new Date();\n    const currentYear = this.dateAdapter.getYear(date);\n\n    let start: number;\n    if (this.viewMode === 'years') {\n      const currentRange = this.yearRanges.find(range =>\n        range.start <= currentYear && range.end >= currentYear\n      );\n      start = currentRange ? currentRange.start : currentYear;\n    } else {\n      start = this.dateAdapter.getYear(date) - Math.round(length / 2);\n    }\n\n    this.yearList = Array.from({ length }, (_, i) => start + i);\n  }\n\n  selectYearRange(startYear: number): void {\n    this.yearList = Array.from({ length: 15 }, (_, i) => startYear + i);\n    this.viewMode = 'years';\n    this.cdr.detectChanges();\n    this.scrollToSelectedItem(startYear);\n  }\n\n  // ========== Period Selection Methods ==========\n  isActivePeriod(period: CustomLabels): boolean {\n    const sameStart = this.dateAdapter.isEqual(\n      this.dateAdapter.startOfDay(period.value[0] as Date),\n      this.dateAdapter.startOfDay(this.selectedStartDate)\n    );\n\n    const sameEnd = this.dateAdapter.isEqual(\n      this.dateAdapter.startOfDay(period.value[1] as Date),\n      this.dateAdapter.startOfDay(this.selectedEndDate)\n    );\n\n\n    if (period.value === 'custom') {\n      let isActiveOther = this.periods.find(p => p.arrow);\n      return !isActiveOther;\n    };\n\n    period.arrow = sameStart && sameEnd;\n    return sameStart && sameEnd;\n  }\n\n  selectPeriod(period: CustomLabels): void {\n    this.selectedPeriod = period.value;\n\n    if (period.value !== 'custom') {\n      const [start, end] = period.value as Date[];\n      this.dateRangeSelected.emit({ start, end });\n    }\n  }\n\n  onTodayClick() {\n    this.currentDate = this.selectedDate = new Date();\n    this.generateCalendar();\n    this.selectDate(this.currentDate);\n    this.setTimePickerDate(this.currentDate);\n    this.cdr.detectChanges();\n  }\n\n  onOkClick() {\n    if (this.isRange) {\n      this.dateRangeSelected.emit({ start: this.selectedStartDate, end: this.selectedEndDate });\n      this.closeDatePicker()\n    } else {\n      this.dateSelected.emit(this.selectedDate);\n    }\n  }\n\n  // ========== Scroll Management ==========\n  scrollToSelectedItem(id: number | null = null): void {\n    if (!this.showSidebar) return;\n\n    if (this.timeoutId != null) {\n      clearTimeout(this.timeoutId);\n    }\n\n    const itemId = this.determineScrollItemId(id);\n    if (!itemId || !this.itemSelector) return;\n\n    this.timeoutId = setTimeout(() => {\n      const selectedElement = this.itemSelector.nativeElement.querySelector(`#selector_${itemId}`);\n      if (selectedElement) {\n        selectedElement.scrollIntoView({ behavior: 'smooth', block: 'center' });\n      }\n    }, 0);\n  }\n\n  determineScrollItemId(id: number | null): number | null {\n    if (id != null) return id;\n    if (!this.getDate) return null;\n\n    switch (this.viewMode) {\n      case 'days':\n        return this.dateAdapter.getMonth(this.getDate) + 1;\n      case 'months':\n        return this.dateAdapter.getYear(this.getDate);\n      case 'years':\n        const currentYear = this.dateAdapter.getYear(this.getDate);\n        const currentRange = this.yearRanges.find(range =>\n          range.start <= currentYear && range.end >= currentYear\n        );\n        return currentRange?.start || null;\n      default:\n        return null;\n    }\n  }\n\n  // ========== State Management ==========\n  handleChanges(changes: SimpleChanges): void {\n    if (changes['calendarType']) {\n      this.setDateAdapter();\n      this.weekDays = this.dateAdapter.getDayOfWeekNames('short');\n    }\n\n    if (changes['selectedDate'] ||\n        changes['selectedStartDate'] ||\n        changes['selectedEndDate'] ||\n        changes['mode'] ||\n        changes['calendarType']) {\n      this.setInitialDate();\n      this.generateCalendar();\n    }\n\n    if (changes['minDate'] || changes['maxDate']) {\n      this.adjustCurrentDateToValidRange();\n    }\n  }\n\n  setInitialDate(): void {\n    this.currentDate = this.determineInitialDate();\n    this.setViewMode();\n    this.adjustCurrentDateToValidRange();\n  }\n\n  determineInitialDate(): Date {\n    if (this.isRange) {\n      if (this.activeInput === 'start') {\n        return this.selectedStartDate || this.dateAdapter.today();\n      }\n      return this.selectedEndDate || this.selectedStartDate || this.dateAdapter.today();\n    }\n\n    return this.selectedDate || this.dateAdapter.today();\n  }\n\n  adjustCurrentDateToValidRange(): void {\n    let adjustedDate = this.currentDate;\n\n    if (this.minDate && this.dateAdapter.isBefore(adjustedDate, this.minDate)) {\n      adjustedDate = this.minDate;\n    } else if (this.maxDate && this.dateAdapter.isAfter(adjustedDate, this.maxDate)) {\n      adjustedDate = this.maxDate;\n    }\n\n    if (!this.dateAdapter.isSameDay(this.currentDate, adjustedDate)) {\n      this.currentDate = adjustedDate;\n      this.generateCalendar();\n    }\n  }\n}\n","import { Directive, Input, TemplateRef } from \"@angular/core\";\n\n@Directive({\n    selector: '[Template]',\n    standalone: true,\n    host: {}\n})\nexport class CustomTemplate {\n    @Input() type: string | undefined;\n\n    @Input('Template') name: string | undefined;\n\n    constructor(public template: TemplateRef<any>) {}\n\n    getType(): string {\n        return this.name!;\n    }\n}","import { Component, ElementRef, forwardRef, Input, OnInit, OnChanges, SimpleChanges, ViewChild, Output, EventEmitter, Renderer2, ChangeDetectorRef, Inject, AfterViewInit, ViewChildren, QueryList, NgZone, OnDestroy, ChangeDetectionStrategy, TemplateRef, ContentChildren } from '@angular/core';\nimport { ControlValueAccessor, NG_VALUE_ACCESSOR, FormBuilder, FormGroup, AbstractControl, ValidationErrors, ReactiveFormsModule, FormsModule } from '@angular/forms';\nimport { slideMotion } from './utils/animation/slide';\nimport { AsaDateAdapter, JalaliDateAdapter, GregorianDateAdapter } from './asa-date-adapter';\nimport { CustomLabels, DateRange, Lang_Locale, RangeInputLabels } from './utils/models';\nimport { DatePickerPopupComponent } from './date-picker-popup/date-picker-popup.component';\nimport { CdkOverlayOrigin, ConnectedOverlayPositionChange, ConnectionPositionPair, HorizontalConnectionPos, OverlayModule, VerticalConnectionPos } from '@angular/cdk/overlay';\nimport { DATE_PICKER_POSITION_MAP, DEFAULT_DATE_PICKER_POSITIONS, NzConnectedOverlayDirective } from './utils/overlay/overlay';\nimport { DOCUMENT, NgIf, NgTemplateOutlet } from '@angular/common';\nimport { DestroyService, AsaDatePickerService } from './asa-date-picker.service';\nimport { fromEvent, takeUntil } from 'rxjs';\nimport { CalendarType, DatepickerMode, Placement, RangePartType, ValueFormat } from './utils/types';\nimport { DateMaskDirective } from './utils/input-mask.directive';\nimport { CustomTemplate } from './utils/template.directive';\n\n@Component({\n  selector: 'asa-date-picker',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  standalone: true,\n  template: `\n    <div asaDatepickerStyles class=\"date-picker-wrapper\" [class.date-picker-rtl]=\"rtl\" [class.disabled]=\"disabled\" [formGroup]=\"form\">\n      <ng-container *ngIf=\"!isInline; else inlineMode\">\n        <ng-container *ngIf=\"!isRange; else rangeMode\">\n          <div class=\"input-container\" [class.rtl]>\n            <label for=\"dateInput\" *ngIf=\"inputLabel\">{{ inputLabel }}</label>\n            <input\n              #datePickerInput\n              type=\"text\"\n              formControlName=\"dateInput\"\n              [asa-dateMask]=\"format\"\n              [disableInputMask]=\"disableInputMask\"\n              (click)=\"toggleDatePicker(null,$event)\"\n              (focus)=\"onFocusInput(null,$event)\"\n              (blur)=\"onInputBlur(null,$event)\"\n              (keydown)=\"onInputKeydown($event)\"\n              [class.focus]=\"isOpen\"\n              [placeholder]=\"getPlaceholder()\"\n              [readonly]=\"readOnly || readOnlyInput\"\n              [attr.disabled]=\"disabled? 'disabled':null\"\n            >\n            <ng-container *ngTemplateOutlet=\"icon\"></ng-container>\n          </div>\n        </ng-container>\n        <ng-template #rangeMode>\n          <div *ngIf=\"rangeInputLabels\" class=\"range-input-labels\">\n            <div class=\"start-label\">\n              <label for=\"startDateInput\">{{ rangeInputLabels.start }}</label>\n            </div>\n            <div class=\"end-label\">\n              <label for=\"endDateInput\">{{ rangeInputLabels.end }}</label>\n            </div>\n          </div>\n          <div class=\"range-input-container\">\n            <input\n              #rangePickerInput\n              type=\"text\"\n              formControlName=\"startDateInput\"\n              [asa-dateMask]=\"format\"\n              [disableInputMask]=\"disableInputMask\"\n              (click)=\"toggleDatePicker('start',$event)\"\n              (focus)=\"onFocusInput('start',$event)\"\n              (focusout)=\"onFocusout($event)\"\n              (blur)=\"onInputBlur('start',$event)\"\n              (keydown)=\"onInputKeydown($event)\"\n              [class.focus]=\"isOpen && activeInput === 'start'\"\n              [placeholder]=\"getPlaceholder('start')\"\n              [readonly]=\"readOnly || readOnlyInput\"\n              [attr.disabled]=\"disabled? 'disabled':null\"\n            >\n            <span class=\"range-separator\">→</span>\n            <input\n              #rangePickerInput\n              type=\"text\"\n              formControlName=\"endDateInput\"\n              [asa-dateMask]=\"format\"\n              [disableInputMask]=\"disableInputMask\"\n              (click)=\"toggleDatePicker('end',$event)\"\n              (focus)=\"onFocusInput('end',$event)\"\n              (focusout)=\"onFocusout($event)\"\n              (blur)=\"onInputBlur('end',$event)\"\n              (keydown)=\"onInputKeydown($event)\"\n              [class.focus]=\"isOpen && activeInput === 'end'\"\n              [placeholder]=\"getPlaceholder('end')\"\n              [readonly]=\"readOnly || readOnlyInput\"\n              [attr.disabled]=\"disabled? 'disabled':null\"\n            >\n            <ng-container *ngTemplateOutlet=\"icon\"></ng-container>\n          </div>\n        </ng-template>\n        <ng-template #icon>\n            <button class=\"calendar-button\" (click)=\"toggleDatePicker(null, $event)\" tabindex=\"-1\">\n              <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"18px\" height=\"18px\" viewBox=\"0 0 24 24\" fill=\"#999\">\n                <path fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M6 2C6 1.44772 6.44772 1 7 1C7.55228 1 8 1.44772 8 2V3H16V2C16 1.44772 16.4477 1 17 1C17.5523 1 18 1.44772 18 2V3H19C20.6569 3 22 4.34315 22 6V20C22 21.6569 20.6569 23 19 23H5C3.34315 23 2 21.6569 2 20V6C2 4.34315 3.34315 3 5 3H6V2ZM16 5V6C16 6.55228 16.4477 7 17 7C17.5523 7 18 6.55228 18 6V5H19C19.5523 5 20 5.44772 20 6V9H4V6C4 5.44772 4.44772 5 5 5H6V6C6 6.55228 6.44772 7 7 7C7.55228 7 8 6.55228 8 6V5H16ZM4 11V20C4 20.5523 4.44772 21 5 21H19C19.5523 21 20 20.5523 20 20V11H4Z\" fill=\"#999\"/>\n              </svg>\n            </button>\n        </ng-template>\n      </ng-container>\n      <ng-template #inlineMode>\n        <div\n          class=\"dp-dropdown\"\n          [class.asa-picker-dropdown-rtl]=\"rtl\"\n          [class.asa-picker-dropdown-placement-bottomLeft]=\"currentPositionY === 'bottom' && currentPositionX === 'start'\"\n          [class.asa-picker-dropdown-placement-topLeft]=\"currentPositionY === 'top' && currentPositionX === 'start'\"\n          [class.asa-picker-dropdown-placement-bottomRight]=\"currentPositionY === 'bottom' && currentPositionX === 'end'\"\n          [class.asa-picker-dropdown-placement-topRight]=\"currentPositionY === 'top' && currentPositionX === 'end'\"\n          [class.asa-picker-dropdown-range]=\"isRange\"\n        >\n          <asa-date-picker-popup\n            [rtl]=\"rtl\"\n            [@slideMotion]=\"'enter'\"\n            [selectedDate]=\"selectedDate\"\n            [selectedStartDate]=\"selectedStartDate\"\n            [selectedEndDate]=\"selectedEndDate\"\n            [mode]=\"mode\"\n            [isRange]=\"isRange\"\n            [customLabels]=\"customLabels\"\n            [calendarType]=\"calendarType\"\n            [minDate]=\"minDate\"\n            [maxDate]=\"maxDate\"\n            [cssClass]=\"cssClass\"\n            [footerDescription]=\"footerDescription\"\n            [activeInput]=\"activeInput\"\n            [showSidebar]=\"showSidebar\"\n            [showToday]=\"showToday\"\n            [showTimePicker]=\"showTimePicker\"\n            [timeDisplayFormat]=\"timeDisplayFormat\"\n            [dateFormat]=\"extractDateFormat(format)\"\n            [disabledDates]=\"disabledDates\"\n            [disabledDatesFilter]=\"disabledDatesFilter\"\n            [disabledTimesFilter]=\"disabledTimesFilter\"\n            [templates]=\"templates\"\n            (dateSelected)=\"onDateSelected($event)\"\n            (dateRangeSelected)=\"onDateRangeSelected($event)\"\n            (closePicker)=\"close()\"\n            (clickInside)=\"focus()\"\n            tabindex=\"-1\"\n            [attr.disabled]=\"disabled? 'disabled':null\"\n          ></asa-date-picker-popup>\n        </div>\n      </ng-template>\n      <ng-template\n        cdkConnectedOverlay\n        nzConnectedOverlay\n        [cdkConnectedOverlayOrigin]=\"origin\"\n        [cdkConnectedOverlayOpen]=\"isOpen\"\n        [cdkConnectedOverlayPositions]=\"overlayPositions\"\n        [cdkConnectedOverlayTransformOriginOn]=\"'.asa-picker-wrapper'\"\n        [cdkConnectedOverlayHasBackdrop]=\"false\"\n        (positionChange)=\"onPositionChange($event)\"\n        (detach)=\"close()\"\n      >\n        <div\n          class=\"asa-picker-wrapper\"\n          [class.disabled]=\"disabled\"\n          [@slideMotion]=\"'enter'\"\n          style=\"position: relative;\"\n          (click)=\"$event.stopPropagation()\"\n        >\n          <ng-container *ngTemplateOutlet=\"inlineMode\"></ng-container>\n        </div>\n      </ng-template>\n    </div>\n  `,\n  styles: [`\n    :host.asa-datepicker ::ng-deep {\n      display: block;\n      max-width: fit-content;\n    }\n    .date-picker-wrapper {\n      position: relative;\n      max-width: fit-content;\n    }\n    input {\n      font-family: inherit;\n      max-width: 300px;\n      padding: 6px 10px;\n      border: 1px solid #d9d9d9;\n      border-radius: 4px;\n      font-size: 14px;\n      outline: none;\n      transition: all 0.3s;\n    }\n    input:hover {\n      border-color: #40a9ff;\n    }\n    input.focus {\n      border-color: #40a9ff;\n      box-shadow: 0 0 0 2px rgba(24,144,255,0.2);\n      outline: none;\n    }\n    .range-input-container {\n      display: flex;\n      align-items: center;\n      border: 1px solid #d9d9d9;\n      border-radius: 4px;\n      overflow: hidden;\n    }\n    .range-input-container input {\n      border: none;\n      flex: 1;\n      width: 50%;\n      padding: 6px 10px;\n      border-radius: 0;\n    }\n    .range-input-container input.focus {\n      border-bottom: 1px solid;\n      border-color: #40a9ff;\n      box-shadow: none !important;\n    }\n    .range-separator {\n      padding: 0 8px;\n      color: #999;\n    }\n    .calendar-button {\n      background: none;\n      border: none;\n      padding: 4px 4px 0;\n      cursor: pointer;\n      font-size: 16px;\n    }\n    .range-input-labels {\n      display: flex;\n      justify-content: space-between;\n      gap: 10px;\n      color: #444;\n      padding: 0px 5px 5px;\n    }\n    .end-label {\n      width: 49%;\n    }\n    .disabled {\n      opacity: 0.8;\n      pointer-events: none;\n    }\n    .disabled .range-input-container {\n      background: #f3f3f3;\n    }\n    .input-container .calendar-button {\n      position: absolute;\n      right: 0;\n      bottom: 5px;\n    }\n    .date-picker-rtl .input-container .calendar-button {\n      right: auto;\n      left: 0;\n    }\n    .input-container {\n      display: flex;\n      flex-direction: column;\n      gap: 3px;\n      color: #444\n    }\n    .input-container.rtl {\n      direction: rtl;\n    }\n    // rtl\n    :dir(rtl) .range-separator{\n      rotate: 180deg;\n    }\n  `],\n  host: {\n    \"[class.asa-datepicker]\": \"true\",\n    \"[class.asa-datepicker-rtl]\": \"rtl\"\n  },\n  imports: [\n    NgIf,\n    FormsModule,\n    ReactiveFormsModule,\n    OverlayModule,\n    NgTemplateOutlet,\n    NzConnectedOverlayDirective,\n    DateMaskDirective,\n    DatePickerPopupComponent\n  ],\n  providers: [\n    DestroyService,\n    AsaDatePickerService,\n    {\n      provide: NG_VALUE_ACCESSOR,\n      useExisting: forwardRef(() => AsaDatePickerComponent),\n      multi: true\n    }\n  ],\n  animations: [slideMotion]\n})\nexport class AsaDatePickerComponent implements ControlValueAccessor, OnInit, OnChanges, AfterViewInit, OnDestroy {\n  // ========== Input Properties ==========\n  @Input() rtl = false;\n  @Input() mode: DatepickerMode = 'day';\n  @Input() isRange = false;\n  @Input() customLabels: Array<CustomLabels>;\n  @Input() calendarType: CalendarType = 'gregorian';\n  @Input() lang: Lang_Locale;\n  @Input() cssClass = '';\n  @Input() footerDescription = '';\n  @Input() rangeInputLabels: RangeInputLabels;\n  @Input() inputLabel: string;\n  @Input() placement: Placement = 'bottomRight';\n  @Input() disabled = false;\n  @Input() isInline = false;\n  @Input() showSidebar = true;\n  @Input() showToday = false;\n  @Input() valueFormat: ValueFormat = 'gregorian';\n  @Input() disableInputMask = false;\n  @Input() disabledDates: Array<Date | string> = [];\n  @Input() disabledDatesFilter: (date: Date) => boolean;\n  @Input() disabledTimesFilter: (date: Date) => boolean;\n  @Input() allowEmpty = false;\n  @Input() readOnly = false;\n  @Input() readOnlyInput = false;\n  @Input() set minDate(date: Date | string | null) {\n    if (date) {\n      this._minDate = date;\n    }\n  };\n  get minDate() : Date {\n    return this._minDate\n  }\n\n  @Input() set maxDate(date: Date | string | null) {\n    if (date) {\n      this._maxDate = date;\n    }\n  };\n  get maxDate() : Date {\n    return this._maxDate\n  }\n\n  @Input() set format(value: string) {\n    this._format = value;\n    this.showTimePicker = this.hasTimeComponent(value);\n    this.timeDisplayFormat = this.extractTimeFormat(value);\n  }\n  get format(): string {\n    return this._format;\n  }\n\n  // ========== Output Properties ==========\n  @Output() onFocus = new EventEmitter<any>();\n  @Output() onBlur = new EventEmitter<any>();\n  @Output() onChangeValue = new EventEmitter<any>();\n  @Output() onOpenChange = new EventEmitter<boolean>();\n\n  // ========== ViewChild/ViewChildren/ContentChildren Properties ==========\n  @ViewChild('datePickerInput') datePickerInput: ElementRef;\n  @ViewChildren('rangePickerInput') rangePickerInputs?: QueryList<ElementRef<HTMLInputElement>>;\n  @ViewChild(DatePickerPopupComponent) datePickerPopup: DatePickerPopupComponent;\n  @ContentChildren(CustomTemplate) templates!: QueryList<CustomTemplate>;\n\n  // ========== Class Properties ==========\n  origin: CdkOverlayOrigin;\n  overlayPositions: ConnectionPositionPair[] = [...DEFAULT_DATE_PICKER_POSITIONS];\n  currentPositionX: HorizontalConnectionPos = 'start';\n  currentPositionY: VerticalConnectionPos = 'bottom';\n  document: Document;\n\n  isOpen = false;\n  selectedDate: Date | null = null;\n  selectedStartDate: Date | null = null;\n  selectedEndDate: Date | null = null;\n  form: FormGroup;\n  dateAdapter: AsaDateAdapter<Date>;\n  activeInput: 'start' | 'end' | '' = '';\n  hideStateHelper = false;\n  isInternalChange = false;\n  lastEmittedValue: any = null;\n  showTimePicker = false;\n  timeDisplayFormat = 'HH:mm';\n\n  documentClickListener: (event: MouseEvent) => void;\n  private _minDate: any;\n  private _maxDate: any;\n  private _format = 'yyyy/MM/dd';\n\n  get valueAdapter() {\n    return this.valueFormat == 'jalali'? this.jalali: this.gregorian;\n  }\n\n  constructor(\n    public fb: FormBuilder,\n    public elementRef: ElementRef,\n    public renderer: Renderer2,\n    public cdref: ChangeDetectorRef,\n    public dpService: AsaDatePickerService,\n    public destroy$: DestroyService,\n    public ngZone: NgZone,\n    public jalali: JalaliDateAdapter,\n    public gregorian: GregorianDateAdapter,\n    @Inject(DOCUMENT) doc: Document,\n  ) {\n    this.initializeComponent(doc);\n  }\n\n  // ========== Lifecycle Hooks ==========\n  ngOnInit(): void {\n    this.initialize();\n    document.addEventListener('click', this.documentClickListener);\n  }\n\n  ngOnChanges(changes: SimpleChanges): void {\n    this.handleChanges(changes);\n  }\n\n  ngAfterViewInit(): void {\n    this.setupAfterViewInit();\n    this._minDate = this.valueAdapter?.parse(this._minDate,this.extractDateFormat(this.format));\n    this._maxDate = this.valueAdapter?.parse(this._maxDate,this.extractDateFormat(this.format));\n  }\n\n  ngOnDestroy(): void {\n    this.destroy$.next();\n    this.destroy$.complete();\n    document.removeEventListener('click', this.documentClickListener);\n  }\n\n  // ========== Initialization Methods ==========\n  initializeComponent(doc: Document): void {\n    this.origin = new CdkOverlayOrigin(this.elementRef);\n    this.document = doc;\n    this.form = this.fb.group({\n      dateInput: [''],\n      startDateInput: [''],\n      endDateInput: ['']\n    });\n    this.documentClickListener = this.handleDocumentClick.bind(this);\n    this.lang = this.calendarType === 'jalali' ? this.dpService.locale_fa  : this.dpService.locale_en;\n    this.dpService.locale = this.lang;\n  }\n\n  initialize(): void {\n    this.setDateAdapter();\n    this.setupFormControls();\n  }\n\n  setupAfterViewInit(): void {\n    this.setupActiveInputSubscription();\n    this.setupMouseDownEventHandler();\n  }\n\n  // ========== Date Adapter Methods ==========\n  setDateAdapter(): void {\n    this.dateAdapter = this.calendarType === 'jalali' ? this.jalali : this.gregorian;\n  }\n\n  // ========== Form Control Methods ==========\n  setupFormControls(): void {\n    if (this.isRange) {\n      this.form.get('startDateInput')?.valueChanges.pipe(takeUntil(this.destroy$)).subscribe(value => this.onInputChange(value, 'start'));\n      this.form.get('endDateInput')?.valueChanges.pipe(takeUntil(this.destroy$)).subscribe(value => this.onInputChange(value, 'end'));\n    } else {\n      this.form.get('dateInput')?.valueChanges.pipe(takeUntil(this.destroy$)).subscribe(value => this.onInputChange(value));\n    }\n  }\n\n  // ========== Event Handlers ==========\n  handleChanges(changes: SimpleChanges): void {\n    if (changes['calendarType']) {\n      this.setDateAdapter();\n      this.updateInputValue();\n      this.lang = this.calendarType === 'jalali' ? this.dpService.locale_fa : this.dpService.locale_en;\n      this.dpService.locale = this.lang;\n    }\n    if (changes['minDate'] || changes['maxDate']) {\n      this._minDate = this.valueAdapter?.parse(this._minDate,this.extractDateFormat(this.format));\n      this._maxDate = this.valueAdapter?.parse(this._maxDate,this.extractDateFormat(this.format));\n      this.form.updateValueAndValidity();\n    }\n    if (changes['mode'] || changes['isRange']) {\n      this.setupFormControls();\n    }\n    if (changes['placement']) {\n      this.setPlacement(this.placement);\n    }\n    if (changes['lang']) {\n      this.lang = changes['lang'].currentValue;\n      this.dpService.locale = this.lang;\n    }\n    if (changes['mode'] && !changes['format']) {\n      this.format = this.getFormatForMode();\n    }\n    if (changes['isRange'] && this.isRange ==  false) {\n      this.origin = new CdkOverlayOrigin(this.elementRef);\n    }\n    if (changes['valueFormat']) {\n      this.emitValueIfChanged();\n    }\n  }\n\n  handleDocumentClick(event: MouseEvent): void {\n    if (!this.elementRef.nativeElement.contains(event.target)) {\n      if (this.isOpen) {\n        this.close();\n        this.onInputBlur(this.activeInput as any, event as any);\n      }\n      this.hideStateHelper = false;\n    }\n  }\n\n  // ========== Input Handling Methods ==========\n  onInputChange(value: string, inputType?: 'start' | 'end'): void {\n    if (!this.isInternalChange) {\n      if (this.isRange) {\n        this.handleRangeInputChange(value, inputType);\n      } else {\n        this.handleSingleInputChange(value);\n      }\n      this.updateDatePickerPopup();\n    }\n  }\n\n  handleRangeInputChange(value: string, inputType?: 'start' | 'end'): void {\n    const date = this.dateAdapter.parse(value, this.format);\n    if (date) {\n      if (inputType === 'start') {\n        this.selectedStartDate = this.clampDate(date);\n      } else if (inputType === 'end') {\n        this.selectedEndDate = this.clampDate(date);\n      }\n      this.emitValueIfChanged();\n    }\n  }\n\n  handleSingleInputChange(value: string): void {\n    const date = this.dateAdapter.parse(value, this.format);\n    if (date) {\n      this.selectedDate = this.clampDate(date);\n      this.emitValueIfChanged();\n    }\n  }\n\n  // ========== Value Emission Methods ==========\n  emitValueIfChanged(): void {\n    const newValue = this.prepareValueForEmission();\n    if (newValue && JSON.stringify(newValue) !== JSON.stringify(this.lastEmittedValue)) {\n      this.lastEmittedValue = newValue;\n      this.onChange(newValue);\n      this.onChangeValue.emit(newValue);\n    }\n  }\n\n  prepareValueForEmission(): any {\n    if (this.isRange) {\n      if (this.selectedStartDate && this.selectedEndDate) {\n        return {\n          start: this.convertDateToFormat(this.selectedStartDate, this.calendarType),\n          end: this.convertDateToFormat(this.selectedEndDate, this.calendarType)\n        };\n      }\n    } else if (this.selectedDate) {\n      return this.convertDateToFormat(this.selectedDate, this.calendarType);\n    }\n    return null;\n  }\n\n  // ========== Date Selection Methods ==========\n  onDateSelected(date: Date): void {\n    const clampedDate = this.clampDate(date);\n    if (this.isRange) {\n      this.handleRangeDateSelection(clampedDate);\n    } else {\n      this.handleSingleDateSelection(clampedDate);\n    }\n    this.hideStateHelper = true;\n    this.updateDatePickerPopup();\n    this.focus();\n  }\n\n  handleRangeDateSelection(date: Date): void {\n    if (!this.selectedStartDate || (this.selectedStartDate && this.selectedEndDate) ||\n      this.dateAdapter.isBefore(date, this.selectedStartDate)) {\n      this.selectedStartDate = date;\n      this.selectedEndDate = null;\n      this.form.get('startDateInput')?.setValue(this.dateAdapter.format(date, this.format), { emitEvent: false });\n      this.form.get('endDateInput')?.setValue('', { emitEvent: false });\n    } else {\n      this.selectedEndDate = date;\n      this.form.get('endDateInput')?.setValue(this.dateAdapter.format(date, this.format), { emitEvent: false });\n      this.emitValueIfChanged();\n      this.close();\n    }\n  }\n\n  handleSingleDateSelection(date: Date): void {\n    this.selectedDate = date;\n    const formattedDate = this.dateAdapter.format(date, this.format);\n    this.form.get('dateInput')?.setValue(formattedDate, { emitEvent: false });\n    this.emitValueIfChanged();\n    this.close();\n  }\n\n  // ========== Date Range Methods ==========\n  onDateRangeSelected(dateRange: DateRange): void {\n    this.hideStateHelper = true;\n\n    this.selectedStartDate = this.clampDate(<Date>dateRange.start);\n    const startFormatted = this.dateAdapter.format(this.selectedStartDate, this.format);\n    this.form.get('startDateInput')?.setValue(startFormatted, { emitEvent: false });\n\n    if (dateRange.end) {\n      this.selectedEndDate = this.clampDate(<Date>dateRange.end);\n      const endFormatted = this.dateAdapter.format(this.selectedEndDate, this.format);\n      this.form.get('endDateInput')?.setValue(endFormatted, { emitEvent: false });\n      this.emitValueIfChanged();\n      if (!this.hasTimeComponent(this.format)) this.close();\n      this.updateDatePickerPopup();\n      this.focus();\n    }\n  }\n\n  // ========== UI State Methods ==========\n  close(): void {\n    if (this.isInline) {\n      return;\n    }\n    if (this.isOpen) {\n      this.isOpen = false;\n      this.onOpenChange.emit(false);\n      this.cdref.markForCheck();\n    }\n  }\n\n  open(): void {\n    if (this.isInline || this.isOpen || this.disabled || this.readOnly) {\n      return;\n    }\n    this.isOpen = true;\n    this.onOpenChange.emit(true);\n    this.focus();\n    this.cdref.markForCheck();\n  }\n\n  focus(): void {\n    const activeInputElement = this.getInput(this.activeInput);\n    if (this.document.activeElement !== activeInputElement) {\n      activeInputElement?.focus();\n      const length = activeInputElement?.value?.length;\n      activeInputElement?.setSelectionRange(length, length);\n    }\n  }\n\n  // ========== UI Helper Methods ==========\n  getInput(partType?: RangePartType): HTMLInputElement | undefined {\n    if (this.isInline) {\n      return undefined;\n    }\n    return this.isRange\n      ? partType === 'start'\n        ? this.rangePickerInputs?.first.nativeElement\n        : this.rangePickerInputs?.last.nativeElement\n      : this.datePickerInput?.nativeElement;\n  }\n\n  getPlaceholder(inputType: string = null): string {\n    if (inputType === 'start') return this.lang.startDate;\n    if (inputType === 'end') return this.lang.endDate;\n\n    switch (this.mode) {\n      case 'month': return this.lang.selectMonth;\n      case 'year': return this.lang.selectYear;\n      default: return this.lang.selectDate;\n    }\n  }\n\n  // ========== Date Validation Methods ==========\n  clampDate(date: Date): Date {\n    if (!date) return date;\n\n    let adjustedDate = this.dateAdapter.clone(date);\n\n    if (this.minDate && this.dateAdapter.isBefore(adjustedDate, this.minDate)) {\n      return this.minDate;\n    }\n    if (this.maxDate && this.dateAdapter.isAfter(adjustedDate, this.maxDate)) {\n      return this.maxDate;\n    }\n\n    if (this.isDateDisabled(adjustedDate)) {\n      // Find the nearest enabled date\n      adjustedDate = this.findNearestValidDate(adjustedDate);\n    }\n\n    // Preserve the original time if format includes time\n    adjustedDate = this.clampDateTime(adjustedDate, date);\n\n    return adjustedDate;\n  }\n\n  clampDateTime(adjustedDate: Date, date: Date) {\n    if (this.hasTimeComponent(this.format)) {\n      adjustedDate.setHours(date.getHours());\n      adjustedDate.setMinutes(date.getMinutes());\n      adjustedDate.setSeconds(date.getSeconds());\n      let { normalizedDate } = this.validateAndNormalizeTime(adjustedDate);\n      adjustedDate = normalizedDate;\n    }\n    return adjustedDate;\n  }\n\n  findNearestValidDate(date: Date) {\n    let nextDate = this.dateAdapter.addDays(date, 1);\n    let prevDate = this.dateAdapter.addDays(date, -1);\n\n    while (this.isDateDisabled(nextDate) && this.isDateDisabled(prevDate)) {\n      nextDate = this.dateAdapter.addDays(nextDate, 1);\n      prevDate = this.dateAdapter.addDays(prevDate, -1);\n    }\n\n    // Return the first non-disabled date found\n    if (!this.isDateDisabled(nextDate)) {\n      date = nextDate;\n    } else if (!this.isDateDisabled(prevDate)) {\n      date = prevDate;\n    }\n    return date;\n  }\n\n  validateAndNormalizeTime(date: Date): { isValid: boolean; normalizedDate: Date | null } {\n    if (!this.dateAdapter) {\n      return { isValid: false, normalizedDate: null };\n    }\n\n    let isValid = true;\n    let normalizedDate = this.dateAdapter.clone(date);\n\n    if (this.isTimeDisabled(normalizedDate)) {\n      isValid = false;\n\n      // Get start and end of the current day\n      const startOfDay = this.dateAdapter.clone(date);\n      startOfDay.setHours(0, 0, 0, 0);\n      const endOfDay = this.dateAdapter.clone(date);\n      endOfDay.setHours(23, 59, 59, 999);\n\n      // Try to find nearest valid time within the same day\n      const currentMinutes = date.getHours() * 60 + date.getMinutes();\n      const maxForwardMinutes = (24 * 60) - currentMinutes;\n      let validTimeFound = false;\n\n      // Check forward\n      for (let i = 1; i <= maxForwardMinutes; i++) {\n        const nextTime = this.dateAdapter.clone(date);\n        nextTime.setHours(Math.floor((currentMinutes + i) / 60), (currentMinutes + i) % 60, 0);\n        if (nextTime.getTime() <= endOfDay.getTime() && !this.isTimeDisabled(nextTime)) {\n          normalizedDate = nextTime;\n          validTimeFound = true;\n          break;\n        }\n      }\n\n      // Check backward\n      if (!validTimeFound)\n        for (let i = 1; i < currentMinutes; i++) {\n          const prevTime = this.dateAdapter.clone(date);\n          prevTime.setHours(Math.floor((currentMinutes - i) / 60), (currentMinutes - i) % 60, 0);\n          if (prevTime.getTime() >= startOfDay.getTime() && !this.isTimeDisabled(prevTime)) {\n            normalizedDate = prevTime;\n            break;\n          }\n        }\n\n      // If no valid time found in the current day, set to start of day\n      if (this.isTimeDisabled(normalizedDate)) {\n        normalizedDate = startOfDay;\n      }\n    }\n\n    return { isValid: isValid, normalizedDate };\n  }\n\n  parseDisabledDates(): Date[] {\n    return this.disabledDates.map(date => {\n      if (date instanceof Date) {\n        return this.dateAdapter.startOfDay(date);\n      }\n      const parsedDate = this.dateAdapter.parse(date, this.extractDateFormat(this.format));\n      return parsedDate || null;\n    }).filter(date => date !== null) as Date[];\n  }\n\n  isDateDisabled(date: Date): boolean {\n    if (!date) return false;\n\n    const dateToCheck = this.dateAdapter.startOfDay(date);\n    // Check if date is in disabled dates array\n    const parsedDisabledDates = this.parseDisabledDates();\n    const isDisabledDate = parsedDisabledDates.some(disabledDate =>\n      this.dateAdapter.isSameDay(dateToCheck, disabledDate)\n    );\n\n    // Check custom filter function if provided\n    const isFilterDisabled = this.disabledDatesFilter ?\n      this.disabledDatesFilter(dateToCheck) :\n      false;\n\n    return isDisabledDate || isFilterDisabled;\n  }\n\n  isTimeDisabled(date: Date) {\n    return this.disabledTimesFilter ? this.disabledTimesFilter(date) : false;\n  }\n\n  // ========== Date Validation Methods (continued) ==========\n  dateFormatValidator(control: AbstractControl): ValidationErrors | null {\n    const value = control.value;\n    if (!value) return null;\n\n    const format = this.getFormatForMode();\n    if (!this.dateAdapter.isValidFormat(value, format)) {\n      return { invalidFormat: true };\n    }\n    return null;\n  }\n\n  getFormatForMode(): string {\n    switch (this.mode) {\n      case 'year':\n        return 'yyyy';\n      case 'month':\n        return 'yyyy/MM';\n      default:\n        return this.format;\n    }\n  }\n\n  // ========== Overlay Position Methods ==========\n  setPlacement(placement: Placement): void {\n    const position: ConnectionPositionPair = DATE_PICKER_POSITION_MAP[placement];\n    this.overlayPositions = [position, ...DEFAULT_DATE_PICKER_POSITIONS];\n    this.currentPositionX = position.originX;\n    this.currentPositionY = position.originY;\n  }\n\n  onPositionChange(position: ConnectedOverlayPositionChange): void {\n    if (this.currentPositionX !== position.connectionPair.originX ||\n        this.currentPositionY !== position.connectionPair.originY)\n    {\n      this.currentPositionX = position.connectionPair.originX;\n      this.currentPositionY = position.connectionPair.originY;\n      this.cdref.markForCheck();\n    }\n  }\n\n  // ========== Input Event Handlers ==========\n  onFocusout(event: FocusEvent): void {\n    event.preventDefault();\n    this.onTouch();\n    if (\n      !this.elementRef.nativeElement.contains(event.relatedTarget as Node) &&\n      !this.datePickerPopup?.el.nativeElement.contains(event.relatedTarget as Node)\n    ) {\n      this.close();\n    }\n  }\n\n  onInputBlur(inputType: 'start' | 'end' | null, event: Event): void {\n    const inputValue = this.getInputValue(inputType);\n\n    if (typeof inputValue === 'string' && !this.isOpen) {\n      const correctedValue = this.validateAndCorrectInput(inputValue);\n      if (correctedValue !== inputValue) {\n        if (inputValue) {\n          this.handleCorrectedValue(inputType, correctedValue);\n        } else if (!this.allowEmpty) {\n          this.handleCorrectedValue(inputType, correctedValue);\n        } else {\n          this.selectedDate = null;\n          this.onChange(inputValue);\n        }\n      }\n      this.onBlur.emit({\n        input: inputType,\n        event,\n        value: correctedValue\n      });\n    }\n  }\n\n  getInputValue(inputType: 'start' | 'end' | null): string | undefined {\n    if (this.isRange) {\n      return inputType === 'start'\n        ? this.form.get('startDateInput')?.value\n        : this.form.get('endDateInput')?.value;\n    }\n    return this.form.get('dateInput')?.value;\n  }\n\n  validateAndCorrectInput(value: string): string {\n    let date = this.dateAdapter.parse(value, this.format);\n    if (!date) {\n      const today = this.dateAdapter.today();\n      date = this.clampDate(today);\n    } else {\n      date = this.clampDate(date);\n    }\n    return this.dateAdapter.format(date, this.format);\n  }\n\n  handleCorrectedValue(inputType: 'start' | 'end' | null, correctedValue: string): void {\n    this.isInternalChange = true;\n    if (this.isRange) {\n      this.handleRangeCorrectedValue(inputType, correctedValue);\n    } else {\n      this.handleSingleCorrectedValue(correctedValue);\n    }\n    this.isInternalChange = false;\n  }\n\n  handleRangeCorrectedValue(inputType: 'start' | 'end' | null, correctedValue: string): void {\n    if (inputType === 'start') {\n      this.form.get('startDateInput')?.setValue(correctedValue);\n      this.selectedStartDate = this.dateAdapter.parse(correctedValue, this.format);\n    } else {\n      this.form.get('endDateInput')?.setValue(correctedValue);\n      this.selectedEndDate = this.dateAdapter.parse(correctedValue, this.format);\n    }\n\n    if (this.selectedStartDate && this.selectedEndDate) {\n      this.onChange({\n        start: this.dateAdapter.format(this.selectedStartDate, this.format),\n        end: this.dateAdapter.format(this.selectedEndDate, this.format)\n      });\n    }\n\n    if (this.datePickerPopup) {\n      this.datePickerPopup.selectedStartDate = this.selectedStartDate;\n      this.datePickerPopup.selectedEndDate = this.selectedEndDate;\n      this.datePickerPopup.generateCalendar();\n    }\n  }\n\n  handleSingleCorrectedValue(correctedValue: string): void {\n    this.form.get('dateInput')?.setValue(correctedValue);\n    this.selectedDate = this.dateAdapter.parse(correctedValue, this.format);\n    this.onChange(this.selectedDate);\n\n    if (this.datePickerPopup) {\n      this.datePickerPopup.selectedDate = this.selectedDate;\n    }\n  }\n\n  onFocusInput(inputType: 'start' | 'end' | null, event: Event): void {\n    if (this.hideStateHelper == false){\n      this.toggleDatePicker(inputType, event);\n      this.hideStateHelper = true\n    } else {\n      this.hideStateHelper = false;\n    }\n  }\n\n  toggleDatePicker(inputType: 'start' | 'end' | null, event: Event): void {\n    this.onFocus.emit({\n      input: inputType,\n      event\n    });\n    this.activeInput = inputType;\n    this.dpService.activeInput$.next(this.activeInput);\n    this.open();\n    this.cdref.detectChanges();\n  }\n\n  onInputKeydown(event: KeyboardEvent): void {\n    if ((!event.shiftKey && event.key === 'Tab') || (!event.shiftKey && event.key === 'Enter')) {\n      if (this.isRange) {\n        return;\n      }\n      this.close();\n    }\n  }\n\n  // ========== Update Methods ==========\n  updateInputValue(): void {\n    if (this.isRange) {\n      if (this.selectedStartDate) {\n        this.form.get('startDateInput')?.setValue(\n          this.dateAdapter.format(this.selectedStartDate, this.format)\n        );\n      }\n      if (this.selectedEndDate) {\n        this.form.get('endDateInput')?.setValue(\n          this.dateAdapter.format(this.selectedEndDate, this.format)\n        );\n      }\n    } else if (this.selectedDate) {\n      this.form.get('dateInput')?.setValue(\n        this.dateAdapter.format(this.selectedDate, this.format)\n      );\n    }\n  }\n\n  updateDatePickerPopup(): void {\n    if (this.datePickerPopup) {\n      if (this.isRange) {\n        this.datePickerPopup.selectedStartDate = this.selectedStartDate;\n        this.datePickerPopup.selectedEndDate = this.selectedEndDate;\n        if (this.showTimePicker){\n          this.datePickerPopup.timePicker.updateFromDate(\n            this.activeInput == 'start'?\n            this.selectedStartDate:\n            this.selectedEndDate\n          );\n          this.datePickerPopup.timePicker.scrollToTime()\n        }\n      } else {\n        this.datePickerPopup.selectedDate = this.selectedDate;\n        if (this.showTimePicker){\n          this.datePickerPopup.timePicker.updateFromDate(this.selectedDate);\n          this.datePickerPopup.timePicker.scrollToTime();\n        }\n      }\n      this.datePickerPopup.generateCalendar();\n      this.cdref.detectChanges();\n    }\n  }\n\n  convertDateToFormat(date: Date, fromType: CalendarType): any {\n    if (!date) return null;\n\n    switch (this.valueFormat) {\n      case 'date':\n        return date;\n      case 'jalali':\n        return this.jalali.format(date, this.format);\n      case 'gregorian':\n        return this.gregorian.format(date, this.format);\n      default:\n        return this.dateAdapter.format(date, this.format);\n    }\n  }\n\n  // ========== ControlValueAccessor Implementation ==========\n  onChange: any = () => {};\n  onTouch: any = () => {};\n\n  writeValue(value: any): void {\n    if (value) {\n      this.isInternalChange = true;\n\n      if (this.isRange && typeof value === 'object') {\n        const startDate = this.parseIncomingValue(value.start);\n        const endDate = this.parseIncomingValue(value.end);\n\n        if (startDate) {\n          this.selectedStartDate = startDate;\n          this.form.get('startDateInput')?.setValue(\n            this.dateAdapter.format(startDate, this.format),\n            { emitEvent: false }\n          );\n        }\n\n        if (endDate) {\n          this.selectedEndDate = endDate;\n          this.form.get('endDateInput')?.setValue(\n            this.dateAdapter.format(endDate, this.format),\n            { emitEvent: false }\n          );\n        }\n      } else {\n        const parsedDate = this.parseIncomingValue(value);\n        if (parsedDate) {\n          this.selectedDate = parsedDate;\n          this.form.get('dateInput')?.setValue(\n            this.dateAdapter.format(parsedDate, this.format),\n            { emitEvent: false }\n          );\n        }\n      }\n\n      this.lastEmittedValue = value;\n      this.isInternalChange = false;\n      this.updateDatePickerPopup();\n\n      this.cdref.markForCheck();\n    } else {\n      this.resetValues();\n    }\n  }\n\n  resetValues(): void {\n    this.isInternalChange = true;\n    this.selectedDate = null;\n    this.selectedStartDate = null;\n    this.selectedEndDate = null;\n    this.form.get('dateInput')?.setValue('', { emitEvent: false });\n    this.form.get('startDateInput')?.setValue('', { emitEvent: false });\n    this.form.get('endDateInput')?.setValue('', { emitEvent: false });\n    this.lastEmittedValue = null;\n    this.isInternalChange = false;\n    this.updateDatePickerPopup();\n  }\n\n  registerOnChange(fn: any): void {\n    this.onChange = fn;\n  }\n\n  registerOnTouched(fn: any): void {\n    this.onTouch = fn;\n  }\n\n  // ========== Setup Methods ==========\n  setupActiveInputSubscription(): void {\n    this.dpService.activeInput$\n      .pipe(takeUntil(this.destroy$))\n      .subscribe((active: any) => {\n        this.activeInput = active;\n        if (active) {\n          if (!this.isOpen)\n            this.origin = new CdkOverlayOrigin(this.activeInput == 'start'? this.rangePickerInputs?.first: this.rangePickerInputs.last)\n          this.focus();\n        }\n      });\n  }\n\n  setupMouseDownEventHandler(): void {\n    this.ngZone.runOutsideAngular(() =>\n      fromEvent(this.elementRef.nativeElement, 'mousedown')\n        .pipe(takeUntil(this.destroy$))\n        .subscribe((event: any) => {\n          if ((event.target as HTMLInputElement).tagName.toLowerCase() !== 'input') {\n            event.preventDefault();\n          }\n        })\n    );\n  }\n\n  parseDateValue(value: any): Date | null {\n    if (value instanceof Date) {\n      return value;\n    }\n    return this.dateAdapter.parse(value, this.format);\n  }\n\n  parseValueFromFormat(value: string | Date, targetAdapter: AsaDateAdapter<Date>): Date | null {\n    if (!value) return null;\n    if (value instanceof Date) return value;\n\n    return targetAdapter.parse(value, this.format);\n  }\n\n  parseIncomingValue(value: any): Date | null {\n    if (!value) return null;\n    if (value instanceof Date) return value;\n    let parsedDate: Date | null = null;\n\n    // try with value adapter\n    parsedDate = this.valueAdapter.parse(value, this.format);\n    if (parsedDate) return parsedDate;\n\n    return null;\n  }\n\n  // ========== Time Methods ==========\n  hasTimeComponent(format: string): boolean {\n    return /[Hh]|[m]|[s]|[a]/g.test(format);\n  }\n\n  extractTimeFormat(format: string): string {\n    const timeMatch = format.match(/[Hh]{1,2}:mm(?::ss)?(?:\\s*[aA])?/);\n    return timeMatch ? timeMatch[0] : 'HH:mm';\n  }\n\n  extractDateFormat(format: string): string {\n    const dateFormatMatch = format.match(/[yMd\\/.-]+/);\n    return dateFormatMatch ? dateFormatMatch[0] : '';\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { AsaDatePickerComponent } from './asa-date-picker.component';\nimport { DatePickerPopupComponent } from './date-picker-popup/date-picker-popup.component';\nimport { DateMaskDirective } from './utils/input-mask.directive';\nimport { NzConnectedOverlayDirective } from './public-api';\nimport { TimePickerComponent } from './time-picker/time-picker.component';\nimport { CustomTemplate } from './utils/template.directive';\n\n@NgModule({\n  imports: [\n    AsaDatePickerComponent,\n    DatePickerPopupComponent,\n    DateMaskDirective,\n    NzConnectedOverlayDirective,\n    TimePickerComponent,\n    CustomTemplate\n  ],\n  exports: [\n    AsaDatePickerComponent,\n    TimePickerComponent,\n    DatePickerPopupComponent,\n    DateMaskDirective,\n    NzConnectedOverlayDirective,\n    CustomTemplate\n  ]\n})\nexport class AsaDatePickerModule { }\n","/*\n * Public API Surface of asa-date-picker\n */\n\n// Modules\nexport * from './asa-date-picker.module';\n\n// Components\nexport * from './asa-date-picker.component';\nexport * from './time-picker/time-picker.component';\nexport * from './date-picker-popup/date-picker-popup.component';\n\n// Models and Utils\nexport * from './utils/models';\nexport * from './utils/overlay/overlay';\nexport * from './utils/animation/slide';\nexport * from './utils/input-mask.directive';\nexport * from './utils/template.directive';\n\n// Services\nexport * from './asa-date-picker.service';\n\n// Adapters\nexport * from './asa-date-adapter';\n\n// Types\nexport * from './utils/types';\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './public-api';\n"],"names":["i1.lang_Fa","i1.lang_En","i2.DestroyService","isValidJalali","parseJalali","formatJalali","addDaysJalali","addMonthsJalali","addYearsJalali","addHoursJalali","startOfWeekJalali","endOfMonthJalali","isSameDayJalali","isSameMonthJalali","isSameYearJalali","isAfterJalali","isBeforeJalali","startOfMonthJalali","maxJalali","setYearJalali","getDaysInMonthJalali","isValidGregorian","parseGregorian","formatGregorian","addDaysGregorian","addMonthsGregorian","addYearsGregorian","addHoursGregorian","startOfWeekGregorian","isSameDayGregorian","isSameMonthGregorian","isSameYearGregorian","isAfterGregorian","isBeforeGregorian","startOfMonthGregorian","endOfMonthGregorian","maxGregorian","setYearGregorian","getDaysInMonthGregorian","i1","i2.AsaDatePickerService","i3.JalaliDateAdapter","i3.GregorianDateAdapter","i4","takeUntil","i1.AsaDatePickerService","i2.JalaliDateAdapter","i2.GregorianDateAdapter","i1.DestroyService"],"mappings":"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"}}}